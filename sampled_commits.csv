ID,Hash,Subject,Message,Num_files,LOC,changed files | + | -| sum,Labels,
70659,ede39aeb331bf6efb3739d22a60c1844e9c2c3d6,feat: reinterpret `precision` field for strings,"This commit changes the behavior of formatting string arguments  with both width and precision fields set.    Documentation says that the `width` field is the ""minimum width""  that the format should take up. If the value's string does not  fill up this many characters  then the padding specified by  fill/alignment will be used to take up the required space.    This is true for all formatted types except string  which is truncated  down to `precision` number of chars and then all of `fill`  `align` and  `width` fields are completely ignored.    For example: `format!(""{:/^10.8}""  ""1234567890);` emits ""12345678"".  In the contrast Python version works as the expected:  ```python  >>> '{:/^10.8}'.format('1234567890')  '/12345678/'  ```    This commit gives back the `Python` behavior by changing the `precision`  field meaning to the truncation and nothing more. The result string *will*  be prepended/appended up to the `width` field with the proper `fill` char.    However  this is the breaking change.    Also updated `std::fmt` docs about string precision.    Signed-off-by: Evgeny Safronov <division494@gmail.com>   ",3,27,   src/libcore/fmt/mod.rs--11--7--18   src/libcollections/fmt.rs--4--2--6   src/test/run-pass/ifmt.rs--2--1--3,Adaptive,
105917,3d202d7eaebd97e2b98a6c6021dd2bb763356d80,rt: rename nano_time() builtin to match time::precise_time_ns(), ,3,8,   src/libstd/time.rs--2--2--4   src/rt/rust_builtin.cpp--1--1--2   src/rt/rustrt.def.in--1--1--2,Perfective,
37906,11b1d483b2f0e65e049c491c34a0f8573553f4b4,Add a run-make test for command aliases, ,2,23,   src/test/run-make/override-aliased-flags/Makefile--22--0--22   src/test/run-make/override-aliased-flags/main.rs--1--0--1,Adaptive,
80086,4c5029a600bc3c350f2371b736698676600a510b,Fix order of rustdoc arguments.,rust-example-rendered should be a class  not an id.    fixes #26013   ,1,4,   src/librustdoc/html/markdown.rs--2--2--4,Corrective,
3937,23d398b1848571709a0cbb8a08436f6de56d43a8,tree-wide: Fix all the rustdoc warnings, ,5,18,   clippy_utils/src/diagnostics.rs--3--3--6   clippy_utils/src/higher.rs--3--3--6   clippy_lints/src/needless_continue.rs--1--1--2   clippy_lints/src/needless_for_each.rs--1--1--2   clippy_utils/src/ty.rs--1--1--2,Corrective,
81511,700e627cf727873a472b1876238aac10b932258b,test: Fixup many library unit tests, ,26,79,   src/libstd/rand/mod.rs--0--21--21   src/librand/rand_impls.rs--0--5--5   src/libstd/process.rs--0--4--4   src/test/run-make/save-analysis/foo.rs--2--2--4   src/libcoretest/fmt/num.rs--1--2--3   src/libstd/num/strconv.rs--1--2--3   src/libcollections/linked_list.rs--1--1--2   src/libcollectionstest/bench.rs--1--1--2   src/libcollectionstest/bit/vec.rs--1--1--2   src/libcollectionstest/btree/map.rs--1--1--2   src/libcollectionstest/slice.rs--1--1--2   src/libflate/lib.rs--1--1--2   src/librand/lib.rs--1--1--2   src/librustc_back/fs.rs--1--1--2   src/libserialize/json.rs--1--1--2   src/libserialize/lib.rs--1--1--2   src/libstd/collections/hash/map.rs--1--1--2   src/libstd/fs.rs--1--1--2   src/libstd/lib.rs--1--1--2   src/libstd/rand/reader.rs--1--1--2   src/libstd/thread/mod.rs--1--1--2   src/libtest/stats.rs--1--1--2   src/test/run-make/save-analysis/SubDir/mod.rs--1--1--2   src/test/run-make/unicode-input/multiple_files.rs--1--1--2   src/test/run-make/unicode-input/span_length.rs--1--1--2   .../compile-fail/derive-no-std-not-supported.rs--0--1--1,Corrective,
85674,3eda3cde187d791d0647a7ffbf2c23ee75e6bdde,Change default installation directory to %SYSTEMDRIVE%\Rust. Modify user PATH  rather than system PATH., ,1,4,   src/etc/pkg/rust.iss--2--2--4,Perfective,
108404,00daeb485c9a6d2d3cdaaacd4ac610e2f8bff14e,Move type_is_immediate into ty.rs, ,1,22,   src/comp/middle/trans.rs--6--16--22,Perfective,
27527,ae213db0f5d9a513cae9624b1a341f516bb8e1e9,{syntax -> rustc_ast_passes}::show_span, ,4,10,   src/{libsyntax=>librustc_ast_passes}/show_span.rs--3--3--6   src/librustc_interface/passes.rs--1--1--2   src/librustc_ast_passes/lib.rs--1--0--1   src/libsyntax/lib.rs--0--1--1,Perfective,
33722,96fc98904f9e4b16e427f3e8988b7335cd60cf77,test: add test for #61432., ,2,25,   src/test/ui/const-generics/issue-61432.rs--17--0--17   src/test/ui/const-generics/issue-61432.stderr--8--0--8,Perfective,
6354,c5233b7d4bf3c35e5c5809f4b7adbf6220e263ce,Fix typo in internal documentation for `TrustedRandomAccess`,`next_back` is a method of DoubleEndedIterator  not Iterator.   ,1,2,   library/core/src/iter/adapters/zip.rs--1--1--2,Corrective,
52062,73e0c1e968caaf7b70d659e58c0a40782c60f8da,Fix review nits, ,3,14,   src/libsyntax_pos/hygiene.rs--5--5--10   src/libproc_macro/lib.rs--1--1--2   src/libsyntax_pos/lib.rs--1--1--2,Perfective,
49307,9d2999461fbc07a7059363aacf2b0bcf615d322b,"nit: clarify ""keep it around"" comment", ,1,4,   src/librustc_data_structures/graph/scc/mod.rs--2--2--4,Perfective,
84093,a2e277edf49cb05e79c0346de9a145e4ce6754cb,Add enum discriminats to the reference.,Fixes #15755   ,1,21,   src/doc/reference.md--21--0--21,Perfective,
17573,2278c7255a1423b12d0efee3de43b23fa0d5b892,Remove vec-to_str.rs  merge the remaining test in with vec, ,2,10,   src/test/ui/array-slice-vec/vec-to_str.rs--0--7--7   library/alloc/tests/vec.rs--3--0--3,Perfective,
10659,5e29aa6fdf4c8729ffd01c40aa17ad9bd501d1df,lintcheck: add support for path sources, ,4,49,   clippy_dev/src/lintcheck.rs--37--3--40   clippy_dev/README.md--3--2--5   clippy_dev/Cargo.toml--2--1--3   clippy_dev/lintcheck_crates.toml--1--0--1,Adaptive,
60495,7b5f8a36ab94695e8d9b48fa007d72e586e6b8df,try harder to preserve regions when doing inference,This is not complete yet  but it is enough to make unsized-tuple-impls work.   ,2,32,   src/librustc_mir/interpret/validation.rs--28--3--31   src/librustc_mir/interpret/memory.rs--1--0--1,Adaptive,
998,ee3b46689b64f5428b95769cd6d770ff9821690a,Pull in libkvm on FreeBSD, ,1,2,   src/ci/docker/scripts/freebsd-toolchain.sh--1--1--2,Perfective,
68467,8ea426a6ceb0bee93799a4ffbec6e03c95d2c670,Update E0370 to new error format, ,3,67,   src/test/compile-fail/discrim-overflow-2.rs--21--8--29   src/test/compile-fail/discrim-overflow.rs--21--8--29   src/librustc_typeck/collect.rs--5--4--9,Perfective,
31808,8bb81fdc3b8507a0537231d0636dc3964dc44b94,Update dependencies, ,1,50,   Cargo.lock--20--30--50,Perfective,
3389,785309b8b19601e3cf38955c0cbedcd682c7487b,Add make tests for preserving test binaries,fix: #88110   ,2,32,   src/test/run-make/doctests-keep-binaries/Makefile--21--0--21   src/test/run-make/doctests-keep-binaries/t.rs--11--0--11,Perfective,
9522,aa7ac6e957747c0fc2edae126162bdfd8faff69c,Remove notes  increase S/N ratio, ,2,25,   compiler/rustc_ast_lowering/src/expr.rs--8--14--22   .../ui/rfc-2497-if-let-chains/feature-gate.stderr--0--3--3,Perfective,
20959,e855b90a8e159d27e014847ef50d9536aa1249d0,track caller for delay_span_bug, ,2,30,   src/librustc_middle/ty/context.rs--4--22--26   src/librustc_errors/lib.rs--4--0--4,Perfective,
110350,7efb9426394ce5854b906bd3d7394bfc2228a9d0,rt: Remove the now-unused upcall_ivec_resize and upcall_ivec_spill  which allocated from the wrong heap, ,2,42,   src/rt/rust_upcall.cpp--0--40--40   src/rt/rustrt.def.in--0--2--2,Perfective,
106968,d2be5b6c7a20b8b33f61cd0db4a3cbbdd7a5448a,Remove tests for objs  adjust tests that use objs, ,58,398,   src/test/run-pass/obj-docs.rs--0--22--22   src/test/run-pass/anon-obj-cats.rs--0--17--17   src/test/run-pass/anon-obj-no-inner-obj-simple.rs--0--16--16   src/test/run-pass/anon-obj-overriding.rs--0--15--15   src/test/run-pass/item-attributes.rs--1--11--12   src/test/run-pass/anon-obj-with-self-call.rs--0--12--12   src/test/run-pass/nested-obj-self.rs--0--11--11   src/test/run-pass/simple-anon-objs.rs--0--11--11   src/test/run-pass/anon-objs-with-fields.rs--0--10--10   src/test/run-pass/anon-obj-backwarding-2.rs--0--10--10   .../compile-fail/anon-obj-overriding-wrong-type.rs--0--9--9   src/test/run-pass/issue-718.rs--0--9--9   src/test/run-pass/binops.rs--0--9--9   src/test/run-pass/anon-obj-backwarding.rs--0--9--9   src/test/run-pass/generic-obj.rs--0--9--9   .../run-pass/anon-obj-refer-to-parallel-method.rs--0--9--9   src/test/run-pass/obj-self-4.rs--0--9--9   src/test/bench/shootout-fasta.rs--4--4--8   src/test/run-pass/obj-as.rs--0--8--8   src/test/run-pass/anon-obj-degenerate.rs--0--8--8   src/test/run-pass/anon-obj-no-inner-obj.rs--0--8--8   src/test/run-pass/obj-recursion.rs--0--8--8   src/test/run-pass/standalone-method.rs--0--8--8   src/test/run-pass/stateful-obj.rs--0--8--8   src/test/run-pass/anon-obj-overriding-reduced.rs--0--7--7   src/test/run-pass/interface-narrowing.rs--0--7--7   src/test/run-pass/bind-obj-ctor.rs--0--7--7   src/test/run-pass/generic-obj-with-derived-type.rs--0--7--7   src/test/run-pass/obj-self-3.rs--0--7--7   src/test/run-pass/anon-obj-with-self-call-2.rs--0--6--6   src/test/pretty/anon-obj.rs--0--6--6   src/test/run-pass/obj-return-polytypes.rs--0--5--5   src/test/run-pass/obj-self-2.rs--0--5--5   src/test/compile-fail/not-a-pred-3.rs--0--5--5   src/test/compile-fail/self-missing-method.rs--0--5--5   src/test/run-pass/autoderef-objfn.rs--0--5--5   src/test/run-pass/obj-self.rs--0--5--5   src/test/compile-fail/extend-non-object.rs--0--5--5   src/test/run-pass/task-comm.rs--0--5--5   src/test/compile-fail/constructor-as-cast.rs--0--4--4   src/test/run-pass/first-class-method.rs--0--4--4   src/test/run-pass/obj-with-vec.rs--0--4--4   src/test/compile-fail/self-call-non-obj.rs--0--4--4   src/test/run-pass/simple-obj.rs--0--4--4   src/test/run-pass/init-res-into-things.rs--0--4--4   src/test/run-pass/tag-and-generic-obj.rs--0--4--4   src/test/compile-fail/direct-obj-fn-call.rs--0--3--3   src/test/run-pass/obj-drop.rs--0--3--3   src/test/run-pass/conditional-compile.rs--0--3--3   src/test/run-pass/foreach-unique-drop.rs--0--3--3   src/test/compile-fail/no-self-dispatch.rs--0--3--3   src/test/compile-fail/binop-sub-obj.rs--0--2--2   src/test/compile-fail/bad-type-env-capture.rs--1--1--2   src/test/compile-fail/bad-env-capture3.rs--1--1--2   src/test/run-pass/cycle-collection5.rs--1--1--2   src/test/compile-fail/writing-to-immutable-obj.rs--0--2--2   src/test/compile-fail/not-a-pred.rs--1--1--2   src/rustdoc/rustdoc.rs--0--1--1,Perfective,
78585,e318328d63e122b5b3e516a0592367eaa2b6ea93,all: whitespace cleanup,* 4-space indentation  * no trailing whitespace  * no tabs   ,34,247,   src/bit_mask.rs--17--18--35   src/len_zero.rs--14--14--28   src/attrs.rs--9--10--19   src/eq_op.rs--9--9--18   tests/compile-fail/len_zero.rs--8--8--16   tests/compile-fail/approx_const.rs--6--7--13   src/mut_mut.rs--5--6--11   tests/compile-fail/bit_masks.rs--5--5--10   src/ptr_arg.rs--4--5--9   src/approx_const.rs--3--4--7   src/needless_bool.rs--3--4--7   src/unicode.rs--3--4--7   tests/compile-fail/float_cmp.rs--3--3--6   tests/compile-fail/eq_op.rs--3--3--6   tests/compile-fail/cmp_owned.rs--2--3--5   tests/compile-fail/mut_mut.rs--2--3--5   src/collapsible_if.rs--2--2--4   tests/mut_mut_macro.rs--2--2--4   tests/compile-fail/cmp_nan.rs--2--2--4   tests/compile-fail/identity_op.rs--2--2--4   tests/compile-fail/attrs.rs--1--2--3   tests/compile-fail/unicode.rs--1--2--3   tests/compile-fail/collapsible_if.rs--1--1--2   src/utils.rs--1--1--2   src/strings.rs--1--1--2   tests/compile-fail/box_vec.rs--1--1--2   src/identity_op.rs--1--1--2   tests/compile-fail/needless_bool.rs--1--1--2   tests/compile-fail/precedence.rs--1--1--2   tests/compile-fail/ptr_arg.rs--1--1--2   tests/compile-fail/strings.rs--1--1--2   tests/compile-test.rs--1--1--2   README.md--1--1--2   src/eta_reduction.rs--0--1--1,Perfective,
69577,9563f14eb5d77d992f7cde5db227f8c83351427b,demonstrate `RHS != Self` use cases for `Mul` and `Div`,Vector-scalar multipication is a good usecase for this. Thanks #rust!   ,1,54,   src/libcore/ops.rs--54--0--54,Perfective,
52662,ccc049d54797522bf694b834b4a4848251e8e40d,rustbuild: Fix setting initial cargo, ,1,2,   src/bootstrap/config.rs--1--1--2,Corrective,
109037,d0c509ad1b8a13102e7cb6ba2bf1d2dc75e5177e,Remove a bunch of string builtins. Issue #855, ,5,44,   src/rt/rust_builtin.cpp--0--32--32   src/test/run-pass/binops.rs--2--2--4   src/lib/str.rs--0--3--3   src/rt/rustrt.def.in--0--3--3   src/test/run-pass/conditional-compile.rs--1--1--2,Corrective,
85777,796e4b8a885b44342cad8363661069783d3b7fed,Typo, ,1,14,   src/doc/guide-ownership.md--7--7--14,Perfective,
45666,029e2618d007e0aebc1a45f8350f9c89df4d18dc,rustc/ty: simplify common patterns, ,6,66,   src/librustc/ty/error.rs--12--13--25   src/librustc/ty/context.rs--7--10--17   src/librustc/ty/query/plumbing.rs--4--8--12   src/librustc/ty/inhabitedness/def_id_forest.rs--1--6--7   src/librustc/ty/flags.rs--1--3--4   src/librustc/ty/query/on_disk_cache.rs--0--1--1,Perfective,
70151,b901e76ffdf1cb09dee2ebea30aad45ac903fae1,Bump to 0.0.80, ,3,9,   Cargo.toml--2--2--4   CHANGELOG.md--3--0--3   clippy_lints/Cargo.toml--1--1--2,Perfective,
8865,1438207c3d150ce42804e857537b12082c68c79b,use BITS constant, ,1,2,   library/alloc/src/collections/vec_deque/mod.rs--1--1--2,Perfective,
52614,4f6ed513d11baa71d39a1a048a6ccb67846775a1,fix authorship in book.toml, ,1,2,   src/doc/rustc/book.toml--1--1--2,Perfective,
3082,677c786109a5b47b3f143847e278689687d63abb,Move add_rlib and add_native_library to cg_ssa,This deduplicates logic between codegen backends   ,1,58,   src/archive.rs--14--44--58,Perfective,
32587,1962d75c10363e1754df5526ed8fa01d22e42f24,fix mir-opt tests, ,2,36,   src/test/mir-opt/generator-storage-dead-unwind.rs--11--12--23   src/test/mir-opt/box_expr.rs--4--9--13,Corrective,
105552,321fd80219e024cabb7ee539e701bc6b4a258751,Add an infinite loop construct,Add a loop {} construct for infinite loops  and use it in test  cases. See #1906 for details.   ,33,99,   src/rustc/metadata/astencode_gen.rs--12--9--21   src/libstd/uv.rs--6--6--12   src/rustc/middle/tstate/states.rs--3--1--4   src/rustc/syntax/parse/parser.rs--2--2--4   src/rustc/middle/trans/base.rs--3--1--4   src/rustc/middle/tstate/pre_post_conditions.rs--3--0--3   src/libcore/uint.rs--1--1--2   src/rustc/middle/last_use.rs--1--1--2   src/rustc/middle/typeck.rs--1--1--2   src/test/run-pass/terminate-in-initializer.rs--1--1--2   src/rustc/syntax/fold.rs--1--1--2   src/test/run-pass/unreachable-code.rs--1--1--2   src/test/run-pass/weird-exprs.rs--1--1--2   src/rustdoc/markdown_writer.rs--1--1--2   src/rustdoc/page_pass.rs--1--1--2   src/test/bench/shootout-pfib.rs--1--1--2   src/test/bench/task-perf-word-count-generic.rs--1--1--2   src/test/bench/task-perf-word-count.rs--1--1--2   .../block-must-not-have-result-while.rs--1--1--2   src/test/compile-fail/while-bypass.rs--1--1--2   src/test/compile-fail/while-loop-constraints.rs--1--1--2   .../compile-fail/while-loop-pred-constraints.rs--1--1--2   src/test/run-pass/acyclic-unwind.rs--1--1--2   src/test/run-pass/break-value.rs--1--1--2   src/test/run-pass/infinite-loops.rs--1--1--2   src/test/run-pass/issue-687.rs--1--1--2   src/test/run-pass/last-use-corner-cases.rs--1--1--2   src/test/run-pass/last-use-in-block.rs--1--1--2   src/test/run-pass/preempt.rs--1--1--2   src/test/run-pass/send-iloop.rs--1--1--2   src/rustc/syntax/ast.rs--1--0--1   src/rustc/syntax/print/pprust.rs--1--0--1   src/rustc/syntax/visit.rs--1--0--1,Corrective,
73770,b756aecee7a7b1813fb5c12cf11d9f7d7007a546,Uncomment now-working test., ,1,20,   test/loops.rs--10--10--20,Perfective,
88077,9b44dfc7644978592ce7f9d4a683c552a5021cef,rustdoc: Add rustdoc class to <body> tag,This allows for easier application of user stylesheets to rustdocs no  matter where they are hosted.   ,2,4,   src/librustdoc/html/layout.rs--1--1--2   src/librustdoc/markdown.rs--1--1--2,Perfective,
36674,8f3753703c9e4e587fcb9790a07aa18b310b8431,Fix slice const generic length display, ,2,17,   src/test/rustdoc/const-generics/const-generic-slice.rs--12--0--12   src/librustdoc/clean/mod.rs--4--1--5,Corrective,
100010,2d3c22ae590a6ceadd612fbf775f258ca64baa90,arrange core::os::consts, ,7,62,   src/libcore/os.rs--25--15--40   src/librustc/back/link.rs--5--2--7   src/librustc/metadata/loader.rs--4--2--6   src/librustc/driver/driver.rs--1--2--3   src/compiletest/header.rs--1--1--2   src/compiletest/runtest.rs--1--1--2   src/libcargo/cargo.rc--1--1--2,Corrective,
56207,03530ee1a7e9320b518af9cefafbee5d32d8e519,Add tests for hidden types, ,1,27,   src/test/rustdoc/hidden-trait-struct-impls.rs--27--0--27,Perfective,
74142,1a26a32f8c29dbb62481652be765b3f558e8108b,doc: Update Design.md to mention syntex_syntax and config, ,1,37,   Design.md--23--14--37,Perfective,
12516,f18335edb2917a310b69a522e6f3fde30af3d419,bootstrap: convert rustc-src to use Tarball, ,2,70,   src/bootstrap/tarball.rs--28--20--48   src/bootstrap/dist.rs--2--20--22,Perfective,
88329,3e62ad3fb95b96c224e64bd83c98bc94bad5ec65,Remove ancient GC cfg flags, ,1,6,   src/librustc/driver/config.rs--0--6--6,Corrective,
36495,805e270910f892780b06f36f6c4a8bfd29474876,[WIP], ,1,45,   ar_test.rs--45--0--45,Adaptive,
83719,33a3d6d88f76bfae770983ee50e36e23cc4c7655,Thread native name setting  fix #10302, ,3,37,   src/libstd/sys/unix/thread.rs--14--15--29   src/libstd/sys/common/thread_info.rs--4--0--4   src/libstd/thread.rs--0--4--4,Corrective,
73700,dc45d924b6ec0ffc7fadf8763ce5fc91946e2dcd,Adjust error code, ,2,6,   src/librustc_typeck/diagnostics.rs--2--2--4   src/librustc_typeck/coherence/overlap.rs--1--1--2,Corrective,
14648,89eac50a87cbe189976ee8c9f41f19c37f07da3d,Hide outermost_fn_param_pat  it's an internal detail, ,3,12,   compiler/rustc_typeck/src/check/gather_locals.rs--2--6--8   compiler/rustc_typeck/src/check/check.rs--1--1--2   compiler/rustc_typeck/src/check/mod.rs--1--1--2,Perfective,
80408,ee64bab76cdaa375cc015a5eb3e3fd7581d2a7b3,mk: Don't add cross prefixes for MSVC,Currently the MSVC compilers don't have any cross prefixes and we're only able  to make an MSVC compiler with a cross compile  so just avoid this logic on msvc  for now.   ,1,2,   mk/platform.mk--2--0--2,Perfective,
64809,2b07d0d853aa616e89c52549311325253af236ec,inhibit enum layout optimizations under `#[repr(C)]` or `#[repr(u8)]`,Fixes #40029   ,3,34,   src/test/run-pass/enum-layout-optimization.rs--27--0--27   src/librustc/ty/mod.rs--4--0--4   src/librustc/ty/layout.rs--2--1--3,Corrective,
40527,6536dbb640232f4f61fd7c6b4b129b7564cefff2,hir: HirId-ify intravisit, ,20,86,   src/librustc/hir/intravisit.rs--10--11--21   src/librustc/hir/map/collector.rs--9--8--17   src/librustc/lint/context.rs--4--4--8   src/librustc/hir/map/hir_id_validator.rs--3--3--6   src/librustc/lint/mod.rs--1--2--3   src/librustc_privacy/lib.rs--1--2--3   src/librustc/hir/lowering.rs--1--1--2   src/librustc/middle/dead.rs--1--1--2   src/librustc/middle/liveness.rs--1--1--2   src/librustc/middle/stability.rs--1--1--2   src/librustc_lint/builtin.rs--1--1--2   src/librustc_lint/nonstandard_style.rs--1--1--2   src/librustc_metadata/encoder.rs--1--1--2   src/librustc_mir/transform/mod.rs--1--1--2   src/librustc_passes/hir_stats.rs--1--1--2   src/librustc_typeck/check/method/suggest.rs--1--1--2   src/librustc_typeck/check/mod.rs--1--1--2   src/librustc_typeck/check/regionck.rs--1--1--2   src/librustdoc/test.rs--1--1--2   .../auxiliary/issue-40001-plugin.rs--1--1--2,Adaptive,
16954,f583513dc2ad48076665505a1418db6053657f0b,Intorduced MiniMap - a tiny small storage optimized map implementation,This makes everything about 1% faster in rustc-perf   mostly negating performance hit of previous commit.   ,3,33,   compiler/rustc_infer/src/infer/combine.rs--30--1--31   Cargo.lock--1--0--1   compiler/rustc_infer/Cargo.toml--1--0--1,Adaptive,
108704,ea670992348f8a80fe467dd8ef73a3d2acd0232b,Add support for mutable unique boxes,Issue #409   ,2,7,   src/test/run-pass/unique-mutable.rs--5--0--5   src/comp/middle/mut.rs--1--1--2,Perfective,
40452,b96c4329dbe2812c6bd3a11bd3fde38a68fa6b58,Add `#[rustfmt::skip]` to methods tests,Many people run rustfmt automatically on save. Format-dependent tests  should be marked with `#[rustfmt::skip]` to prevent accidental  reformatting from this. As a bonus the rest of the code can the formatted.   ,2,51,   tests/ui/methods.stderr--24--25--49   tests/ui/methods.rs--2--0--2,Perfective,
40859,c8752415dc0775960accc5f6ae11be782910b3c6,Add rustdoc index page test for future deprecation attributes, ,1,2,   src/test/rustdoc/deprecated-future.rs--2--0--2,Perfective,
33035,72058a6d0d63fef5705e6f4d040b1dff3ce7affd,Simplify   removing a FIXME, ,1,5,   clippy_lints/src/utils/mod.rs--2--3--5,Perfective,
66454,292d36febdf2ceaa73c41e2e46b41a5719394c2f,Add missing doc examples for Builder, ,1,48,   src/libstd/thread/mod.rs--45--3--48,Perfective,
10531,1abc1e2a43c116a87bd430fa14a86e67617b861a,Add test for non_fmt_panic lint for panic!(some_macro!())., ,2,24,   src/test/ui/non-fmt-panic.stderr--17--1--18   src/test/ui/non-fmt-panic.rs--6--0--6,Perfective,
18133,18f47d81dae6740a4b62262cf2518ea1cfe19e62,Misleading documentation for derived Ord/PartialOrd implementation for enums #75620, ,1,4,   library/core/src/cmp.rs--2--2--4,Perfective,
31880,e676998b6180f48333300de065e156ad166bb7b5,Rustup to rustc 1.40.0-nightly (084beb83e 2019-09-27), ,3,42,   patches/0017-Fix-libtest-compilation.patch--16--6--22   .../0020-libtest-Don-t-require-panic_unwind.patch--0--11--11   patches/0018-test-Force-single-thread-mode.patch--0--9--9,Adaptive,
91670,6132f7f6660c29fe3fc02422b7047246033db84f,rustdoc: Remove io_error usage, ,7,63,   src/librustdoc/html/render.rs--21--19--40   src/librustdoc/html/format.rs--7--6--13   src/librustdoc/html/escape.rs--1--1--2   src/librustdoc/html/layout.rs--1--1--2   src/librustdoc/html/markdown.rs--1--1--2   src/librustdoc/lib.rs--1--1--2   src/librustdoc/test.rs--1--1--2,Perfective,
41238,748970dfa9c12c1a09da4ff3ec724e4dbf7e796d,liballoc: apply uniform_paths., ,9,39,   src/liballoc/collections/mod.rs--5--5--10   src/liballoc/borrow.rs--4--4--8   src/liballoc/raw_vec.rs--2--2--4   src/liballoc/slice.rs--2--2--4   src/liballoc/tests/vec_deque.rs--2--2--4   src/liballoc/collections/btree/map.rs--2--1--3   src/liballoc/alloc.rs--1--1--2   src/liballoc/collections/btree/search.rs--1--1--2   src/liballoc/task.rs--1--1--2,Perfective,
15536,12a294121422a223a8d0a6a9974efbe7577977e7,Move llvm_util::time_trace_profiler_finish call to join_codegen,This makes it also run when compilation has failed  neither --emit exe  nor --emit metadata is passed  or -Zno-link is used.   ,1,12,   compiler/rustc_codegen_llvm/src/lib.rs--6--6--12,Perfective,
100878,93a0763d53f7b6f036e5624f89eaac28ea452fe8,libsyntax: Don't write a ctor ID for struct-like enum variants. rs=rustbot, ,1,2,   src/libsyntax/parse/parser.rs--1--1--2,Perfective,
3768,79e402e9e0e87a5e5a174c012dfded53dec85769,Allow the iOS toolchain to be built on Linux,"The iOS toolchain can be built on Linux with minor changes. The  compilation will invoke `xcrun` to find the path to the iPhone SDK but  a fake `xcrun` executable can be used.    ```  #!/bin/sh  echo ""/path/to/sdk""  ```    The iOS toolchain can then be built and linked with rustup.    ```  $ ./x.py build --stage 2 --host x86_64-unknown-linux-gnu \    	 --target aarch64-apple-ios  $ rustup toolchain link stage1 build/x86_64-unknown-linux-gnu/stage1  ```    It's possible to take this toolchain and compile an iOS executable  with it. This requires the ld64 linker and an iOS SDK. The ld64 linker  can be taken from  [cctools](https://github.com/tpoechtrager/cctools-port). A project's  .cargo/config can then be edited to use the linker for this target.    ```  [target.aarch64-apple-ios]  linker = ""/path/to/cctools/bin/arm-apple-darwin-ld""  rustflags = [      ""-C""       """"""  link-args=      -F/path/to/sdk/System/Library/Frameworks      -L/path/to/sdk/usr/lib      -L/path/to/sdk/usr/lib/system/      -adhoc_codesign      """"""   ]  ```   ",1,5,   src/bootstrap/sanity.rs--0--5--5,Corrective,
53704,1a16271d1cc64e89f6c0acc7803b9d6fa25bf131,added ascii_ctypes feature to libcore tests module, ,1,1,   src/libcore/tests/lib.rs--1--0--1,Perfective,
98291,c4d2b7999a12b8c9111ae1d897c476c052ddc05a,Add Clone derivation for std::net::url types., ,1,6,   src/libstd/net_url.rs--3--3--6,Adaptive,
66295,1765a3fd30b12e8647e79f9caf873c800df42bf9,Add pretty printing of unions in debuggers,Fixes #37479   ,3,25,   src/etc/debugger_pretty_printers_common.py--10--6--16   src/test/debuginfo/union-smoke.rs--2--3--5   src/etc/lldb_rust_formatters.py--3--1--4,Perfective,
39447,64382f4b78bdca6bea1dd06e4a1039646b04ae93,Greatly improve generics handling in rustdoc search, ,5,59,   src/librustdoc/clean/mod.rs--39--2--41   src/librustc_typeck/collect.rs--10--2--12   src/librustdoc/html/render.rs--2--1--3   src/librustdoc/clean/inline.rs--1--1--2   src/librustc_typeck/lib.rs--1--0--1,Perfective,
23474,fd0e2987eda697cfa1ec754021477f54a46645aa,rustc_target: Inherit `windows_uwp_msvc_base` from `windows_msvc_base`, ,1,23,   src/librustc_target/spec/windows_uwp_msvc_base.rs--4--19--23,Perfective,
68648,7c34d9c14492b54eba84b474087980e675eed521,Haiku: Use common thread set_name stub, ,1,12,   src/libstd/sys/unix/thread.rs--5--7--12,Perfective,
84288,2b8678cf5df2b3521ed88b8aea8d7699799e67a0,Give where clauses priority over builtin rules. Fixes #20959., ,2,30,   ...t-false-ambiguity-where-clause-builtin-bound.rs--22--0--22   src/librustc/middle/traits/select.rs--8--0--8,Corrective,
24428,b60d732efe924931f377e1f552ce6290b2ba8393,rustc_hir: nix rustc_errors dep, ,9,44,   .../traits/object_safety.rs--11--11--22   src/librustc_hir/hir.rs--3--4--7   src/librustc_typeck/check/coercion.rs--3--2--5   src/librustc_typeck/astconv.rs--1--2--3   .../traits/error_reporting/mod.rs--1--1--2   src/librustc_typeck/check/method/suggest.rs--1--1--2   Cargo.lock--0--1--1   src/librustc_hir/Cargo.toml--0--1--1   src/librustc_hir/lib.rs--1--0--1,Perfective,
61870,3b9fe77bfcd4c800fab8afcdcc82d31facdc515b,Fix NaN handling in is_sign_negative/positive,See #42425   ,4,86,   src/libstd/f64.rs--8--18--26   src/libstd/f32.rs--8--16--24   src/libcore/num/f32.rs--13--6--19   src/libcore/num/f64.rs--11--6--17,Corrective,
84592,5d6a6f59575ab389bb6c2f199e5723923a68ab1d,rustc: remove dead code, ,2,18,   src/librustc/middle/ty.rs--0--17--17   src/librustc/middle/infer/coercion.rs--0--1--1,Perfective,
43417,ac47bd725ff6e9d0359acd2ac794232f94105d0c,Fix a compile-fail test, ,1,2,   src/test/compile-fail/const-fn-error.rs--1--1--2,Corrective,
67254,b1f86fb7c30c6296a9c2e07d3a58795bca8c4cf4,Inspect def locally instead of using a method, ,2,18,   src/librustc/hir/def.rs--3--8--11   src/librustc_save_analysis/lib.rs--6--1--7,Perfective,
59149,2c03c57bf5ac9e106440ea474827be16092f1807,Dont do no-trans for llvm enabled builds, ,4,13,   src/bootstrap/builder.rs--6--0--6   src/librustc_metadata/Cargo.toml--3--0--3   src/bootstrap/bin/rustc.rs--1--1--2   src/librustc_driver/Cargo.toml--1--1--2,Perfective,
113071,e558ff907f1df4a2b67a58d37cbc11c0172d1eb6,rustc: Allow callees to use alias args, ,1,15,   src/comp/middle/trans.rs--9--6--15,Perfective,
86115,b64c7b83dd08c7c3afc643564d65975d57785172,Refactor QPath to take an ast::TraitRef, ,16,63,   src/librustc/middle/typeck/astconv.rs--6--15--21   src/librustc/middle/resolve.rs--1--9--10   src/librustc/middle/typeck/collect.rs--2--3--5   src/libsyntax/fold.rs--3--1--4   ...alified-path-with-trait-with-type-parameters.rs--3--0--3   src/librustc/middle/traits/mod.rs--1--1--2   src/librustc/middle/traits/select.rs--1--1--2   src/librustc/middle/traits/util.rs--1--1--2   src/libsyntax/ast.rs--1--1--2   src/libsyntax/parse/parser.rs--1--1--2   src/libsyntax/print/pprust.rs--1--1--2   src/libsyntax/visit.rs--1--1--2   .../associated-types-in-ambiguous-context.rs--1--1--2   .../associated-types-in-wrong-context.rs--1--1--2   src/librustc/middle/subst.rs--1--0--1   src/librustc/util/common.rs--1--0--1,Perfective,
43549,ccff495b62bc86e2e18ec93795c453b9e1d4cd26,Error on line overflow, ,1,2,   rustfmt.toml--2--0--2,Perfective,
68160,903e30b50365ef18c047c4f552622dce2529a559,"Quick fix for ""impl Trait""","* Remove ""TODO"" conversion  * Add a couple of simple test cases    Fix courtesy of @signaraiona   ",3,13,   src/types.rs--2--3--5   tests/source/type.rs--4--0--4   tests/target/type.rs--4--0--4,Perfective,
44257,06cf9ae7f98f06cde8424ce569efe72c0728c252,Fix return type of forget intrinsic, ,1,2,   src/librustc_typeck/check/intrinsic.rs--1--1--2,Corrective,
8947,0069007d5b17b19bf6a7686dec7dee7be46dcd47,Avoid nightly feature usage where easily possible, ,4,38,   src/base.rs--10--14--24   example/mini_core_hello_world.rs--1--4--5   src/pretty_clif.rs--1--4--5   src/lib.rs--0--4--4,Perfective,
2652,4e8701e6200d114d9576f8cdf9721b0a81de0118,Fix debuginfo for ScalarPair abi parameters,Mark all of these as locals so the debugger does not try to interpret  them as being a pointer to the value. This extends the approach used in  PR #81898.   ,2,44,   compiler/rustc_codegen_ssa/src/mir/debuginfo.rs--10--15--25   src/test/debuginfo/msvc-scalarpair-params.rs--10--9--19,Corrective,
85994,02355b87261385533b46bbce632aeb5f9baf3bf4,Clean up some logic/formatting in JSON module, ,1,47,   src/libserialize/json.rs--22--25--47,Perfective,
13465,d4ee2f6dc5ba9d9e978ac052079ae3f6a5d4551b,Move const ip in ui test to unit test, ,2,19,   src/test/ui/consts/std/net/ip.rs--0--13--13   library/std/src/net/ip/tests.rs--6--0--6,Perfective,
62162,bb215e2b891b464b5b3262d05c63b226734df1ee,Correct README.md, ,1,6,   README.md--1--5--6,Corrective,
63656,3092ac40b617ec26dc03cd56558267be03c25cbd,change note for patterns, ,4,8,   src/librustc/traits/error_reporting.rs--1--1--2   src/test/compile-fail/issue-12187-1.rs--1--1--2   src/test/compile-fail/issue-12187-2.rs--1--1--2   src/test/ui/type-check/cannot_infer_local_or_vec_in_tuples.stderr--1--1--2,Perfective,
34281,82b3b8229b2a99d499220caa0712cca02b697c70,don't set RUSTC_DEBUG_ASSERTIONS here; let cargo-miri do that, ,1,2,   src/bootstrap/test.rs--0--2--2,Perfective,
62765,45dd0632bc63a04cdc1499a392d83139e2e8c348,rename `parameter_environment` to `param_env`, ,24,88,   src/librustc/infer/mod.rs--5--5--10   src/librustc/traits/mod.rs--4--4--8   src/librustc/ty/mod.rs--3--3--6   src/librustc_typeck/check/regionck.rs--3--3--6   src/librustc_typeck/coherence/builtin.rs--3--3--6   src/librustc/traits/specialize/mod.rs--2--2--4   src/librustc/ty/layout.rs--2--2--4   src/librustc_lint/builtin.rs--2--2--4   src/librustc_mir/transform/qualify_consts.rs--2--2--4   src/librustc_typeck/check/compare_method.rs--2--2--4   src/librustc_typeck/check/method/probe.rs--2--2--4   src/librustc_typeck/check/mod.rs--2--2--4   src/librustc/ty/maps.rs--1--1--2   src/librustc_borrowck/borrowck/check_loans.rs--1--1--2   src/librustc_borrowck/borrowck/mir/elaborate_drops.rs--1--1--2   src/librustc_borrowck/borrowck/mir/mod.rs--1--1--2   src/librustc_const_eval/check_match.rs--1--1--2   src/librustc_mir/build/mod.rs--1--1--2   src/librustc_mir/hair/cx/mod.rs--1--1--2   src/librustc_mir/shim.rs--1--1--2   src/librustc_mir/transform/inline.rs--1--1--2   src/librustc_mir/transform/type_check.rs--1--1--2   src/librustc_passes/consts.rs--1--1--2   src/librustc_typeck/check/dropck.rs--1--1--2,Perfective,
33249,c8e474871ab5c13b0bdd92caecfb0bbc99f96541,Update BufWriter example to include call to flush(), ,1,13,   src/libstd/io/buffered.rs--7--6--13,Perfective,
76101,f34e6ff084ec6b7260e2014cbe09f4f44993ea63,Copy in some documentation about which casts are legal, ,1,35,   src/doc/book/casting-between-types.md--32--3--35,Perfective,
33502,30b841dce0a1c0f26588f4b5791a9eda1c1f42f4,parser: improve or-patterns recovery., ,1,15,   src/libsyntax/parse/parser/pat.rs--11--4--15,Perfective,
91126,ec57db083ff10fc4da0a2f25df5acf1d4398e560,rustc: Add the concept of a Strict Version Hash,This new SVH is used to uniquely identify all crates as a snapshot in time of  their ABI/API/publicly reachable state. This current calculation is just a hash  of the entire crate's AST. This is obviously incorrect  but it is currently the  reality for today.    This change threads through the new Svh structure which originates from crate  dependencies. The concept of crate id hash is preserved to provide efficient  matching on filenames for crate loading. The inspected hash once crate metadata  is opened has been changed to use the new Svh.    The goal of this hash is to identify when upstream crates have changed but  downstream crates have not been recompiled. This will prevent the def-id drift  problem where upstream crates were recompiled  thereby changing their metadata   but downstream crates were not recompiled.    In the future this hash can be expanded to exclude contents of the AST like doc  comments  but limitations in the compiler prevent this change from being made at  this time.    Closes #10207   ,19,141,   src/librustc/back/svh.rs--31--0--31   src/librustc/metadata/loader.rs--14--10--24   src/librustc/back/link.rs--8--9--17   src/librustc/lib.rs--4--7--11   src/librustc/metadata/creader.rs--5--4--9   src/librustc/middle/trans/base.rs--4--3--7   src/test/compile-fail/changing-crates.rs--6--0--6   src/librustc/metadata/decoder.rs--3--2--5   src/test/auxiliary/changing-crates-b.rs--5--0--5   src/test/auxiliary/changing-crates-a1.rs--4--0--4   src/test/auxiliary/changing-crates-a2.rs--4--0--4   src/test/compile-fail/bad-crate-id.rs--4--0--4   src/librustc/metadata/encoder.rs--1--2--3   src/librustc/driver/driver.rs--1--1--2   src/librustc/metadata/common.rs--1--1--2   src/librustc/metadata/cstore.rs--1--1--2   src/librustc/middle/trans/intrinsic.rs--1--1--2   src/librustc/middle/ty.rs--1--1--2   mk/clean.mk--1--0--1,Adaptive,
88471,731f44de454dff23d655f93705c3db002216fac4,debuginfo: Don't crash when encountering global variable with unknown source span., ,1,13,   src/librustc/middle/trans/debuginfo.rs--7--6--13,Corrective,
22280,744449433004fbdc3d0d665551e59ca2880f0552,Run rustfmt, ,1,7,   src/librustc_codegen_ssa/back/link.rs--1--6--7,Perfective,
89924,e0d43b023ed219d47c0785f10c62a62350aa4ea1,core: Implement necessary traits for ~[T]/~str,Coherence requires that libcore's traits be implemented in libcore for ~[T] and  ~str (due to them being language defined types). These implementations cannot  live in libcore forever  but for now  until Heap/Box/Uniq is a lang item  these  implementations must reside inside of libcore. While not perfect  implementations  these shouldn't reside in libcore for too long.    With some form of lang item these implementations can be in a proper crate  because the lang item will not be present in libcore.   ,2,41,   src/libcore/should_not_exist.rs--40--0--40   src/libcore/lib.rs--1--0--1,Adaptive,
24278,260cfaba1259e8551aec02ef4b846900517be8e5,Don't allow access to the Session., ,5,19,   src/librustc/ty/query/plumbing.rs--5--3--8   src/librustc_query_system/query/config.rs--3--4--7   src/librustc_query_system/query/plumbing.rs--1--1--2   Cargo.lock--0--1--1   src/librustc_query_system/Cargo.toml--0--1--1,Corrective,
108530,f22601321f3844ea009ece6d410353644aaf8ec2,rustc: Fix call signature for call_c_stack, ,1,25,   src/comp/back/upcall.rs--7--18--25,Perfective,
24503,c923f045ce84ac846a732e0428e8458d6a61725d,rustc_codegen_llvm: don't generate Self type debuginfo for methods for -Cdebuginfo=1., ,1,7,   src/librustc_codegen_llvm/debuginfo/mod.rs--6--1--7,Adaptive,
67164,67a24c2e184b8c7f515d52225b8f67f94abe6ff2,add hint to fix error for immutable ref in arg, ,15,65,   src/librustc_borrowck/borrowck/mod.rs--13--8--21   ...orrowck-borrow-overloaded-auto-deref-mut.stderr--14--0--14   .../borrowck-call-is-borrow-issue-12224.stderr--7--0--7   .../borrowck-borrow-overloaded-deref-mut.stderr--6--0--6   src/test/ui/span/mut-arg-hint.rs--5--0--5   src/test/ui/span/mut-arg-hint.stderr--5--0--5   src/test/ui/span/borrowck-object-mutability.stderr--3--0--3   .../borrowck-call-method-from-mut-aliasable.stderr--2--0--2   src/test/ui/span/borrowck-fn-in-const-b.stderr--2--0--2   .../borrowck-borrow-overloaded-auto-deref-mut.rs--0--0--0   .../span}/borrowck-borrow-overloaded-deref-mut.rs--0--0--0   .../span}/borrowck-call-is-borrow-issue-12224.rs--0--0--0   .../borrowck-call-method-from-mut-aliasable.rs--0--0--0   .../borrowck=>ui/span}/borrowck-fn-in-const-b.rs--0--0--0   .../span}/borrowck-object-mutability.rs--0--0--0,Adaptive,
37333,59a382122fb09e2a9b4629e36efbc63a321eab6a,Simplify use of keyword symbols, ,58,140,   src/libsyntax/parse/parser.rs--11--10--21   src/librustc_resolve/lib.rs--2--2--4   src/libsyntax/parse/token.rs--2--2--4   src/libsyntax_pos/symbol.rs--1--2--3   src/librustc/hir/map/mod.rs--1--1--2   src/librustc/hir/mod.rs--1--1--2   src/librustc/hir/print.rs--1--1--2   src/librustc/middle/liveness.rs--1--1--2   src/librustc/middle/resolve_lifetime.rs--1--1--2   src/librustc/ty/mod.rs--1--1--2   src/librustc/ty/print/pretty.rs--1--1--2   src/librustc/ty/sty.rs--1--1--2   src/librustc_codegen_ssa/mir/mod.rs--1--1--2   src/librustc_lint/builtin.rs--1--1--2   src/librustc_lint/unused.rs--1--1--2   src/librustc_macros/src/symbols.rs--1--1--2   src/librustc_metadata/encoder.rs--1--1--2   src/librustc_mir/borrow_check/mutability_errors.rs--1--1--2   .../nll/region_infer/error_reporting/mod.rs--1--1--2   .../region_infer/error_reporting/region_name.rs--1--1--2   src/librustc_mir/build/mod.rs--1--1--2   src/librustc_passes/ast_validation.rs--1--1--2   src/librustc_privacy/lib.rs--1--1--2   src/librustc_resolve/build_reduced_graph.rs--1--1--2   src/librustc_resolve/diagnostics.rs--1--1--2   src/librustc_resolve/macros.rs--1--1--2   src/librustc_resolve/resolve_imports.rs--1--1--2   src/librustc_typeck/check/mod.rs--1--1--2   src/librustc_typeck/collect.rs--1--1--2   src/librustc/ty/context.rs--1--1--2   src/librustdoc/html/layout.rs--1--1--2   src/libsyntax/ast.rs--1--1--2   src/libsyntax/attr/mod.rs--1--1--2   src/libsyntax/diagnostics/plugin.rs--1--1--2   src/libsyntax/ext/base.rs--1--1--2   src/libsyntax/ext/build.rs--1--1--2   src/libsyntax/ext/expand.rs--1--1--2   src/libsyntax/ext/placeholders.rs--1--1--2   src/libsyntax/ext/tt/macro_parser.rs--1--1--2   src/libsyntax/ext/tt/macro_rules.rs--1--1--2   src/libsyntax/ext/tt/quoted.rs--1--1--2   src/libsyntax/mut_visit.rs--1--1--2   src/libsyntax/parse/literal.rs--1--1--2   src/librustc/hir/lowering.rs--1--1--2   src/librustc/hir/map/def_collector.rs--1--1--2   src/libsyntax/print/pprust.rs--1--1--2   src/libsyntax/std_inject.rs--1--1--2   src/libsyntax/test.rs--1--1--2   src/libsyntax/util/parser.rs--1--1--2   src/libsyntax_ext/deriving/clone.rs--1--1--2   src/librustdoc/clean/mod.rs--1--1--2   src/libsyntax_ext/deriving/generic/ty.rs--1--1--2   src/libsyntax_ext/env.rs--1--1--2   src/libsyntax_ext/proc_macro_decls.rs--1--1--2   src/libsyntax_ext/proc_macro_server.rs--1--1--2   src/libsyntax_ext/trace_macros.rs--1--1--2   src/libsyntax_pos/hygiene.rs--1--1--2   src/libsyntax_ext/deriving/generic/mod.rs--1--1--2,Perfective,
55070,c01bfbd02b57a1aa9d8a39cd907f799d23c2a230,refactor `structurally_resolve_type`,the `or_else` part was dead code.   ,1,36,   src/librustc_typeck/check/mod.rs--9--27--36,Perfective,
87219,8e58f3088b5c86339f8d2cdbdb37d1c54af08bca,implement entry API for HashMap,"Deprecates the `find_or_*` family of ""internal mutation"" methods on `HashMap` in  favour of the ""external mutation"" Entry API as part of RFC 60. Part of #17320   although this still needs to be done on the rest of the maps  they don't have  any internal mutation methods defined  so they can be done without deprecating  or breaking anything. Work on `BTree`'s is part of the complete rewrite in #17334.    The implemented API deviates from the API described in the RFC in two key places:    * `VacantEntry.set` yields a mutable reference to the inserted element to avoid code  duplication where complex logic needs to be done *regardless* of whether the entry  was vacant or not.  * `OccupiedEntry.into_mut` was added so that it is possible to return a reference  into the map beyond the lifetime of the Entry itself  providing functional parity  to `VacantEntry.set`.    This allows the full find_or_insert functionality to be implemented using this API.  A PR will be submitted to the RFC to amend this.    [breaking-change]   ",3,37,   src/libstd/collections/hashmap/map.rs--33--1--34   src/jemalloc--1--1--2   src/libstd/collections/hashmap/mod.rs--1--0--1,Adaptive,
29558,7d01b6ccf0232c8bb1de73033d05c3e5e89b463f,Simplify early exits., ,1,25,   src/librustc_driver/lib.rs--9--16--25,Perfective,
27963,1b7c404d4bf5b28f61da14f84fe73c62862f5963,bootstrap: Allow for setting the ThinLTO import limit used for compiler the compiler., ,3,25,   src/bootstrap/builder.rs--15--0--15   config.toml.example--7--0--7   src/bootstrap/config.rs--3--0--3,Perfective,
62514,a65ced5d161d31e7e5b097b36bff0f51ec0843bc,rustc: avoid using MethodCallee's signature where possible., ,12,46,   src/librustc/middle/mem_categorization.rs--9--12--21   src/librustc_mir/hair/cx/expr.rs--3--1--4   src/librustc_typeck/check/regionck.rs--1--2--3   src/librustc/cfg/construct.rs--1--1--2   src/librustc/middle/effect.rs--1--1--2   src/librustc/middle/expr_use_visitor.rs--1--1--2   src/librustc/middle/liveness.rs--1--1--2   src/librustc_borrowck/borrowck/check_loans.rs--1--1--2   .../borrowck/gather_loans/gather_moves.rs--1--1--2   .../borrowck/gather_loans/move_error.rs--1--1--2   src/librustc_borrowck/borrowck/mod.rs--1--1--2   src/librustc_borrowck/borrowck/move_data.rs--1--1--2,Perfective,
48478,75ff0ddb4349eca292016a29402980205c181d3f,Use suggestions for shell format arguments, ,4,36,   src/libsyntax_ext/format_foreign.rs--15--11--26   src/test/ui/macros/format-foreign.stderr--6--1--7   src/test/ui/macros/format-unused-lables.stderr--1--1--2   src/test/ui/macros/format-foreign.rs--1--0--1,Adaptive,
56589,8ba9f9ecf05df8cf800f928efa72a8300d90240c,Tidy: allow feature-gate tests to be ui tests,ui tests are the future  especially since the  recent improvement where we have gained  checking and requiring of //~ERROR comments.    The tidy feature-gate test check is intended  to be 50% an actual insurance that there is  a check  and 50% to be a teacher that such  checks are required.    With this commit applied  newbies might  interpret stuff wrongly and create tests  that don't fail but succeed instead.    This is not what feature gate tests are  for though. Therefore  in a later step   when only ui tests are allowed to be feature  gate tests  we will add checking to ensure  that a file marked as gate test is actually  required to be a compilation failure.    Right now implementing such a check is a  bit annoying as one needs to only do it  when the compile-fail test is in the  ui test suite :/.   ,1,10,   src/tools/tidy/src/features.rs--6--4--10,Perfective,
96947,aef1e10eba812b8144b0a4ac8d9b6e690c6e5ca7,Remove unnecessary 'use' forms,Fix a laundry list of warnings involving unused imports that glutted  up compilation output.  There are more  but there seems to be some  false positives (where 'remedy' appears to break the build)  but this  particular set of fixes seems safe.   ,25,80,   src/libstd/task/mod.rs--5--5--10   src/libstd/task/spawn.rs--3--3--6   src/librustdoc/astsrv.rs--3--2--5   src/libstd/local_data.rs--3--2--5   src/libextra/test.rs--1--3--4   src/libextra/uv_global_loop.rs--1--3--4   src/librustc/back/link.rs--1--3--4   src/librustc/back/passes.rs--2--2--4   src/librustdoc/markdown_writer.rs--1--3--4   src/libsyntax/parse/token.rs--1--3--4   src/libextra/bitv.rs--1--2--3   src/librustc/middle/trans/glue.rs--1--2--3   src/librustdoc/extract.rs--1--2--3   src/librustdoc/unindent_pass.rs--1--2--3   src/libstd/cell.rs--1--2--3   src/libstd/unstable/mod.rs--1--2--3   src/libsyntax/ext/pipes/ast_builder.rs--1--2--3   src/libstd/trie.rs--0--2--2   src/librustc/middle/trans/foreign.rs--0--1--1   src/librustc/middle/ty.rs--0--1--1   src/libstd/iterator.rs--0--1--1   src/libstd/rand/distributions.rs--0--1--1   src/libstd/rt/task.rs--0--1--1   src/libstd/util.rs--0--1--1   src/libsyntax/parse/parser.rs--0--1--1,Perfective,
106808,b4fc99e09e5ef907b1de80919764852211fdc10c,dist: Add bin directory to system PATH in win32 installer, ,1,51,   src/etc/pkg/rust.nsi--51--0--51,Adaptive,
81269,f43c86cda46a423b947be427a5fea2614ca569dc,unstabilize Words struct,Words struct was stabilied by mistake. Unstabilize.   ,2,4,   src/librustc_unicode/u_str.rs--2--1--3   src/libcollections/lib.rs--1--0--1,Corrective,
39249,5113e73e81945ab5bedce96d635845932302afd4,Update books, ,9,20,   src/doc/unstable-book/src/language-features/plugin.md--3--3--6   src/ci/docker/x86_64-gnu-tools/checktools.sh--2--0--2   src/doc/book--1--1--2   src/doc/edition-guide--1--1--2   src/doc/embedded-book--1--1--2   src/doc/reference--1--1--2   src/doc/rust-by-example--1--1--2   src/bootstrap/builder.rs--1--0--1   src/bootstrap/test.rs--1--0--1,Perfective,
66943,9976f5f7c551edb557b0f4633dfcd772cf040a2b,Add missing doc examples for SocketAddr struct, ,1,36,   src/libstd/sys/unix/ext/net.rs--36--0--36,Perfective,
49829,05994779ea953bdbd7fb015e1afffdd91203a1e8,Move everything over from `middle::const_val` to `mir::interpret`, ,34,113,   src/librustc/middle/const_val.rs--0--27--27   src/librustc/mir/interpret/error.rs--22--1--23   src/librustc/ich/impls_ty.rs--1--1--2   src/librustdoc/clean/mod.rs--1--1--2   src/librustc/mir/interpret/mod.rs--1--1--2   src/librustc/mir/interpret/value.rs--2--0--2   src/librustc/mir/mod.rs--1--1--2   src/librustc/traits/fulfill.rs--1--1--2   src/librustc/traits/mod.rs--1--1--2   src/librustc/traits/project.rs--1--1--2   src/librustc/traits/query/normalize.rs--1--1--2   src/librustc/ty/flags.rs--1--1--2   src/librustc/ty/fold.rs--1--1--2   src/librustc/ty/mod.rs--1--1--2   src/librustc/ty/query/mod.rs--1--1--2   src/librustc/ty/relate.rs--1--1--2   src/librustc/ty/structural_impls.rs--1--1--2   src/librustc/ty/sty.rs--1--1--2   src/librustc/ty/walk.rs--1--1--2   src/librustc/ty/wf.rs--1--1--2   src/librustc/util/ppaux.rs--1--1--2   src/librustc_codegen_llvm/base.rs--1--1--2   src/librustc_codegen_llvm/mir/constant.rs--1--1--2   src/librustc_codegen_llvm/mir/operand.rs--1--1--2   src/librustc_mir/hair/pattern/_match.rs--1--1--2   src/librustc_mir/hair/pattern/check_match.rs--1--1--2   src/librustc_mir/hair/pattern/mod.rs--1--1--2   src/librustc_mir/interpret/const_eval.rs--1--1--2   src/librustc_mir/interpret/eval_context.rs--1--1--2   src/librustc_mir/interpret/memory.rs--1--1--2   src/librustc_mir/monomorphize/collector.rs--1--1--2   src/librustc_mir/transform/const_prop.rs--1--1--2   src/librustc_mir/transform/qualify_consts.rs--1--1--2   src/librustc/lib.rs--0--1--1,Perfective,
86701,d7e910ec9060a9748e221c2325209e54aa2da018,Update .mailmap, ,1,63,   .mailmap--61--2--63,Perfective,
81979,2982fe39ad93e29709a2e1414a4228718c8de28a,80 character line limit, ,1,5,   src/libstd/io/mod.rs--3--2--5,Perfective,
50107,4efd5c75a8d03b9ad2b5d7de3d58eb342428844d,Fix an ICE with continue inside a closure inside a loop condition, ,3,37,   src/librustc/hir/lowering.rs--17--10--27   src/test/ui/closure-array-break-length.stderr--6--2--8   src/test/ui/closure-array-break-length.rs--2--0--2,Corrective,
39507,a291d4e94cbcd9082f942147cde92b8ae5a39cdc,convert field/method confusion help to suggestions, ,5,43,   src/librustc_typeck/check/method/suggest.rs--13--9--22   .../ui/confuse-field-and-method/issue-2392.stderr--9--4--13   .../ui/confuse-field-and-method/issue-33784.stderr--3--1--4   .../ui/confuse-field-and-method/issue-18343.stderr--1--1--2   .../ui/confuse-field-and-method/issue-32128.stderr--1--1--2,Perfective,
104505,250bbddb901d0d748a07caf91a10b56e24d40c9b,move infer into typeck module, ,2,2,   src/rustc/rustc.rc--1--1--2   src/rustc/middle/{=>typeck}/infer.rs--0--0--0,Perfective,
106444,3aed4b04cee15408536e9d89b866dc16447d1afb,[makefiles] Make rustc depend on librustc,This ensures the lib is not just built  but also copied into the right  lib directory when a rustc binary is used as make target.   ,1,1,   mk/host.mk--1--0--1,Perfective,
84386,dc1ba08d1603aeedf37a4a7182e990207891379d,Test fixes., ,8,38,   src/test/compile-fail/feature-gate-int-uint.rs--8--8--16   src/libsyntax/ext/deriving/rand.rs--3--3--6   src/test/compile-fail/lex-bad-numeric-literals.rs--2--2--4   src/test/compile-fail/lint-type-limits.rs--2--2--4   src/libsyntax/feature_gate.rs--1--1--2   src/test/compile-fail/issue-13482-2.rs--1--1--2   src/test/compile-fail/issue-5544-a.rs--1--1--2   src/test/compile-fail/oversized-literal.rs--1--1--2,Corrective,
108942,9f4b4d89cee40a04bf4b3227e378588e438e588a,Add upcall_rust_personality,This just wraps __gxx_personality_v0 with our upcall naming convention    Issue #236   ,3,30,   src/rt/rust_upcall.cpp--22--0--22   src/comp/back/upcall.rs--5--2--7   src/rt/rustrt.def.in--1--0--1,Adaptive,
91059,a5b4d94e3daa0fc2ea59785cb6480e421c4bd8e6,debuginfo: Add test case for limited debuginfo, ,1,32,   src/test/debug-info/limited-debuginfo.rs--32--0--32,Perfective,
61783,d316874c87e25669895c306658e15aa3746d66ab,Update and fix a few tests, ,4,16,   src/test/run-pass-fulldeps/auxiliary/cond_plugin.rs--3--3--6   .../run-pass-fulldeps/proc-macro/auxiliary/count_compound_ops.rs--3--3--6   src/libsyntax/parse/mod.rs--1--1--2   src/libsyntax/util/parser_testing.rs--1--1--2,Perfective,
48919,6ebd62b8ff86a3ce004894b7fa6d1351f65a5167,Make VecDeque append safer and easier to understand, ,1,34,   src/liballoc/collections/vec_deque.rs--19--15--34,Perfective,
40677,d44030d8ec6245edabdbe23a69be21bffb51eb11,Add pretty-printing for const generics,Co-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>   ,1,39,   src/librustc/hir/print.rs--21--18--39,Perfective,
67882,8d3e89b484bbcd1c2fec60794c196d7148dd9f5b,handle mixed byte literal and byte array patterns,Convert byte literal pattern to byte array patterns when they are both  used together. so matching them is properly handled. I could've done the  conversion eagerly  but that could have caused a bad worst-case for  massive byte-array matches.    Fixes #18027.  Fixes #25051.  Fixes #26510.   ,4,37,   src/librustc_const_eval/_match.rs--16--5--21   src/test/compile-fail/match-byte-array-patterns.rs--8--0--8   src/test/run-pass/match-byte-array-patterns.rs--6--0--6   src/librustc_const_eval/check_match.rs--1--1--2,Corrective,
18174,ad4a7a1f0c87ecd0a520fce2078d1bcdb900f574,FunctionCx: WIP: Fix syntax error on sed codegen_cx -> .codegen_cx, ,25,278,   src/base.rs--23--23--46   src/abi/mod.rs--14--14--28   src/constant.rs--12--12--24   src/intrinsics/mod.rs--12--12--24   src/codegen_i128.rs--10--11--21   src/vtable.rs--10--10--20   src/common.rs--8--9--17   src/value_and_place.rs--8--9--17   src/atomic_shim.rs--7--7--14   src/intrinsics/simd.rs--6--7--13   src/cast.rs--4--4--8   src/num.rs--4--4--8   src/driver/mod.rs--3--3--6   src/debuginfo/mod.rs--2--2--4   src/trap.rs--2--2--4   src/abi/pass_mode.rs--1--2--3   src/abi/returning.rs--1--2--3   src/inline_asm.rs--1--2--3   src/intrinsics/llvm.rs--1--2--3   src/analyze.rs--1--1--2   src/debuginfo/line_info.rs--1--1--2   src/debuginfo/unwind.rs--1--1--2   src/discriminant.rs--1--1--2   src/lib.rs--1--1--2   src/unsize.rs--1--1--2,Corrective,
94535,2bc408f3e377bdbdd03b934c56cddf8bc93b1f69,Update highlighting for prelude changes., ,1,4,   src/etc/vim/syntax/rust.vim--2--2--4,Perfective,
20796,95f8daa82b52e95081b66d58953c2329a9f0458e,Fix -Z unpretty=everybody_loops,It turns out that this has not been working for who knows how long.  Previously:    ```  pub fn h() { 1 + 2; }  ```    After this change:    ```  pub fn h() { loop {} }  ```    This only affected the pass when run with the command line  pretty-printing option  so rustdoc was still replacing bodies with  `loop {}`.   ,5,13,   src/librustc_session/config.rs--5--2--7   src/librustc_interface/passes.rs--3--0--3   src/librustc_driver/lib.rs--1--0--1   src/librustc_interface/interface.rs--1--0--1   src/librustc_interface/queries.rs--1--0--1,Perfective,
38790,4352681d624bcbfb9d5aa9d2f5057091622402a6,fix clippy warnings,clippy::needless_return  clippy::redundant_closure  clippy::or_fun_call  clippy::len_zero  clippy::expect_fun_call  clippy::assertions_on_constants  clippy::identity_conversion  clippy::chars_last_cmp   ,19,90,   src/test/mod.rs--10--9--19   src/macros.rs--5--7--12   src/config/mod.rs--3--3--6   src/items.rs--3--3--6   src/lists.rs--3--3--6   src/reorder.rs--4--2--6   src/string.rs--4--2--6   src/imports.rs--1--4--5   src/formatting.rs--2--2--4   src/chains.rs--1--1--2   src/closures.rs--1--1--2   src/comment.rs--1--1--2   src/config/file_lines.rs--1--1--2   src/git-rustfmt/main.rs--1--1--2   src/lib.rs--1--1--2   src/source_file.rs--1--1--2   src/source_map.rs--1--1--2   src/vertical.rs--1--1--2   src/visitor.rs--1--1--2,Corrective,
69308,150599d01d2d8f8ec410ac6509478084ee920eb4,Add E0530 error explanation, ,1,37,   src/librustc_resolve/diagnostics.rs--35--2--37,Perfective,
42046,a9f8d3c8fdc18080df800e65d73a737ccfd08933,add assert(true/false  some message) tests, ,3,54,   clippy_lints/src/assertions_on_constants.rs--18--11--29   tests/ui/assertions_on_constants.stderr--18--2--20   tests/ui/assertions_on_constants.rs--5--0--5,Perfective,
2682,69fe39e8a8e6a66d97836e3068a4b1f183c79ea6,Add primitive documentation to libcore,This works by doing two things:  - Adding links that are specific to the crate. Since not all primitive    items are defined in `core` (due to lang_items)  these need to use    relative links and not intra-doc links.  - Duplicating `primitive_docs` in both core and std. This allows not needing CARGO_PKG_NAME to build the standard library. It also adds a tidy check to make sure they stay the same.   ,29,54,   library/core/src/primitive_docs.rs--22--0--22   library/core/src/bool.rs--1--1--2   library/core/src/char/methods.rs--1--1--2   library/std/src/primitive_docs.rs--1--1--2   src/test/rustdoc/cross-crate-primitive-doc.rs--1--1--2   library/core/primitive_docs/box_into_raw.md--1--0--1   library/core/primitive_docs/fs_file.md--1--0--1   library/core/primitive_docs/io_bufread.md--1--0--1   library/core/primitive_docs/io_read.md--1--0--1   library/core/primitive_docs/io_seek.md--1--0--1   library/core/primitive_docs/io_write.md--1--0--1   library/core/primitive_docs/net_tosocketaddrs.md--1--0--1   library/core/primitive_docs/process_exit.md--1--0--1   library/core/primitive_docs/string_string.md--1--0--1   library/core/src/lib.rs--1--0--1   library/std/primitive_docs/box_into_raw.md--1--0--1   library/std/primitive_docs/fs_file.md--1--0--1   library/std/primitive_docs/io_bufread.md--1--0--1   library/std/primitive_docs/io_read.md--1--0--1   library/std/primitive_docs/io_seek.md--1--0--1   library/std/primitive_docs/io_write.md--1--0--1   library/std/primitive_docs/net_tosocketaddrs.md--1--0--1   library/std/primitive_docs/process_exit.md--1--0--1   library/std/primitive_docs/string_string.md--1--0--1   src/test/rustdoc/auxiliary/primitive-doc.rs--1--0--1   src/test/rustdoc/primitive/no_std.rs--1--0--1   src/tools/tidy/src/lib.rs--1--0--1   src/tools/tidy/src/main.rs--1--0--1   src/tools/tidy/src/primitive_docs.rs--1--0--1,Perfective,
90345,28e3340a078bfb53fd621900fb17d42d6e718526,std: migrate path::unix to using Vec internally., ,3,79,   src/libstd/path/posix.rs--25--21--46   src/libstd/path/mod.rs--10--10--20   src/libstd/path/windows.rs--7--6--13,Perfective,
24748,ca098b16a4114fd96a4059ba3f807d33dde5ef07,detach submod_path from Parser, ,2,34,   src/librustc_parse/parser/module.rs--17--14--31   src/librustc_parse/parser/diagnostics.rs--0--3--3,Adaptive,
15669,64a7d019f10bafa386817de3bb15ef2eead4cda5,Remove all usage of set-env, ,3,14,   .github/workflows/clippy_bors.yml--4--4--8   .github/workflows/deploy.yml--2--2--4   .github/workflows/clippy.yml--1--1--2,Perfective,
101234,e90425999e59983f5140a070c250968c265e2456,docs: Remove some 'extern mod std's from tutorial, ,1,10,   doc/tutorial.md--2--8--10,Perfective,
43859,6674db48872c1b84fe3ac3feb94b8d3e0ee82b24,Reuse the `P` in `InvocationCollector::fold_{ opt_}expr`.,This requires adding a new method  `P::filter_map`.    This commit reduces instruction counts for various benchmarks by up to  0.7%.   ,2,60,   src/libsyntax/ext/expand.rs--26--19--45   src/libsyntax/ptr.rs--13--2--15,Perfective,
73697,7ba43ff06edfd4c3d578d9c4ff2a11885275cae1,Finished implementing impl and trait type/const, ,2,111,   src/items.rs--56--2--58   src/visitor.rs--27--26--53,Adaptive,
4287,6c2199ea9f115de56849ec39b1238af678e3d9ed,rfc3052: Remove authors field from Cargo manifests,Since RFC 3052 soft deprecated the authors field anyway  hiding it from  crates.io  docs.rs  and making Cargo not add it by default  and it is  not generally up to date/useful information  we should remove it from  crates in this repo.   ,7,7,   Cargo.toml--0--1--1   clippy_dev/Cargo.toml--0--1--1   clippy_dummy/Cargo.toml--0--1--1   clippy_lints/Cargo.toml--0--1--1   clippy_utils/Cargo.toml--0--1--1   lintcheck/Cargo.toml--0--1--1   rustc_tools_util/Cargo.toml--0--1--1,Perfective,
76226,e05df509fb62a0398669b8e08f6e70dea8231306,Refactor push_stack_frame., ,1,8,   src/interpreter.rs--5--3--8,Perfective,
72457,8dbab5121e214a08690eefdaa3ee45bb2d1bbd5e,syntax: Don't parse idents with `parse_path`,Lift some restrictions on type parameters in paths  Sanity check import paths for type parameters   ,2,23,   src/libsyntax/parse/parser.rs--12--9--21   src/librustc_resolve/build_reduced_graph.rs--1--1--2,Perfective,
33271,96ac02b8b3aeebc463d434c57b4a2ada9a3003e6,Use new `Place::is_indirect` API where possible, ,2,38,   src/librustc_mir/borrow_check/path_utils.rs--7--15--22   src/librustc_mir/dataflow/impls/borrowed_locals.rs--4--12--16,Perfective,
111010,7e806c5e87c311cf5b500fd7b019a779263763a8,Attempt to put out windows tinderbox., ,2,14,   src/lib/win32_os.rs--4--4--8   src/comp/pretty/pprust.rs--5--1--6,Perfective,
51349,74bfd94ec55b9e26e47e597fbe0ba25cb75063ba,`bless` also produces `.nll` files now, ,5,57,   src/test/ui/E0508.rs--20--0--20   src/test/ui/E0508.ast.stderr--12--0--12   src/test/ui/E0508.ast.nll.stderr--9--0--9   src/test/ui/E0508.mir.stderr--9--0--9   src/tools/compiletest/src/runtest.rs--6--1--7,Adaptive,
95087,2bc8a9be77f230d7691468f80599ae97f2495e0a,doc: Update .pot files, ,8,72,   doc/po/rust.md.pot--17--18--35   doc/po/tutorial.md.pot--11--10--21   doc/po/tutorial-tasks.md.pot--2--3--5   doc/po/tutorial-container.md.pot--2--1--3   doc/po/rustpkg.md.pot--1--1--2   doc/po/tutorial-borrowed-ptr.md.pot--1--1--2   doc/po/tutorial-ffi.md.pot--1--1--2   doc/po/tutorial-macros.md.pot--1--1--2,Perfective,
103223,877ebed6cf0a20a7ba88a74b32058679ef9abbf5,Visit item macros., ,3,7,   src/rustc/middle/resolve.rs--2--2--4   src/libsyntax/visit.rs--1--1--2   src/libsyntax/parse/parser.rs--0--1--1,Perfective,
107841,cda2e07c37d511dfa49167ebecb7278d0f64cbac,reverse sense of check, ,1,4,   configure--2--2--4,Perfective,
83284,21fb420592bd4ee03e81efe7b2dbd7115e790e3a,Add test that shows how a cycle between the where-clauses on a type and the type appearing in the trait would (previously) trigger an error message. The code is now accepted. No reported issue that I am aware of., ,1,22,   .../astconv-cycle-between-trait-and-type.rs--22--0--22,Perfective,
69691,9aa770126267aaa14404a181ffedfb27f60fe872,make clippy compile again with the latest nightly after rust-lang/rust@65eb024542835c0235c31ef0e2381d155c797b03, ,1,10,   src/main.rs--7--3--10,Adaptive,
4846,6e357bce5db7c14aa132acc6707a685d978b2efa,Fix tests for i686, ,2,6,   src/test/debuginfo/marker-types.rs--2--2--4   src/test/debuginfo/pretty-std.rs--1--1--2,Corrective,
92229,463a6d90643f45d9f86157e853ebd1a8402c6022,extra::treemap: add mutable-value iterators., ,1,48,   src/libextra/treemap.rs--47--1--48,Adaptive,
58032,20c64e8155b0c29e8cbb4b9a8c99fd0a94a3caa2,save-analysis: corrects reference for tuple struct and unit struct literals,Fixes https://github.com/nrc/rls-analysis/issues/77   ,1,15,   src/librustc_save_analysis/lib.rs--13--2--15,Corrective,
86258,643edeade99bd130b9079ffcc9dfc913abcb5698,Remove BTreeSet from all examples., ,1,8,   src/libcollections/tree/set.rs--4--4--8,Perfective,
880,a3776d99ccdd60d3f880005e4fe4e9478768ea41,Run reveal_all on MIR more often., ,2,6,   src/test/mir-opt/issue-78192.rs--3--1--4   compiler/rustc_mir_transform/src/reveal_all.rs--1--1--2,Perfective,
18898,fca81fa3cdfaf9c53e1793c70448f106b74b358f,fix clippy::iter_next_slice: use .get(0) instead of .iter().next(), ,1,2,   src/librustc_middle/traits/query.rs--1--1--2,Corrective,
107898,5d1e321ecbdaf50fe4723b698081c7cda60d366a,rt: Remove rust_chan, ,9,157,   src/rt/rust_chan.cpp--0--49--49   src/rt/rust_port.cpp--11--25--36   src/rt/rust_chan.h--0--32--32   src/rt/rust_task.cpp--9--9--18   src/rt/rust_builtin.cpp--4--8--12   src/rt/rust_port.h--2--2--4   mk/rt.mk--0--2--2   src/rt/rust_internal.h--0--2--2   src/rt/rust_task.h--1--1--2,Perfective,
77993,4637d42b58b7abc77cf63d86dff403a37c2e1abb,Translate constructor arguments for zero-sized tuple structs,This was preventing any side-effects from the expressions from  happening.    Fixes #28114   ,2,32,   src/test/run-pass/zero-sized-tuple-struct.rs--21--0--21   src/librustc_trans/trans/base.rs--11--0--11,Adaptive,
65076,ea2a684099860ae0d506e231a119c408ea4269f8,Add error codes for errors in libsyntax, ,2,41,   src/libsyntax/parse/parser.rs--26--13--39   src/libsyntax/diagnostic_list.rs--2--0--2,Adaptive,
80199,fdf3ce76cfe6be7b5343d191411019836ff3373f,Change E0015 and E0378 explanations to link to text of RFC 911  not rfc PR., ,1,4,   src/librustc/diagnostics.rs--2--2--4,Perfective,
111466,c0f728712ba018ae0a3993232bf5b259e0c312ad,Rewrite pre_postconditions to use walk instead of fold, ,2,22,   src/comp/middle/tstate/ck.rs--6--7--13   src/comp/middle/tstate/pre_post_conditions.rs--1--8--9,Perfective,
48881,fe588d894fa392fdf787c18a959b342d38d0c71c,Replace a few expect+format combos with unwrap_or_else+panic, ,5,16,   src/bootstrap/bin/rustc.rs--2--2--4   src/librustc_codegen_llvm/back/rpath.rs--2--2--4   src/libsyntax_ext/format_foreign.rs--2--2--4   src/bootstrap/install.rs--1--1--2   src/librustc_codegen_llvm/base.rs--1--1--2,Perfective,
34688,9f6e1ce5df2592bbbcd869f62c1f0cfd9460290e,rustc: Compile the `fmt_macros` crate as an rlib,"I think this was left out by accident from the ""convert everything to  rlibs"" commit  there's no need for this to be a dylib just as everything  else doesn't need to be a dylib!   ",2,2,   src/libfmt_macros/Cargo.toml--0--1--1   src/test/run-make-fulldeps/hotplug_codegen_backend/the_backend.rs--1--0--1,Perfective,
57418,262029eca94ff4ec74d985b65d644f62fd593e5d,Fix a bug where the rustfmt tarball was not being produced, ,1,7,   src/bootstrap/dist.rs--5--2--7,Corrective,
107882,b8dd148444d47ba75e635c34025fc0662ca69db0,rustllvm: Add a GetOrInsertFunction wrapper,Fixes issue #1161    Test-case-by: Brian Anderson <banderson@mozilla.com>  Signed-off-by: Haitao Li <lihaitao@gmail.com>   ,5,24,   src/test/run-pass/native-dupe.rs--12--0--12   src/rustllvm/RustWrapper.cpp--6--0--6   src/comp/middle/trans.rs--2--1--3   src/comp/lib/llvm.rs--2--0--2   src/rustllvm/rustllvm.def.in--1--0--1,Adaptive,
67722,5ad235c8c0416ebab0b80e4750b84c061ef6cc6b,Bump the bootstrap cargo to match the one paired with 1.13, ,1,2,   src/stage0.txt--1--1--2,Perfective,
18166,d65e500394640a042e03abe47c511e7d0049f523,FunctionCx: Swap context.func and empty function correctly, ,1,35,   src/base.rs--20--15--35,Perfective,
17479,96b31a5b36ed06b6781804d3384a3a84a52b8ce6,Fix FP when coercion kicks in, ,2,14,   tests/ui/same_item_push.rs--11--0--11   clippy_lints/src/loops.rs--2--1--3,Adaptive,
113695,7ead107290a29811aee2cd6d170dacec45e0d67f,array_list improvements., ,1,22,   src/rt/util/array_list.h--21--1--22,Perfective,
51078,50eefc0d777a70ff8d11cfd358eb0ed36f6e0651,Account for negative offsets in suggestions,When suggesting code that has a shorter span than the current code   account for this by keeping the offset as a signed value.   ,2,24,   src/librustc_errors/emitter.rs--12--10--22   .../ui/impl-trait/impl-generic-mismatch.stderr--1--1--2,Perfective,
69132,e1e5c14bad0e8989523cf5974d98a8257badb88d,In `Parser` and `ExtCtxt`  replace fields `filename` and `mod_path_stack` with a single field `directory: PathBuf`., ,4,82,   src/libsyntax/ext/expand.rs--16--21--37   src/libsyntax/parse/parser.rs--14--22--36   src/libsyntax/ext/base.rs--3--3--6   src/libsyntax/ext/tt/macro_rules.rs--1--2--3,Perfective,
9602,a0b7f9b3a09c9dbb3a773b1b584abbf3c6f031c7,useless_format: fix examples in the description,Good example was something not acceptable by the useless_format lint.   ,1,4,   clippy_lints/src/format.rs--2--2--4,Corrective,
98231,2589eba957ee5632dc9060022b5ca09cbfb782f9,When repr'ing an enum value  assert that it matched some variant., ,1,7,   src/libcore/repr.rs--4--3--7,Perfective,
43560,81251491ddecb5c55b6d22b04abf33ef65d3a74b,Pick a better variable name for ptr::hash, ,1,4,   src/libcore/ptr.rs--2--2--4,Perfective,
109672,d9b84a546cf7968ef7a9e3558c2f0c3d88ba033c,Converted the rest of the task-comm-* tests over. Also fixed some channel lifecycle bugs., ,20,216,   src/test/run-pass/task-comm-16.rs--21--18--39   src/test/run-pass/task-comm-4.rs--12--12--24   src/rt/rust_chan.cpp--2--17--19   src/test/run-pass/task-comm-10.rs--10--9--19   src/test/run-pass/task-comm-6.rs--9--9--18   src/test/run-pass/task-comm-7.rs--8--7--15   src/test/run-pass/task-comm-8.rs--8--7--15   src/test/run-pass/task-comm-11.rs--7--4--11   src/test/run-pass/task-comm-15.rs--6--4--10   src/test/run-pass/task-comm-3.rs--5--5--10   src/test/run-pass/task-comm-9.rs--4--4--8   src/test/run-pass/task-comm-13.rs--4--3--7   src/test/run-pass/task-comm-5.rs--3--4--7   src/lib/comm.rs--0--2--2   src/rt/rust_builtin.cpp--1--1--2   src/rt/rust_chan.h--0--2--2   src/test/run-pass/task-comm-0.rs--1--1--2   src/test/run-pass/task-comm-1.rs--1--1--2   src/test/run-pass/task-comm-12.rs--1--1--2   src/test/stdtest/comm.rs--1--1--2,Corrective,
3418,b4fcf1b1dc3d0533a7fa554482e99366f532056b,tests: add v0 structural const value demangling test., ,2,33,   .../const-generics-structural-demangling.stderr--21--0--21   .../const-generics-structural-demangling.rs--12--0--12,Perfective,
25379,b00f6745c4df0e979dd53dcbf43ededf5728e349,Remove recovery test, ,2,30,   src/test/ui/parser/recovery-attr-on-if.stderr--0--23--23   src/test/ui/parser/recovery-attr-on-if.rs--0--7--7,Perfective,
53414,ce84a41936e367dfeb7d348564f2337819395ca6,Allow raw identifiers in diagnostic macros., ,1,10,   src/libsyntax/diagnostics/plugin.rs--5--5--10,Adaptive,
75688,9929c246f16be1b8c21fff53d794773a2cf51caa,std: Update jemalloc version,It's been awhile since we last updated jemalloc  and there's likely some bugs  that have been fixed since the last version we're using  so let's try to update  again.   ,2,25,   mk/rt.mk--18--5--23   src/jemalloc--1--1--2,Perfective,
62424,d54634bd7cde07b276e431fc167119e13a8aef81,Use recover_comment_removed in rewrite_static, ,3,28,   src/items.rs--13--2--15   tests/target/comment-inside-const.rs--9--0--9   src/visitor.rs--4--0--4,Adaptive,
424,0bc25d04c6aed8a40f415b9a8eaaeb136feda0e3,octal_escapes: emit only one lint for all cases found each literal, ,2,65,   clippy_lints/src/octal_escapes.rs--27--12--39   tests/ui/octal_escapes.stderr--4--22--26,Adaptive,
18711,7954c22a99275a8b7be79c14d2bb882750de53ea,unknown: make lint adhere to lint message convention, ,2,4,   clippy_lints/src/utils/attrs.rs--1--1--2   tests/ui/unknown_attribute.stderr--1--1--2,Perfective,
55747,1df384d32d7a33a710acd3f15729b0e4d6f73832,"Rename ReprExtern to ReprC  and similarily rename a few other fields and locals that mentioned ""extern repr""", ,5,37,   src/librustc/middle/dead.rs--8--8--16   src/librustc_lint/bad_style.rs--5--7--12   src/libsyntax/attr.rs--2--3--5   src/librustc/ty/mod.rs--1--1--2   src/libsyntax_ext/deriving/generic/mod.rs--1--1--2,Perfective,
8401,8eed8ed9675b264cbacc3e589950368000b2664d,Move log's short part to first, ,1,4,   compiler/rustc_typeck/src/check/expr.rs--2--2--4,Perfective,
49897,35a50655731efdac281a9cff1cf4f303549a5b02,pacify the mercilous tidy, ,1,5,   src/librustc/infer/canonical/query_result.rs--1--4--5,Perfective,
32687,ab1a3f09fd3e1dbce850b9e1b691dc8338584e65,add test for drop order of temporary in tail return expression, ,1,22,   ...drop-order-for-temporary-in-tail-return-expr.rs--22--0--22,Perfective,
99465,542bf20414551638886ef6e79e2b7c1a69df97c2,core: Remove oldcomm, ,4,49,   src/libcore/oldcomm.rs--0--46--46   src/libcore/core.rc--0--1--1   src/libcore/prelude.rs--0--1--1   src/libcore/task/spawn.rs--0--1--1,Perfective,
38351,1fa7a21534bde7315bc78be970a342262ddf7a58,Make libstd depend on the hashbrown crate, ,5,44,   Cargo.lock--19--0--19   src/tools/rustc-std-workspace-alloc/Cargo.toml--14--0--14   src/tools/rustc-std-workspace-alloc/lib.rs--9--0--9   Cargo.toml--1--0--1   src/libstd/Cargo.toml--1--0--1,Adaptive,
99651,d4fd30c6ace41638f10e415f6cad175997ec21c4,Link the lifetimes of regions resulting from borrows of the contents of other borrowed pointers to the lifetimes of the borrowed value.  Fixes #3148.,r=catamorphism   ,11,41,   src/librustc/middle/typeck/check/regionck.rs--18--3--21   src/test/run-pass/region-dependent-addr-of.rs--5--0--5   src/librustc/middle/resolve.rs--2--0--2   src/librustc/middle/typeck/check/mod.rs--1--1--2   src/libsyntax/ext/auto_encode.rs--1--1--2   src/libsyntax/ext/build.rs--1--1--2   src/libsyntax/ext/deriving.rs--1--1--2   .../region-return-interior-of-option-in-self.rs--0--2--2   src/librustc/middle/mem_categorization.rs--1--0--1   src/librustc/middle/ty.rs--1--0--1   src/librustc/util/ppaux.rs--1--0--1,Adaptive,
39181,f10e44420a072881cce6d7819d2b2bfb99df90df,Edited the dbg! docs stating that dbg! works the same way in release builds., ,1,7,   src/libstd/macros.rs--6--1--7,Perfective,
100833,768247f393a18ec56d7a92cded2545e6f7d92649,Tests for #1896, ,4,48,   src/test/run-pass/issue-1896-3.rs--17--0--17   src/test/run-pass/issue-1896-1.rs--13--0--13   src/test/run-pass/issue-1896-2.rs--10--0--10   src/test/compile-fail/issue-1896.rs--8--0--8,Perfective,
80248,ff682048804453b67199acc9c64f332e58251c41,Add a WONTFIX message to a failing test.,Closes #20184   ,3,9,   src/librustc_trans/back/write.rs--2--2--4   src/test/compile-fail/asm-src-loc-codegen-units.rs--2--1--3   src/librustc_trans/back/link.rs--1--1--2,Perfective,
1822,597090ee147b957aae81383ec68b33880b6050da,Re-use TypeChecker instead of passing around some of its fields, ,2,26,   .../rustc_borrowck/src/type_check/relate_tys.rs--10--12--22   compiler/rustc_borrowck/src/type_check/mod.rs--1--3--4,Perfective,
41243,e6e27924e17aa7def20ecaf88abc18ead6d97f93,liballoc: cargo check passes on 2018, ,20,121,   src/liballoc/slice.rs--7--6--13   src/liballoc/prelude.rs--5--5--10   src/liballoc/raw_vec.rs--5--5--10   src/liballoc/str.rs--5--5--10   src/liballoc/string.rs--5--5--10   src/liballoc/sync.rs--5--5--10   src/liballoc/vec.rs--5--5--10   src/liballoc/rc.rs--4--4--8   src/liballoc/boxed.rs--3--3--6   src/liballoc/collections/vec_deque.rs--3--3--6   src/liballoc/borrow.rs--2--2--4   src/liballoc/collections/binary_heap.rs--2--2--4   src/liballoc/collections/btree/node.rs--2--2--4   src/liballoc/collections/btree/set.rs--2--2--4   src/liballoc/collections/btree/map.rs--1--1--2   src/liballoc/collections/btree/search.rs--1--1--2   src/liballoc/collections/linked_list.rs--1--1--2   src/liballoc/collections/mod.rs--1--1--2   src/liballoc/fmt.rs--1--1--2   src/liballoc/task.rs--1--1--2,Adaptive,
44850,ab9a0b77248c81a32a8153d52c7eade0f2b37e7f,Change name of metadata file to rust.metadata.bin to match cg_llvm, ,2,14,   src/lib.rs--2--7--9   src/metadata.rs--3--2--5,Perfective,
343,fa180305675e6ec446f7b1c21cb33fbef5f68f31,The correct LLVM target for aarch64-apple-darwin is arm64-... (as with ios), ,1,5,   compiler/rustc_target/src/spec/aarch64_apple_darwin.rs--2--3--5,Corrective,
62734,cb4a6a24191f1a5535a6694b2310be5ac9d60bfe,Use correct width when rewriting chain, ,1,8,   src/chains.rs--1--7--8,Corrective,
99887,bea67bde21d36df40c55b02cd8d8b28c0ec864b6,Change ast::path into a struct., ,12,110,   src/libsyntax/parse/parser.rs--22--12--34   src/libsyntax/ext/auto_encode.rs--14--4--18   src/libsyntax/ext/pipes/ast_builder.rs--7--7--14   src/libsyntax/ext/build.rs--8--3--11   src/librustc/front/test.rs--5--1--6   src/libsyntax/ast.rs--3--3--6   src/libsyntax/fold.rs--3--2--5   src/librustc/metadata/tydecode.rs--2--2--4   src/libsyntax/ast_util.rs--3--1--4   src/libsyntax/ext/concat_idents.rs--2--2--4   src/librustc/front/core_inject.rs--1--1--2   src/libsyntax/ext/deriving.rs--1--1--2,Perfective,
58659,41320fa52e1e4dd85a200a34195ae32d7efd13e0,cfg out Queue::new for emscripten,Queue::new is only used is tests atm  which causes warnings on emscripten which does not run queue tests. ,1,2,   src/libstd/sync/mpsc/spsc_queue.rs--1--1--2,Corrective,
85252,533822207fd3f34a3d45d99a0eece0112880a845,rustc: don't allow(non_camel_case_types) in resolve., ,1,13,   src/librustc/middle/resolve.rs--6--7--13,Adaptive,
13227,d9f237caa6a90fd6581124a3627af55e9c2a0f22,Add wasm32 support to inline asm, ,7,38,   src/test/assembly/asm/wasm-types.rs--22--0--22   compiler/rustc_target/src/asm/wasm.rs--7--0--7   compiler/rustc_target/src/asm/mod.rs--3--0--3   compiler/rustc_llvm/src/lib.rs--1--1--2   src/test/ui/asm/bad-arch.rs--1--1--2   compiler/rustc_codegen_llvm/src/asm.rs--1--0--1   src/doc/unstable-book/src/library-features/asm.md--1--0--1,Adaptive,
46683,54a16aea6a3b6a765ebf1821d339456c87f6e82c,Fix tidy errors, ,2,5,   src/libstd/sys/windows/c.rs--2--1--3   src/libpanic_unwind/seh.rs--0--2--2,Perfective,
64106,17b4884d3c3d88af7f43d5fca32fd8f48d75669b,Modify Chars' description, ,1,10,   src/libcore/str/mod.rs--7--3--10,Perfective,
99926,79f0d67d2801f17c143b38926f05a40d0c22f5c0,Add more tests for enum constants.,The tests have consts defined both before and after their uses in order  to prevent bugs that depend on the order in which they are translated.   ,4,40,   src/test/run-pass/const-big-enum.rs--22--0--22   src/test/run-pass/const-newtype-enum.rs--12--0--12   src/test/run-pass/const-nullary-enum.rs--3--1--4   src/test/run-pass/const-nullary-univariant-enum.rs--2--0--2,Perfective,
62551,0b8c3de678065b82ae955b65192b7927b467f7a6,Add warning cycle #42326., ,2,24,   src/libsyntax/parse/lexer/mod.rs--14--1--15   src/test/parse-fail/underscore-suffix-for-string.rs--8--1--9,Adaptive,
75253,f7fb0af729f77b27aa69f8e8f24279de19b12d12,doc: that suffix serves as mere distraction, ,1,2,   src/liballoc/boxed.rs--1--1--2,Perfective,
95413,b57ffef37e6e2196ad948ab2f6944d242c3aaaf1,convert `pure` to a reserved keyword, ,1,44,   src/libsyntax/parse/token.rs--22--22--44,Perfective,
23250,56e0295348c85c759d40cabe83979debe465e3bb,submodules: update clippy from 6651c1b9 to 891e1a85,Changes:  ````  Polished lint and tests  Added final lint and tests  Added basic lint and tests  fix redundant_pattern_matching lint  add lint futures_not_send  Integrate more idiomatic rust changes.  Fix issue #4892.  cargo dev fmt  Cleanup: Rename 'db' variable to 'diag'  question_mark: don't add `as_ref()` for a call expression  unit_arg suggestion may be incorrect  readme: update to cargo clippy --fix command  CI: performing system upgrade fixes broken apt deps on ubuntu 32bit  Do not lint in macros for match lints  [fix] Minor typo in GH Actions 'clippy_dev'  Reenable rustfmt integration test  Add test to map_flatten with an Option  Lint map_flatten if caller is an Option  Apply suggestions from code review  manually fixing formatting at this point lol  fmt  rename field  revert the damn fmt changes  add some tests  split it up for testing but the merge broke tests  dogfood tasted bad  fix rustfmt issue  boycott manish  check for unstable options  Start work on clippy-fix as subcommand  ````   ,1,2,   src/tools/clippy--1--1--2,Adaptive,
15507,e0002c1892ae1efd420332e6786b96ad86969c98,Remove MIR dump on panic,I haven't used it for a long time and it adds a lot of noise to the  panic print.   ,2,22,   src/driver/mod.rs--0--21--21   src/lib.rs--0--1--1,Perfective,
31811,4f1d9074623afebfcb0dda9986766e3deeb50838,Use new format of licenses,Co-Authored-By: lzutao <taolzu@gmail.com>   ,7,14,   Cargo.toml--1--1--2   README.md--1--1--2   clippy_dummy/Cargo.toml--1--1--2   clippy_lints/Cargo.toml--1--1--2   clippy_lints/src/cargo_common_metadata.rs--1--1--2   mini-macro/Cargo.toml--1--1--2   rustc_tools_util/Cargo.toml--1--1--2,Perfective,
43588,08140878fefaa4b16939b904bf825b7107069b42,libcore: Add va_list lang item and intrinsics, - Add the llvm intrinsics used to manipulate a va_list.   - Add the va_list lang item in order to allow implementing     VaList in libcore.   ,10,90,   src/libcore/ffi.rs--33--0--33   src/librustc_codegen_llvm/va_arg.rs--25--0--25   src/librustc_codegen_llvm/intrinsic.rs--10--1--11   src/librustc_typeck/check/intrinsic.rs--9--0--9   src/librustc_codegen_llvm/context.rs--3--2--5   src/libstd/ffi/mod.rs--2--0--2   src/tools/tidy/src/pal.rs--2--0--2   src/librustc/middle/lang_items.rs--1--0--1   src/librustc_codegen_llvm/lib.rs--1--0--1   src/libstd/lib.rs--1--0--1,Adaptive,
63448,c59b188aaeadea32625534250d1f5120420be000,Adding links and examples for various mspc pages #29377, ,1,44,   src/libstd/sync/mpsc/mod.rs--39--5--44,Perfective,
51176,64768cf93208cec8ad29768c36d9bd2ac4e772a1,fix label prefix, ,3,45,   src/expr.rs--11--6--17   tests/source/label_break.rs--13--1--14   tests/target/label_break.rs--13--1--14,Corrective,
13857,c03dfa6671bb462d243c12c72c8829f98c99e394,Implement Index[Mut] for arrays,Adds implementations of `Index` and `IndexMut` for arrays that simply forward to the slice indexing implementation.   ,1,25,   library/core/src/array/mod.rs--25--0--25,Adaptive,
25489,f1070b152546827e599cdee1f64c55faaf8bf082,Replace ToJson with serde, ,8,35,   src/librustdoc/passes/calculate_doc_coverage.rs--7--15--22   src/librustdoc/config.rs--2--2--4   src/test/rustdoc-ui/coverage/json.rs--1--1--2   src/test/rustdoc-ui/coverage/json.stdout--1--1--2   .../coverage/output-format-fail-check.stderr--2--0--2   src/test/rustdoc-ui/coverage/html.rs--1--0--1   src/test/rustdoc-ui/coverage/html.stderr--1--0--1   .../coverage}/output-format-fail-check.rs--0--1--1,Perfective,
26302,4ecba94dcb415b0642ebd8695a08adc4ec07441e,Move weak lang items to librustc_lang_items., ,3,46,   src/librustc/middle/weak_lang_items.rs--10--20--30   src/librustc_lang_items/weak_lang_items.rs--15--0--15   src/librustc_lang_items/lib.rs--1--0--1,Perfective,
62470,67cccc5c1659c62baca6880656279e98c9637899,Try to fix compilation error on rustc 1.19.0-nightly (4ed2edaaf 2017-06-01), ,9,59,   clippy_lints/src/utils/mod.rs--4--12--16   clippy_lints/src/loops.rs--2--7--9   clippy_lints/src/escape.rs--4--4--8   clippy_lints/src/mut_reference.rs--3--4--7   clippy_lints/src/eval_order_dependence.rs--1--4--5   clippy_lints/src/consts.rs--1--3--4   clippy_lints/src/functions.rs--2--2--4   clippy_lints/src/len_zero.rs--2--2--4   clippy_lints/src/needless_borrow.rs--1--1--2,Corrective,
96894,ddbd1aa883b0325f09492113a483c9c888e7576a,Add test for #6861, ,1,26,   src/test/run-pass/unit-like-struct-drop-run.rs--26--0--26,Perfective,
12405,5449a42a1cc3f64c72e9724c1563789de22a28a3,Fix small typo in time comment, ,1,2,   library/std/src/sys/unix/time.rs--1--1--2,Perfective,
13965,bd0fba207be439799148cd1e9caddd625accfb12,Clean up outdated `use_once_payload` pretty printer comment,While reading some parts of the pretty printer code  I noticed this old comment  which seemed out of place. The `use_once_payload` this outdated comment mentions  was removed in 2017 in 40f03a1e0d6702add1922f82d716d5b2c23a59f0  so this  completes the work by removing the comment.   ,1,3,   compiler/rustc_driver/src/pretty.rs--0--3--3,Perfective,
51797,235af75d15860503f4f358ce2ad7b806d1b7f514,Merge armv5te musl container with dist-various-1, ,2,27,   .../docker/dist-armv5te-linux-musleabi/Dockerfile--0--22--22   src/ci/docker/dist-various-1/Dockerfile--4--1--5,Adaptive,
14992,3a58ad91f68c0715301b9f0272954a18b72eb6bb,Update `compiler_builtins` to 0.1.36, ,1,4,   Cargo.lock--2--2--4,Perfective,
22577,675b585931d870ad4207d60ef43179390526a2fc,"Remove clippy from some leftover lists of ""possibly failing"" tools", ,3,8,   src/tools/publish_toolstate.py--0--5--5   src/bootstrap/test.rs--1--1--2   src/bootstrap/toolstate.rs--0--1--1,Perfective,
20802,96031e22d22fd3b98e6caa3851b99272e2b4618d,add new error code, ,21,95,   src/librustc_error_codes/error_codes/E0764.md--22--0--22   src/test/ui/error-codes/E0017.stderr--3--3--6   .../ui/consts/const-mut-refs/const_mut_refs.stderr--2--3--5   src/test/ui/error-codes/E0017.rs--2--3--5   src/test/ui/error-codes/E0388.stderr--2--3--5   src/test/ui/consts/const-eval/issue-65394.stderr--2--2--4   src/test/ui/consts/const-multi-ref.stderr--2--2--4   .../const-mut-refs/const_mut_address_of.stderr--2--2--4   src/test/ui/consts/const_let_assign3.stderr--2--2--4   .../ui/consts/projection_qualif.mut_refs.stderr--2--2--4   src/test/ui/error-codes/E0388.rs--2--2--4   .../ui/issues/issue-17718-const-bad-values.stderr--2--2--4   src/test/ui/issues/issue-46604.stderr--2--2--4   .../ui/check-static-immutable-mut-slices.stderr--1--2--3   src/test/ui/consts/projection_qualif.stock.stderr--1--2--3   src/test/ui/consts/read_from_static_mut_ref.stderr--1--2--3   .../static_mut_containing_mut_ref2.mut_refs.stderr--1--2--3   .../static_mut_containing_mut_ref2.stock.stderr--1--2--3   src/librustc_mir/transform/check_consts/ops.rs--1--1--2   src/test/ui/issues/issue-46604.rs--1--1--2   src/librustc_error_codes/error_codes.rs--1--0--1,Adaptive,
92032,f4c9ed42aa1f5b83aa2f0ee3fbb5a89919d208d4,fixup! ebml::extra: Optimize reader::vuint_at(), ,1,3,   src/libextra/ebml.rs--2--1--3,Corrective,
67858,eada951f9c302d531d6b9ad474e87faafea9a5d5,Support `Self` in struct expressions and patterns, ,3,61,   src/test/run-pass/struct-path-self.rs--31--0--31   src/test/compile-fail/struct-path-self.rs--27--0--27   src/librustc_typeck/check/mod.rs--1--2--3,Adaptive,
45076,8753e568bf0d8bdc591ca56d9c3bc442efffaede,Check for comments in collapsible ifs, ,3,61,   tests/ui/collapsible_if.rs--38--0--38   tests/ui/collapsible_if.stderr--14--1--15   clippy_lints/src/collapsible_if.rs--8--0--8,Adaptive,
2795,a2ee1420b8f9e853becbbf1819d445eb83ef4e61,Wrap, ,1,2,   compiler/rustc_target/src/abi/mod.rs--1--1--2,Perfective,
89993,92b741aad4e329c134544c460b50eb095c0e512e,Skip pretty printing for the regions bound test, ,1,1,   src/test/run-pass/regions-bound-lists-feature-gate.rs--1--0--1,Perfective,
88339,8d54ec8f4bdd88fe35911aa236ed67deef6bd521,doc: Normalize example style,Remove unnecessary `use std::vec::Vec`. Use ``` code blocks  with rust as default instead of spelling it out.   ,1,46,   src/libcollections/vec.rs--21--25--46,Perfective,
74231,7a549598bb35601dae25eab8dacb0a053ec3fcae,documentation fix,`continue` expression's description mentioned `break` instead of `continue`    Signed-off-by: benaryorg <binary@benary.org>   ,1,2,   src/doc/reference.md--1--1--2,Perfective,
21719,37bdb3bb3b4323733f8ecdd4925ca314133c6fd0,Update UI test, ,1,5,   src/test/ui/json-short.stderr--3--2--5,Perfective,
99524,3e2ed18a4cd816ea8f29cdffe2c6ef0826919a8c,RIMOV: fix issue-3563-3 test, ,1,24,   src/test/run-pass/issue-3563-3.rs--12--12--24,Corrective,
111943,5475c0009ca594e86ddb4c122a88e63261299e8f,rustc: Use marijnh's stringifier for type hash and equality  since it's not sensitive to cnames, ,1,11,   src/comp/middle/ty.rs--9--2--11,Adaptive,
101612,655f7f844c64b29c35263bb48b5bedb3ed4b7b44,Remove bogus comment, ,1,1,   src/test/run-fail/out-of-stack-owned-box.rs--0--1--1,Perfective,
94843,77279a73cbafb1735e5cf53820fde65d5cd05957,testsuite: Tests for #6458. Closes #6458, ,5,78,   src/test/compile-fail/issue-6458.rs--21--0--21   src/test/compile-fail/issue-6458-4.rs--17--0--17   src/test/compile-fail/issue-6458-3.rs--15--0--15   src/test/compile-fail/issue-6458-2.rs--13--0--13   src/test/compile-fail/issue-6458-1.rs--12--0--12,Perfective,
48860,bbbbf2dc323ebecae08d84249813fa8c29eec910,Add run-pass test for #44005,Closes #44005   ,1,39,   src/test/run-pass/issue-44005.rs--39--0--39,Perfective,
67825,bdb399db010c05a18f5c6622c9ba1cbed37a214e,Fix ICE when attempting to get closure generics., ,3,44,   src/librustc/util/ppaux.rs--25--13--38   src/librustc/mir/mod.rs--2--2--4   src/librustc_trans/monomorphize.rs--1--1--2,Corrective,
69757,54c72d8f98a5693ab04c71942d07fb777e17a951,Minor fix, ,1,3,   src/librustc_mir/hair/cx/expr.rs--1--2--3,Corrective,
39856,95fc3f47672a417d9027b61a4604d42e462f311e,Standardize `Range*` documentation,This updates the final example in the documentation for the types  `Range`  `RangeFrom`  `RangeFull`  `RangeInclusive`  `RangeTo`   `RangeToInclusive`.   ,1,48,   src/libcore/ops/range.rs--30--18--48,Perfective,
24963,445284372082c1e760bc8cc0fac1d69644f27606,update panicking comments in libstd, ,1,15,   src/libstd/panicking.rs--7--8--15,Perfective,
78352,9b75a2bcd10918a8cde91962a1998615123a401e,make trait matching smarter with projections,also  use the right caching logic for type_moves_by_default (this was  broken by @jroesch).    before:  593.10user 5.21system 7:51.41elapsed 126%CPU (0avgtext+0avgdata 1150016maxresident)k  llvm: 427.045    after:  577.76user 4.27system 7:36.13elapsed 127%CPU (0avgtext+0avgdata 1141608maxresident)k  llvm: 431.001   ,3,38,   src/librustc/middle/ty.rs--15--1--16   src/librustc/middle/infer/mod.rs--9--3--12   src/librustc/middle/fast_reject.rs--6--4--10,Adaptive,
45960,869ebc4f9571a58d6af1855791ae15c864ea4bdc,add declaration blocks to attribute/derive pages, ,1,22,   src/librustdoc/html/render.rs--18--4--22,Adaptive,
19617,b7c8b96e668a1e3c84cf559de1426c6eebd7d1c1,trait_sel: only test predicates w/ no substs,This commit modifies the `substitute_normalize_and_test_predicates`  query  renaming it to `impossible_predicates` and only checking  predicates which do not require substs. By making this change   polymorphization doesn't have to explicitly support vtables.    Signed-off-by: David Wood <david@davidtw.co>   ,1,2,   clippy_lints/src/utils/mod.rs--1--1--2,Perfective,
75646,6c65cc1f8f817a6f580f1a6ca60c8259b80605ee,Remove links to out-of-tree docs, ,1,24,   src/doc/index.md--0--24--24,Perfective,
29946,ed56f867818f7f3fb29dac3cfc0faf316909fd23,Cleaned up unused labels,Deleted unused labels from compiler and fixed or allowed  unused labels in tests. This patch removes some gratuitous  unused labels and turns off the warning for unused labels  that are a necessary part of tests.  This will permit  setting the `unused_labels` lint to `warn`.   ,12,61,   src/test/ui/hygiene/hygienic-labels-in-let.stderr--11--11--22   src/test/ui/hygiene/hygienic-labels.stderr--11--11--22   src/librustc/ty/layout.rs--1--1--2   src/librustc_codegen_ssa/mir/block.rs--1--1--2   .../borrow_check/nll/type_check/liveness/trace.rs--1--1--2   src/libstd/keyword_docs.rs--1--1--2   src/test/ui/for-loop-while/label_break_value.rs--1--1--2   src/test/ui/issues/issue-2216.rs--1--1--2   .../ui/macros/macro-lifetime-used-with-labels.rs--1--1--2   src/test/ui/for-loop-while/loop-label-shadowing.rs--1--0--1   src/test/ui/hygiene/hygienic-labels-in-let.rs--1--0--1   src/test/ui/hygiene/hygienic-labels.rs--1--0--1,Perfective,
25274,1351db31fb646085e6c6f4bc5917d9392eb2a720,iterate over a maps values directly. (clippy::for_kv_map), ,1,2,   src/librustdoc/html/render.rs--1--1--2,Perfective,
91744,0327d8a073a9e094c9cd046c739983f9850ebeeb,librustc: Fix merge fallout., ,2,10,   src/librustc/middle/lint.rs--5--3--8   src/librustc/middle/trans/glue.rs--1--1--2,Corrective,
81778,2d198955d329904cbd54531e6f404a5648ace19f,s/Perform/Performs/,Per [RFC #0505](https://github.com/rust-lang/rfcs/blob/master/text/0505-api-comment-conventions.md#formatting). ,1,8,   src/libcore/convert.rs--4--4--8,Perfective,
78338,78eead63fa91dbe156236b547bb4290f02784712,Implement the simd_insert/simd_extract intrinsics., ,2,23,   src/librustc_trans/trans/intrinsic.rs--20--1--21   src/librustc_typeck/check/mod.rs--2--0--2,Adaptive,
109881,5068ae4771d9abd23b955bdec97b397396a312a4,Factor out a bunch of environment construction code from trans_bind., ,1,47,   src/comp/middle/trans.rs--25--22--47,Perfective,
18033,2c011096d2f5196ef1c322c8754a975ac4078375,ci: fix macOS target name for LLVM 10, ,1,6,   src/ci/scripts/install-clang.sh--3--3--6,Corrective,
18773,8c705f83dbe1d8daef8ee0735abf8583a66f7732,Rustdoc: Fix natural ordering to look at all numbers.,"The old implementation only looks at numbers at the end  but not in  other places in a name: ""u8"" and ""u16"" got sorted properly  but ""u8_bla""  and ""u16_bla"" did not.   ",2,63,   src/librustdoc/html/render/mod.rs--24--13--37   src/librustdoc/html/render/tests.rs--18--8--26,Corrective,
58066,4519192d4f1b72210e6e687d59fdd88229428890,add repository info to libstd,Include the repository info for libstd in the Cargo metadata.   ,1,1,   src/libstd/Cargo.toml--1--0--1,Perfective,
16048,7820cb14421f751c05d6d2d5925236c3429cd93f,Add tests for,* `dst.len()` as the end of the range with loop counters  * the increment of the loop counter at the top of the loop   ,2,34,   tests/ui/manual_memcpy/with_loop_counters.rs--17--0--17   tests/ui/manual_memcpy/with_loop_counters.stderr--13--4--17,Perfective,
78447,21eae93550216ca02c7fa949268d5d2907d36e26,Mark round_up_to_next as inline,This speeds up rustc on #25916 from 1.36±0.022s to 1.326±0.025s    Tests pass locally (even on 32-bit :-) ,1,1,   src/libstd/collections/hash/table.rs--1--0--1,Perfective,
29175,52be0b07ae4ff025e40e04d7fe8d2a530980b637,Only check `min_const_fn` for const fns, ,1,2,   src/librustc_mir/transform/check_consts/validation.rs--1--1--2,Perfective,
42146,8a586eb6cb7609a055273b2e5fd105157fd2c124,Rustup to rustc 1.33.0-nightly (68fe5182c 2019-01-05), ,4,41,   src/constant.rs--9--10--19   src/vtable.rs--10--5--15   src/intrinsics.rs--5--0--5   src/lib.rs--1--1--2,Adaptive,
85080,f5d619caf9f32458680fae55526b99582ca682dd,Implement Sync/Send for windows TCP types, ,1,12,   src/libstd/sys/windows/tcp.rs--12--0--12,Adaptive,
65765,2b7a23ed304d4298247b030eea0820018c05cd30,Hide uninhabitedness checks behind feature gate, ,5,54,   .../uninhabited-matches-feature-gated.rs--22--0--22   src/librustc_mir/build/matches/simplify.rs--7--6--13   src/librustc_const_eval/_match.rs--6--2--8   .../uninhabited-reference-type-feature-gated.rs--0--8--8   src/librustc/ty/inhabitedness/mod.rs--1--2--3,Adaptive,
18788,e9e319c460468123200b90ab46871cf8288edfec,Use intra-doc links, ,1,14,   library/core/src/time.rs--6--8--14,Perfective,
24873,39ee66ab82fc38a13d046ac1caa1eb55edfa8901,Consider well-formed predicates in min-specialization, ,4,62,   .../implcit-well-formed-bounds.rs--22--0--22   .../impl_wf_check/min_specialization.rs--16--3--19   .../specialization_super_trait.rs--13--0--13   .../specialization_super_trait.stderr--8--0--8,Adaptive,
21580,4dc56614b27337fe770943760f41a58bbab7c7c6,liveness: Warn about unused captured variables, ,12,64,   src/librustc_passes/liveness.rs--16--5--21   src/test/ui/liveness/liveness-upvars.stderr--14--0--14   src/test/ui/liveness/liveness-upvars.rs--10--0--10   .../unboxed-closures-counter-not-moved.stderr--3--0--3   .../closure-immutable-outer-variable.fixed--1--1--2   .../closures/closure-immutable-outer-variable.rs--1--1--2   .../closure-immutable-outer-variable.stderr--1--1--2   src/test/ui/issues/issue-11958.rs--1--1--2   src/test/ui/issues/issue-11958.stderr--2--0--2   .../unboxed-closures-counter-not-moved.rs--1--1--2   .../unboxed-closures-move-mutable.rs--1--1--2   .../unboxed-closures-move-mutable.stderr--2--0--2,Adaptive,
39495,f493a59783f3062eff30613e05436dd59087d060,use RefCell and Rc, ,3,13,   src/visitor.rs--5--4--9   src/rewrite.rs--2--1--3   src/expr.rs--1--0--1,Adaptive,
54397,0625d4c282a9fa2a5ba3c6448017898baccfcf9a,begin crate-relative paths with `crate`, ,3,40,   .../run-pass/rfc-2126-extern-absolute-paths/test.rs--21--0--21   src/libsyntax/ext/build.rs--3--7--10   src/libsyntax/test.rs--6--3--9,Adaptive,
26425,83dfb422fe71979914d3db67db135e160ab29dcd,Don't break first line, ,1,24,   src/librustc_mir/dataflow/generic/graphviz.rs--12--12--24,Corrective,
37730,362431b4d6029e473166b9df307a171d961b5675,Cleanup the .await HIR lowering with .stmt(..)., ,1,12,   src/librustc/hir/lowering.rs--2--10--12,Perfective,
3309,8d9e4f98e142dd7a6fd61deac46eddf8bb4a45be,Fix failing test, ,1,14,   compiler/rustc_index/src/bit_set/tests.rs--7--7--14,Corrective,
94271,1ac37d50c0096f13604c7ca249517b76ff1f1802,set sret attribute as needed on call instructions,Since function pointers do not carry along the function attributes with  them in the type  this needs to be set on the call instruction itself.    Closes #9152   ,3,20,   src/librustc/middle/trans/builder.rs--7--7--14   src/librustc/middle/trans/build.rs--2--2--4   src/librustc/middle/trans/foreign.rs--1--1--2,Perfective,
106414,7c925cfaaf2ac311b681862a01c4aa5ecc466090,core: Long lines, ,1,6,   src/libcore/f32.rs--4--2--6,Perfective,
54322,70db41cdf74589c957cb930cdd58ebf6bafee5af,Handle gdb command failure gracefully in compiletest,Previously  if the gdb command was available  but threw an error  compiletest would panic.  This is obviously not good. Now  gdb is treated as missing if calling `gdb --version` does not output anything on stdout.   ,1,17,   src/tools/compiletest/src/main.rs--6--11--17,Perfective,
96828,32228f3d5781f93cc6f6419c1d6de33c5d1ba6c6,std: work-around for take/skip type inference (#6967), ,1,24,   src/libstd/iterator.rs--13--11--24,Perfective,
37949,82410e800f864684ec5009ea0cecd9614155ca06,impl `pointee_info_at` in TyLayout., ,2,8,   src/librustc_codegen_llvm/abi.rs--2--2--4   src/librustc_target/abi/mod.rs--4--0--4,Adaptive,
547,cb6268026206e6596b4754fdedf8f53a0e632273,rustc: Remove `#[rustc_synthetic]`,This function parameter attribute was introduced in https://github.com/rust-lang/rust/pull/44866 as an intermediate step in implementing `impl Trait`  it's not necessary or used anywhere by itself.   ,1,8,   clippy_lints/src/types/borrowed_box.rs--3--5--8,Perfective,
107292,3bc4da96f16298c0575ae82904a2552f7ee1547c,"Inject ""core macros"" into default syntax-expansion environment. Bit of a kludge but enough to work on logging-via-macros.", ,4,69,   src/comp/syntax/ext/expand.rs--24--2--26   src/comp/syntax/parse/parser.rs--18--6--24   src/comp/syntax/ext/base.rs--1--12--13   src/comp/syntax/codemap.rs--5--1--6,Perfective,
52381,d54f70f1f6ae6fa571117e3db30040620e2890a1,Generate let binding variable name for some cases,Given a map call like `x.field.map ...` the suggestion will contain:  `if let Some(x_field) ...`    Given a map call like `x.map ...` the suggestion will contain:  `if let Some(_x) ...`    Otherwise it will suggest: `if let Some(_) ...`   ,3,56,   tests/ui/option_map_unit_fn.stderr--30--4--34   clippy_lints/src/option_map_unit_fn.rs--13--1--14   tests/ui/option_map_unit_fn.rs--8--0--8,Adaptive,
109365,702fe5cdac4f6852689c1e74c3ca95af249f4285,rustc: Run obstack cleanups at the end of each function, ,2,41,   src/comp/middle/trans.rs--30--6--36   src/rt/rust_obstack.cpp--3--2--5,Adaptive,
36057,357b49992c5a468b2d737e77e1ef343a2744a689,let_chains: Add tests for places where let expressions aren't allowed., ,2,28,   .../disallowed-positions.stderr--21--0--21   .../rfc-2497-if-let-chains/disallowed-positions.rs--7--0--7,Perfective,
101263,2d903abeab00cea395980535a200c523630771c7,configure should recursively sync submodules, ,1,4,   configure--4--0--4,Corrective,
92589,55a7b2feddfd54f5a4c5f4dd85d156a0da50428e,librustc: De-`@mut` the `impls` table in the type context, ,4,22,   src/librustc/middle/ty.rs--6--4--10   src/librustc/middle/typeck/coherence.rs--4--2--6   src/librustc/metadata/encoder.rs--2--1--3   src/librustc/middle/trans/meth.rs--2--1--3,Perfective,
15762,9ef311b47706cc0babce08ee86bc9ca7727fc2f5,Rename tables to typecheck_result(), ,1,12,   doc/common_tools_writing_lints.md--7--5--12,Perfective,
62933,93f78bc45e4d4a68038f8d2cf34187d14cb5f918,"rustdoc: Display `extern ""C"" fn` instead of `extern fn`", ,5,17,   src/test/rustdoc/extern-impl.rs--3--3--6   src/test/rustdoc/ffi.rs--2--2--4   src/test/rustdoc/issue-22038.rs--2--2--4   src/test/rustdoc/variadic.rs--1--1--2   src/librustdoc/html/format.rs--0--1--1,Perfective,
35649,c8aa3c1d89706616232a5942f03e898bb0ae4733,Add missing type links in Pin documentation, ,1,53,   src/libcore/pin.rs--30--23--53,Perfective,
12859,3af09b8cf1229fb05a549a13b144aca6b60784c7,New internal lint: interning_defined_symbol, ,6,55,   clippy_lints/src/utils/internal_lints.rs--23--0--23   tests/ui-internal/interning_defined_symbol.fixed--10--0--10   tests/ui-internal/interning_defined_symbol.rs--10--0--10   tests/ui-internal/interning_defined_symbol.stderr--8--0--8   clippy_lints/src/lib.rs--2--0--2   clippy_lints/src/utils/paths.rs--2--0--2,Adaptive,
54796,81f5969704b57215ac12a78459c8ccfbad9be654,Partly fix incorrect useless_attribute suggestion,This fixes an incorrect suggestion from the `useless_attribute` lint  when using `cfg_attr`.    Additionally  it will not show a suggestion anymore  if the attribute  begins on a previous line  because it is much harder to construct the  span of multi-line `cfg_attr` attributes as they don't appear in the AST.    To fix it completely  one would have to parse upwards into the file   and find the beginning of the `cfg_attr` attribute.   ,4,33,   clippy_lints/src/attrs.rs--8--6--14   clippy_lints/src/utils/mod.rs--8--0--8   tests/ui/useless_attribute.stderr--7--1--8   tests/ui/useless_attribute.rs--3--0--3,Corrective,
97578,3d526d1af369472944b65e23c665a62c3254619d,add task-local reference counted smart pointers,To provide a reference counted pointer type with deterministic  destruction once managed boxes are switched over to a garbage  collector. Unlike managed boxes  these can be moved instead of just  copied/cloned which is helpful for avoiding reference counts.   ,2,55,   src/libstd/rc.rs--54--0--54   src/libstd/std.rc--1--0--1,Adaptive,
101896,8b39e736977c9daec15d1845ddb5db3203e4bd0b,Fix whitespace., ,1,2,   src/libsyntax/parse/parser.rs--1--1--2,Perfective,
60789,f16b9e280bdc6f75cc824675fc8f01f2c18277d3,Move all intrinsics out of `interpret` and fail CTFE on intrinsic calls, ,13,72,   miri/helpers.rs--22--0--22   src/librustc_mir/interpret/eval_context.rs--3--12--15   .../interpret/terminator=>miri}/intrinsic.rs--6--2--8   miri/lib.rs--5--0--5   src/librustc_mir/interpret/const_eval.rs--4--1--5   src/librustc_mir/interpret/machine.rs--4--0--4   src/librustc_mir/interpret/lvalue.rs--1--1--2   src/librustc_mir/interpret/memory.rs--1--1--2   src/librustc_mir/interpret/mod.rs--1--1--2   src/librustc_mir/interpret/operator.rs--1--1--2   src/librustc_mir/interpret/terminator/mod.rs--1--1--2   src/librustc_mir/interpret/value.rs--1--1--2   miri/operator.rs--1--0--1,Adaptive,
72911,5d56e1daed3aab8149ecbf69baf5bc1785f08627,Specialize equality for [T] and comparison for [u8],Where T is a type that can be compared for equality bytewise  we can use  memcmp. We can also use memcmp for PartialOrd  Ord for [u8] and by  extension &str.    This is an improvement for example for the comparison [u8] == [u8] that  used to emit a loop that compared the slices byte by byte.    One worry here could be that this introduces function calls to memcmp  in contexts where it should really inline the comparison or even  optimize it out  but llvm takes care of recognizing memcmp specifically.   ,3,58,   src/libcore/slice.rs--43--6--49   src/libcore/str/mod.rs--1--7--8   src/libcore/lib.rs--1--0--1,Adaptive,
12180,ba87acb44090412f5ace0a5ca655e8298d82b874,Implemented needless question mark lint, ,10,91,   clippy_lints/src/needless_question_mark.rs--29--0--29   tests/ui/needless_question_mark.fixed--20--0--20   tests/ui/needless_question_mark.rs--20--0--20   tests/ui/needless_question_mark.stderr--11--0--11   tests/ui/unit_arg.stderr--1--2--3   tests/ui/try_err.fixed--1--1--2   tests/ui/try_err.rs--1--1--2   tests/ui/unit_arg.rs--1--1--2   CHANGELOG.md--1--0--1   clippy_lints/src/lib.rs--1--0--1,Adaptive,
61463,133c1bc9ac998d22a0028d2f2e15473f0d1d08ab,Wrap long line, ,1,3,   src/libstd/macros.rs--2--1--3,Perfective,
9926,bdeec5dbd6e484cec26039cb795193ab044cf4d9,"Use TypeckResults::expr_ty instead of TyCtxt::type_of to fix ""Not a type"" ICE", ,3,28,   tests/ui/crashes/ice-6792.rs--20--0--20   clippy_lints/src/default_numeric_fallback.rs--2--3--5   clippy_lints/src/inconsistent_struct_constructor.rs--1--2--3,Perfective,
31265,748eccd48828e430b906ffa6bd3f6abdcc766dc9,Lints being from a plugin is dependent on the lint  not the registration, ,5,46,   src/librustc/lint/context.rs--7--10--17   src/librustc_lint/lib.rs--7--8--15   src/librustc/lint/mod.rs--5--0--5   src/librustc_driver/lib.rs--2--3--5   src/librustc_interface/passes.rs--2--2--4,Corrective,
5888,327697a540cfab44c7d9c9c7c62948f8f9667fc5,Fix autoderef and autoref for `future_prelude_collision` lint, ,1,14,   compiler/rustc_typeck/src/check/method/mod.rs--13--1--14,Corrective,
73517,b12dcdef4fae5e3856e6911fd6cfbeedadcf3821,tests: Update run-make/issue-25581 to reflect how fat pointers are passed., ,1,13,   src/test/run-make/issue-25581/test.c--4--9--13,Perfective,
82334,90f06ae33fdf34e60c29cbd38dd3ec7be6b3badb,document undefined collection behavior with interior mutability,closes #23327   ,6,29,   src/libstd/collections/hash/set.rs--6--0--6   src/libcollections/binary_heap.rs--5--0--5   src/libcollections/enum_set.rs--5--0--5   src/libstd/collections/hash/map.rs--5--0--5   src/libcollections/btree/map.rs--4--0--4   src/libcollections/btree/set.rs--4--0--4,Perfective,
59355,d5d300c0349c350db13009a4889dbcee3e1a509b,Update tests, ,2,63,   tests/ui/methods.stderr--47--1--48   tests/ui/methods.rs--15--0--15,Perfective,
81822,1cbaf9fd18a4e99345f3ae6d7ba23309e214e32a,Upgrade rust-installer, ,1,2,   src/rust-installer--1--1--2,Perfective,
112078,973023030e7c0ca9814bc60f389bb8d75923edc7,add -O2 when compiling rt  fix warnings triggered by optimizer, ,5,14,   src/rt/rust_crate_reader.cpp--2--2--4   src/rt/rust_task.cpp--2--2--4   Makefile.in--1--1--2   src/rt/rust_internal.h--1--1--2   src/rt/util/indexed_list.h--1--1--2,Corrective,
27251,03240e1359f68bdddcdb236f3a89f9907b907449,review comments, ,3,32,   src/librustc_errors/lib.rs--9--12--21   src/librustc_errors/emitter.rs--5--4--9   .../ui/consts/miri_unleashed/mutable_const2.stderr--1--1--2,Perfective,
77126,20083c1e1f6916eb79e3d967c1c9ab63342c71ae,Move `for` loop desugaring to lowering, ,12,66,   src/librustc_front/lowering.rs--30--5--35   src/libsyntax/ext/expand.rs--1--8--9   src/librustc_driver/pretty.rs--3--3--6   src/librustc_driver/driver.rs--1--2--3   mk/crates.mk--1--1--2   src/librustc/middle/ty/context.rs--1--1--2   src/librustc/session/mod.rs--1--1--2   src/librustc_trans/save/dump_csv.rs--1--1--2   src/librustc_trans/save/mod.rs--1--1--2   src/librustc/middle/astencode.rs--1--0--1   src/librustc_typeck/coherence/mod.rs--1--0--1   src/libsyntax/ast.rs--1--0--1,Perfective,
1,9b86c5998c5b5b274b21651334a320aecc516dfc,s/from_raw_parts/new_unchecked/, ,1,6,   library/core/src/array/iter.rs--3--3--6,Perfective,
17895,bb5e79cbd11dbb8aa91840108b67085e5d5d04f8,Link vec doc to & reference,It is not always obvious that people could see the docs for `&`  especially for beginners  it also helps learnability. ,1,2,   library/alloc/src/vec.rs--1--1--2,Perfective,
14916,671d7c4afb36a7dcedf9ec8a6f3ef00c19bfc260,Account for possible boxable `impl Future` in semicolon removal suggestions, ,7,72,   compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs--20--2--22   .../rustc_infer/src/infer/error_reporting/mod.rs--11--6--17   .../suggestions/match-prev-arm-needing-semi.stderr--12--2--14   compiler/rustc_typeck/src/check/fn_ctxt/checks.rs--6--3--9   .../ui/suggestions/match-prev-arm-needing-semi.rs--5--1--6   compiler/rustc_middle/src/traits/mod.rs--1--1--2   compiler/rustc_typeck/src/check/_match.rs--1--1--2,Adaptive,
63056,5013f491954b9db4db4219f16fe3445f3fcf27c1,clean tests/ui/entry.rs,Cleaning the empty lines for clarity.   ,3,46,   tests/ui/entry.stderr--12--12--24   tests/ui/entry.rs--0--21--21   tests/ui/empty_enum.rs--0--1--1,Perfective,
81718,10359de4051d56feeacd455946b93ec48e6511fc,compiletest: Add support for running rustdoc tests,Add a new test directory called 'rustdoc' where all files inside are documented  and run against the `htmldocck` script to have assertions about the output.   ,5,54,   src/compiletest/runtest.rs--27--14--41   mk/tests.mk--5--1--6   src/compiletest/common.rs--3--1--4   src/compiletest/compiletest.rs--2--0--2   configure--1--0--1,Perfective,
99798,66e50892c1840a030892b2dc6480d42635990b0c,style fix, ,1,4,   src/libstd/treemap.rs--1--3--4,Perfective,
33604,4d62545687d0c10577eb75c058c0662e6b261395,Move def_id out add substsref, ,19,133,   src/librustc_mir/monomorphize/collector.rs--10--12--22   src/librustc_mir/transform/promote_consts.rs--17--5--22   src/librustc_mir/transform/inline.rs--5--8--13   src/librustc_codegen_ssa/mir/place.rs--8--3--11   src/librustc/mir/mod.rs--6--4--10   src/librustc_mir/transform/qualify_consts.rs--4--5--9   src/librustc_mir/borrow_check/error_reporting.rs--3--2--5   src/librustc_mir/borrow_check/mod.rs--2--3--5   .../borrow_check/nll/type_check/mod.rs--2--3--5   src/librustc_mir/borrow_check/places_conflict.rs--2--3--5   src/librustc_codegen_ssa/mir/block.rs--2--2--4   src/librustc_mir/interpret/place.rs--2--2--4   src/librustc_mir/borrow_check/mutability_errors.rs--1--2--3   src/librustc_mir/borrow_check/place_ext.rs--1--2--3   src/librustc_mir/transform/check_unsafety.rs--1--2--3   src/librustc_mir/transform/qualify_min_const_fn.rs--1--2--3   src/librustc/mir/visit.rs--1--1--2   src/librustc_mir/build/expr/as_place.rs--1--1--2   src/librustc_mir/transform/const_prop.rs--1--1--2,Perfective,
2296,78013f296acd79af84dede7dae1580fd36480c7c,Don't anonymize bound region names during typeck,Once this anonymization has performed  we have no  way of recovering the original names during NLL  borrow checking. Keeping the original names allows  error messages in full NLL mode to contain the original  bound region names.    As a result  the typeck results may contain types that  differ only in the names used for their bound regions. However   anonimization of bound regions does not guarantee that  all distinct types are unqual (e.g. not subtypes of each other).  For example  `for<'a> fn(&'a u32  &'a u32)` and  `for<'b  'c> fn(&'b u32  &'c u32)` are subtypes of each other   as explained here:    https://github.com/rust-lang/rust/blob/63cc2bb3d07d6c726dfcdc5f95cbe5ed4760641a/compiler/rustc_infer/src/infer/nll_relate/mod.rs#L682-L690    Therefore  any code handling types with higher-ranked regions already  needs to handle the case where two distinct `Ty`s are 'actually'  equal.   ,10,61,   compiler/rustc_typeck/src/check/writeback.rs--21--1--22   ...subtype.bound_inv_a_b_vs_bound_inv_a.nll.stderr--3--4--7   src/test/ui/lub-glb/old-lub-glb-object.nll.stderr--3--4--7   src/test/ui/rfc1623.nll.stderr--3--4--7   ...ype.bound_a_b_ret_a_vs_bound_a_ret_a.nll.stderr--2--2--4   .../ui/lub-glb/old-lub-glb-hr-noteq1.nll.stderr--2--2--4   src/test/ui/nll/relate_tys/hr-fn-aaa-as-aba.stderr--2--2--4   .../hr-subtype.bound_a_vs_free_x.nll.stderr--1--1--2   src/test/ui/nll/relate_tys/fn-subtype.stderr--1--1--2   src/test/ui/nll/relate_tys/trait-hrtb.stderr--1--1--2,Corrective,
72637,a2426a678d47c4dd7ecb891bf82c57b4201af702,config: Rename get_variant_names to doc_hint,The `ConfigType` trait is implemented for non-enum types  so the name no  longer makes perfect sense.   ,2,19,   src/config.rs--9--8--17   src/utils.rs--1--1--2,Perfective,
101872,9c98d0f99b44e1c57bdd60881518140e2593a5a4,Fix some old syntax, ,1,4,   src/rustc/middle/astencode.rs--2--2--4,Corrective,
9632,74eb44834cc12ce51396d94e98b04fdd0ad9bb64,Extract directory creation into its own function, ,1,39,   clippy_dev/src/lintcheck.rs--24--15--39,Perfective,
45949,65ae0b9a094d83616585438b86e38b36047d8b45,Change enum align semantics to care about absolute length  rather than difference.,"If we're only aligning enum discriminants that are ""not too far apart  (length-wise)""  then this works really well for enums with  consistently-long or consistently-short idents  but not for the mixed  ones.  However  consistently-long idents is somewhate of an uncommon case and  overlong idents may be allowed to be formatted suboptimally if that  makes mixed-length idents work better (and it does in this case).   ",5,79,   .../configs/enum_discrim_align_threshold/40.rs--22--0--22   .../configs/enum_discrim_align_threshold/20.rs--0--18--18   Configurations.md--8--8--16   src/items.rs--7--6--13   .../enum_discrim_align_threshold/{20.rs=>40.rs}--6--4--10,Corrective,
24017,3155eedb68b4aaefe89731b3e1c788453cee1f80,Don't use an exact lint counter anymore, ,3,33,   clippy_dev/src/update_lints.rs--14--11--25   src/lintlist/mod.rs--5--1--6   README.md--1--1--2,Corrective,
67312,d37c02525405261527675fd051b94a23b9330f0c,Update compiler-rt to fix MIPS64 infinite recursion,Fixes #37823.   ,1,2,   src/compiler-rt--1--1--2,Perfective,
57847,fc4a51a24200376f461f643eb9da7378eed075b5,"Prefer println!() to println!("""")", ,2,4,   src/bin/cargo-fmt.rs--1--1--2   src/config.rs--1--1--2,Perfective,
42095,5e6ac305355e7df7becdd23e7e225d1717bf705d,Rustup to rustc 1.33.0-nightly (8e2063d02 2019-01-07), ,1,4,   patches/0002-Disable-u128-and-i128-in-libcore.patch--2--2--4,Perfective,
94459,54368afc03054937e7f5a3b7a9b8cf9c8e85d962,Incorporate feedback from huonw,#NAME?,1,29,   src/libextra/num/bigint.rs--22--7--29,Perfective,
103348,71966176691588623b9f40d96879e4024774b215,tutorial: Reorder sections around the memory model discussion,Also some minor tweaks.   ,1,56,   doc/tutorial.md--27--29--56,Perfective,
101041,71dbbe145c42f3d9dc7842861738bfa64550dbbd,Make moves explicit in rfail tests, ,3,8,   src/test/run-fail/unwind-move.rs--2--2--4   src/test/run-fail/port-type.rs--1--1--2   src/test/run-fail/unwind-box-res.rs--1--1--2,Perfective,
63392,ad1959e8e426279f68c1dd73a67356638c9ee295,added dep nodes and comment, ,2,21,   src/librustc/ty/maps.rs--12--3--15   src/librustc/dep_graph/dep_node.rs--6--0--6,Perfective,
82346,1f5f76adc36082ec514a6cfa4ad2d7e6655a5253,std: Stabilize portions of `std::os::$platform`,This commit starts to organize the `std::os::$platform` modules and in the  process stabilizes some of the functionality contained within. The organization  of these modules will reflect the organization of the standard library itself  with extension traits for primitives in the same corresponding module.    The OS-specific modules will grow more functionality over time including  concrete types that are not extending functionality of other structures  and  these will either go into the closest module in `std::os::$platform` or they  will grow a new module in the hierarchy.    The following items are now stable:    * `os::{unix  windows}`  * `unix::ffi`  * `unix::ffi::OsStrExt`  * `unix::ffi::OsStrExt::{from_bytes  as_bytes  to_cstring}`  * `unix::ffi::OsString`  * `unix::ffi::OsStringExt::{from_vec  into_vec}`  * `unix::process`  * `unix::process::CommandExt`  * `unix::process::CommandExt::{uid  gid}`  * `unix::process::ExitStatusExt`  * `unix::process::ExitStatusExt::signal`  * `unix::prelude`  * `windows::ffi`  * `windows::ffi::OsStringExt`  * `windows::ffi::OsStringExt::from_wide`  * `windows::ffi::OsStrExt`  * `windows::ffi::OsStrExt::encode_wide`  * `windows::prelude`    The following items remain unstable:    * `unix::io`  * `unix::io::{Fd  AsRawFd}`  * `unix::fs::{PermissionsExt  OpenOptionsExt}`  * `windows::io`  * `windows::io::{Handle  AsRawHandle}`  * `windows::io::{Socket  AsRawSocket}`  * `windows::fs`  * `windows::fs::OpenOptionsExt`    Due to the reorgnization of the platform extension modules  this commit is a  breaking change. Most imports can be fixed by adding the relevant libstd module  in the `use` path (such as `ffi` or `fs`).    [breaking-change]   ,9,82,   src/libstd/sys/unix/ext.rs--21--16--37   src/libstd/sys/windows/ext.rs--16--15--31   src/libstd/os.rs--1--1--2   src/libstd/process.rs--1--1--2   src/libstd/sys/unix/os.rs--1--1--2   src/libstd/sys/unix/process2.rs--1--1--2   src/libstd/sys/windows/mod.rs--1--1--2   src/libstd/sys/windows/os.rs--1--1--2   src/libstd/sys/windows/process2.rs--1--1--2,Adaptive,
59207,2c78bb49fde79e93b110a979f1f11b3f1221e1ef,Add --all flag to ./x.py clean,This flag removes all build artifacts  including the LLVM build  directory.   ,4,51,   src/bootstrap/clean.rs--20--15--35   src/bootstrap/flags.rs--8--2--10   src/bootstrap/lib.rs--2--2--4   src/bootstrap/builder.rs--1--1--2,Adaptive,
53344,062a46fdd1d49b1ccdc4f713433521463224d7d9,Reduce diagnostic verbosity by removing labels, ,9,41,   src/librustc_typeck/check/_match.rs--9--8--17   src/test/compile-fail/struct-pat-derived-error.rs--2--4--6   src/test/ui/missing-fields-in-struct-pattern.stderr--1--5--6   src/test/ui/error-codes/E0026-teach.stderr--1--1--2   src/test/ui/error-codes/E0026.stderr--1--1--2   src/test/ui/missing-fields-in-struct-pattern.rs--1--1--2   src/test/ui/numeric-fields.stderr--1--1--2   src/test/ui/type-check/issue-41314.stderr--1--1--2   src/test/ui/union/union-fields-2.stderr--1--1--2,Perfective,
8248,6e77bcbbcd3b92c535c5d272f9508c55ffaa121e,Add Debug implementation for hir::intravisit::FnKind, ,1,2,   compiler/rustc_hir/src/intravisit.rs--1--1--2,Adaptive,
25053,ff65bffe2b143528ff90d5226b18ceca750d7c02,Fix cycle error when emitting suggestion for mismatched `fn` type,Fixes #66667    Previously  we called `tcx.typeck_tables_of` when determining whether or  not to emit a suggestion for a type error. However  we might already be  type-checking the `DefId` we pass to `typeck_tables_of` (it could be  anywhere in the query stack).    Fortunately  we only need the function signature  not the entire  `TypeckTables`. By using `tcx.fn_sig`  we avoid the possibility of cycle  errors while retaining the ability to emit a suggestion.   ,3,39,   .../issues/issue-66667-function-cmp-cycle.stderr--22--0--22   src/librustc_typeck/check/op.rs--2--8--10   .../ui/issues/issue-66667-function-cmp-cycle.rs--7--0--7,Corrective,
95430,02f7f72a9af16607f9c08989fe56d417842a24dd,"Provide a ""configure"" option to disable LLVM assertions",Builds are considerably faster without assertions  so when working on  e.g. libstd  which doesn't directly interact with LLVM  one might want  to disable them.   ,1,14,   configure--11--3--14,Adaptive,
8716,819247f179c0af011ea7219dc361209851eb487d,Update char::escape_debug_ext to handle different escapes in strings vs. chars,"Fixes #83046    The program        fn main() {          println!(""{:?}""  '""');          println!(""{:?}""  ""'"");      }    would previously print        '\""'      ""\'""    With this patch it now prints:        '""'      ""'""   ",7,53,   library/core/src/char/methods.rs--20--5--25   library/core/src/fmt/mod.rs--7--2--9   library/core/src/str/mod.rs--4--3--7   library/alloc/tests/fmt.rs--1--3--4   src/test/rustdoc-ui/check-doc-alias-attr.stderr--1--2--3   src/test/ui/rustdoc/check-doc-alias-attr.stderr--1--2--3   library/core/src/char/mod.rs--2--0--2,Perfective,
22724,a91bad6542e40805b68fc9841fdee59a015fca2b,Highlight an error that can only happen in CTFE, ,1,2,   src/librustc_middle/mir/interpret/error.rs--1--1--2,Perfective,
3137,df9a2e0687895731e12f4a2651e8d70acd08872d,Handle irrufutable or unreachable let-else, ,3,40,   .../usefulness/top-level-alternation.stderr--13--9--22   .../src/thir/pattern/check_match.rs--14--1--15   .../ui/pattern/usefulness/top-level-alternation.rs--3--0--3,Adaptive,
79171,e47e91013ed69e967bb3a07145e86a789c28a1b4,Format while loops  including labels, ,3,42,   src/expr.rs--23--3--26   tests/target/loop.rs--8--1--9   tests/source/loop.rs--6--1--7,Adaptive,
81498,33dca5e3ad376e7bd1fd618d5bbd0ed3a27840f8,rustc: Add long diagnostics for E0165, ,1,21,   src/librustc/diagnostics.rs--20--1--21,Adaptive,
658,d846fe052294be6bd763bfb08479c9b93cda90fd,Add regression test for #90752, ,1,32,   src/test/ui/drop/issue-90752.rs--32--0--32,Perfective,
9495,714a826439b4e61485e3afdfae8c08924120960a,Create types dir and move old module under it, ,1,0,   clippy_lints/src/{types.rs=>types/mod.rs}--0--0--0,Perfective,
14162,7c612c1c5086fb52bed1e0c8f222af109c448267,Force contributors/reviewers to set _some_ changelog entry, ,1,8,   .github/PULL_REQUEST_TEMPLATE.md--4--4--8,Perfective,
41245,7754eb05c41debde225077e1708ab7ba01df62be,fix stabilization order of uniform_paths., ,1,4,   src/libsyntax/feature_gate.rs--2--2--4,Corrective,
82229,1ea971ff87e7aee729c7330a394b975fb3a598b1,Add test case for stable import of invalid span information., ,3,49,   src/test/auxiliary/crate_with_invalid_spans.rs--22--0--22   .../run-pass/import-crate-with-invalid-spans.rs--15--0--15   .../auxiliary/crate_with_invalid_spans_macros.rs--12--0--12,Perfective,
22848,68721d4bb46cc84623acc6056fbea6e13c33190e,Update dependencies, ,1,12,   Cargo.lock--6--6--12,Perfective,
37142,ad52c77a46593f2ebd4ae5a291f1a698527bb123,ci: Attempt to skip a full rustc compile on dist*,Currently when we're preparing cross-compiled compilers it can take  quite some time because we have to build the compiler itself three  different times. The first is the normal bootstrap  the second is a  second build for the build platform  and the third is the actual target  architecture compiler. The second compiler was historically built  exclusively for procedural macros  and long ago we didn't actually need  it.    This commit tries out avoiding that second compiled compiler  meaning we  only compile rustc for the build platform only once. Some local testing  shows that this is promising  but bors is of course the ultimate test!   ,1,30,   src/bootstrap/tool.rs--15--15--30,Perfective,
3800,4dd933cdc244e9aed766553909a5ebf7572baec1,Deprecate llvm_asm!, ,1,4,   library/core/src/macros/mod.rs--4--0--4,Perfective,
78129,5225feceaa345e55bdd3b45007555f6d477faf55,shadowing detection, ,5,45,   src/shadow.rs--22--15--37   README.md--1--1--2   src/lib.rs--1--1--2   src/methods.rs--1--1--2   tests/compile-fail/approx_const.rs--1--1--2,Adaptive,
58798,17a2a766ac61762fdec7e89c80ce9f8ac97bf654,zircon: the type of zx_handle_t is now unsigned,This is a kernel ABI change that landed today. I noticed some other ABI  issues and have left a note to cleanup once they are better defined.   ,1,7,   src/libstd/sys/unix/process/zircon.rs--6--1--7,Perfective,
90648,7cf4d8bc446177204e9e12b1efb199a5dbc956b5,Used inherited mutability in lexer::Reader., ,6,83,   src/libsyntax/parse/lexer.rs--16--19--35   src/libsyntax/ext/tt/transcribe.rs--15--19--34   src/libsyntax/parse/comments.rs--4--3--7   src/libsyntax/ext/tt/macro_parser.rs--1--2--3   src/librustdoc/html/highlight.rs--1--1--2   src/libsyntax/parse/parser.rs--1--1--2,Perfective,
46429,86afd26a6eeb87cf081a65f22b8f79f16aa7da55,Update ISSUE_TEMPLATE, ,1,2,   .github/ISSUE_TEMPLATE.md--1--1--2,Perfective,
91297,7bb498bd7a09f024fe46fc58ea17fe44cbc68df0,Mass rename if_ok! to try!,"This ""bubble up an error"" macro was originally named if_ok! in order to get it  landed  but after the fact it was discovered that this name is not exactly  desirable.    The name `if_ok!` isn't immediately clear that is has much to do with error  handling  and it doesn't look fantastic in all contexts (if if_ok!(...) {}). In  general  the agreed opinion about `if_ok!` is that is came in as subpar.    The name `try!` is more invocative of error handling  it's shorter by 2 letters   and it looks fitting in almost all circumstances. One concern about the word  `try!` is that it's too invocative of exceptions  but the belief is that this  will be overcome with documentation and examples.    Close #12037   ",32,100,   src/libsyntax/print/pprust.rs--15--16--31   src/librustdoc/html/render.rs--3--4--7   src/libextra/json.rs--1--2--3   src/libstd/repr.rs--1--2--3   src/libextra/stats.rs--1--1--2   src/libnative/io/pipe_unix.rs--1--1--2   src/libnative/io/pipe_win32.rs--1--1--2   src/librustc/back/archive.rs--1--1--2   src/librustc/driver/driver.rs--1--1--2   src/librustc/metadata/decoder.rs--1--1--2   src/librustc/middle/dataflow.rs--1--1--2   src/librustc/middle/liveness.rs--1--1--2   src/librustdoc/html/escape.rs--1--1--2   src/librustdoc/html/format.rs--1--1--2   src/librustdoc/lib.rs--1--1--2   src/libsemver/lib.rs--1--1--2   src/libserialize/ebml.rs--1--1--2   src/libstd/fmt/mod.rs--1--1--2   src/libstd/hashmap.rs--1--1--2   src/libstd/io/buffered.rs--1--1--2   src/libstd/io/fs.rs--1--1--2   src/libstd/io/mem.rs--1--1--2   src/libstd/io/mod.rs--1--1--2   src/libstd/io/util.rs--1--1--2   src/libstd/macros.rs--1--1--2   src/libstd/tuple.rs--1--1--2   src/libstd/vec.rs--1--1--2   src/libsyntax/diagnostic.rs--1--1--2   src/libsyntax/print/pp.rs--1--1--2   src/libterm/lib.rs--1--1--2   src/libterm/terminfo/parser/compiled.rs--1--1--2   src/libtest/lib.rs--1--1--2,Perfective,
69937,53baa09bfe1bb8211060dae3eb8bbfe0c637cfb7,Update E0206 message to new format, ,3,54,   src/test/compile-fail/coherence-impls-copy.rs--19--8--27   src/librustc_typeck/coherence/mod.rs--11--4--15   src/test/compile-fail/E0206.rs--9--3--12,Perfective,
51054,a11f7856f41f4231198b18d65e2889bae859b8f7,Always mark unstable const fn as not const, ,1,9,   src/librustc_mir/transform/qualify_consts.rs--2--7--9,Perfective,
24973,01a0c6d441a8630fe179420525e42920ab69d976,rustc_metadata: Remove `rmeta::MacroDef`,Use `ast::MacroDef` instead.    Also remove `Session::imported_macro_spans`  external macros have spans now.   ,12,81,   src/librustc_metadata/rmeta/decoder/cstore_impl.rs--4--12--16   src/librustc_save_analysis/lib.rs--0--13--13   src/librustc_ast_lowering/item.rs--6--6--12   src/librustc_metadata/rmeta/mod.rs--1--8--9   src/librustc_hir/hir.rs--2--4--6   src/librustc_session/session.rs--0--6--6   src/librustdoc/visit_ast.rs--3--3--6   src/librustc_metadata/rmeta/encoder.rs--1--4--5   src/librustc_ast/ast.rs--1--1--2   src/librustc_hir/intravisit.rs--1--1--2   src/librustc_privacy/lib.rs--1--1--2   src/librustdoc/test.rs--1--1--2,Perfective,
5727,f67585d494fd92347e4954a240ddde14dcbd711b,Update test cases for intra-doc links in summaries, ,3,12,   src/test/rustdoc-js/summaries.rs--4--2--6   src/librustdoc/html/markdown/tests.rs--3--1--4   src/test/rustdoc-js/summaries.js--1--1--2,Perfective,
71590,38bbb60c8c5e0655f46bf3ad68985e533d1af776,rustfmt on liblog, ,1,6,   src/liblog/lib.rs--2--4--6,Perfective,
110718,cab73f88976da05f9d51202699eac86b66941a50,Write metadata for more meta_item types. Issue #487, ,10,114,   src/comp/metadata/decoder.rs--24--12--36   src/comp/metadata/encoder.rs--15--6--21   src/comp/back/link.rs--10--9--19   src/comp/pretty/pprust.rs--7--5--12   src/comp/metadata/creader.rs--6--5--11   src/comp/metadata/tags.rs--4--2--6   src/comp/front/fold.rs--1--2--3   src/comp/front/ast.rs--1--1--2   src/comp/front/parser.rs--1--1--2   src/test/run-pass/item-attributes.rs--2--0--2,Adaptive,
69552,54d0acd2fc6414930ff27c01c8640f4e9c666ad5,wording fixes in error messages, ,18,69,   src/librustc_typeck/check/mod.rs--4--5--9   src/test/compile-fail/E0053.rs--3--3--6   src/test/compile-fail/impl-wrong-item-for-trait.rs--3--3--6   src/test/compile-fail/ptr-coercion.rs--3--3--6   .../ui/mismatched_types/trait-impl-fn-incompatibility.stderr--3--3--6   src/librustc/ty/error.rs--2--2--4   src/librustc_errors/emitter.rs--3--1--4   src/librustc_typeck/check/compare_method.rs--2--2--4   src/test/compile-fail/fn-variance-1.rs--2--2--4   src/test/compile-fail/mut-pattern-mismatched.rs--2--2--4   src/librustc_typeck/check/callee.rs--1--1--2   src/librustc_typeck/coherence/orphan.rs--1--1--2   src/librustc_typeck/diagnostics.rs--1--1--2   src/test/compile-fail/E0040.rs--1--1--2   src/test/compile-fail/E0087.rs--1--1--2   src/test/compile-fail/associated-const-impl-wrong-type.rs--1--1--2   src/test/compile-fail/coerce-mut.rs--1--1--2   src/test/compile-fail/slice-mut.rs--1--1--2,Corrective,
1434,9b52a633e46dad4fe1bc99c4fa9794225bff3106,rustdoc: Box `default` fields of `GenericParamDefKind`,This reduces the size of `GenericParamDef` a bit  but some of the size  savings are hidden because of the `ty` field of the `Const` variant.  I will box that in the next commit.   ,3,20,   src/librustdoc/clean/mod.rs--4--4--8   src/librustdoc/clean/types.rs--4--4--8   src/librustdoc/json/conversions.rs--2--2--4,Perfective,
113760,c69ec53dc5ce4edbd84420dbfa3222101e57a9f3,Remove explicit deref workaround in dtor-order test.  No longer necessary., ,1,2,   src/test/run-pass/destructor-ordering.rs--1--1--2,Perfective,
105685,dafd6498063231e2ab01575a949fcb067c404c04,First cut at consolidated core::os module built on core::libc., ,8,130,   src/libcore/os.rs--52--0--52   src/libcore/path.rs--49--0--49   src/libcore/libc.rs--21--1--22   src/libcore/core.rs--1--1--2   src/libcore/str.rs--1--1--2   src/etc/libc.c--1--0--1   src/libcore/core.rc--1--0--1   src/libcore/vec.rs--1--0--1,Adaptive,
83834,ec88426ea8dbee3a4647039d65deea4de31fb69a,Implement winsize() for unix., ,1,41,   src/libstd/sys/unix/tty.rs--40--1--41,Adaptive,
82631,76e9fa63ba0b6d892aa880db9c8373ede3e67c03,core: Audit num module for int/uint,* count_ones/zeros  trailing_ones/zeros return u32  not usize  * rotate_left/right take u32  not usize  * RADIX  MANTISSA_DIGITS  DIGITS  BITS  BYTES are u32  not usize    Doesn't touch pow because there's another PR for it.    [breaking-change]   ,18,101,   src/libcollections/bit.rs--14--14--28   src/libcore/num/mod.rs--20--6--26   src/libcore/num/f32.rs--3--3--6   src/libcore/num/f64.rs--3--3--6   src/libtest/stats.rs--3--3--6   src/libstd/old_io/mod.rs--2--2--4   src/librustc/middle/dataflow.rs--1--2--3   src/libcollections/enum_set.rs--1--1--2   src/libcore/fmt/float.rs--1--1--2   src/libcore/hash/mod.rs--1--1--2   src/libcore/iter.rs--1--1--2   src/libcore/num/int_macros.rs--1--1--2   src/libcore/num/uint_macros.rs--1--1--2   src/librustc/middle/astencode.rs--1--1--2   src/librustc/middle/lang_items.rs--1--1--2   src/libstd/num/strconv.rs--1--1--2   src/libstd/sys/unix/c.rs--1--1--2   src/test/run-pass/vector-sort-panic-safe.rs--1--1--2,Adaptive,
14579,e4d109613eb0c61ab528c9ff632c5807a259b505,Change as_str → to_string in proc_macro::Ident::span() docs,There is no `as_str` function on Ident any more.    Also change it to an intra doc link while we're at it.   ,1,2,   library/proc_macro/src/lib.rs--1--1--2,Perfective,
81382,7f2f09f1b49777cdc8683efe2ce4bdc6ded3603f,Eliminate the obsolete term 'slot'., ,3,50,   src/doc/reference.md--21--21--42   src/doc/grammar.md--3--3--6   src/doc/complement-lang-faq.md--1--1--2,Perfective,
105281,237cd4455cdbf4984c6cffb081fbc3437c6950ca,rustc: Fix a few more instances of node ID stomping  due to AST folding incorrectly passing stuff through unchanged, ,1,8,   src/rustc/syntax/fold.rs--5--3--8,Corrective,
56514,83c08d21740c544df618104b512bac1e3b2299bb,Remove *MetricFn, ,1,54,   src/libtest/lib.rs--10--44--54,Perfective,
38807,cf0454ca1a242cb166bc871c12716832be22216f,Don't build test helpers for wasm32, ,1,5,   src/bootstrap/test.rs--4--1--5,Corrective,
36263,1d19a08ed4743e3c95176fb639ebcd50f68a3313,Format the last expression-statement as expression (#3631), ,10,78,   src/stmt.rs--21--0--21   tests/source/fn-single-line/version_two.rs--15--0--15   src/visitor.rs--5--7--12   tests/target/fn-single-line/version_two.rs--12--0--12   src/expr.rs--1--6--7   src/items.rs--1--3--4   tests/target/issue-3614/version_one.rs--3--0--3   tests/target/issue-3614/version_two.rs--2--0--2   src/lib.rs--1--0--1   .../version_one.rs}--1--0--1,Adaptive,
14790,e1e48ae29b52d214f93d816e99056aacb102a90a,simplify-locals: Change RemoveStatements visitor into a function,No functionl changes intended.   ,1,28,   compiler/rustc_mir/src/transform/simplify.rs--12--16--28,Perfective,
51643,1fb17aba6921e80bd5ad20b85b5df5334a6e32b7,generalize `blame_span`, ,2,26,   .../borrow_check/nll/region_infer/mod.rs--12--10--22   .../borrow_check/nll/region_infer/values.rs--2--2--4,Perfective,
23505,502ae0e8988c1fa3ffc109c0d924e20c85f9426d,Remove usage of `DUMMY_HIR_ID` in `CheckAttrVisitor::check_inline`, ,1,5,   src/librustc_passes/check_attr.rs--2--3--5,Perfective,
34877,ca714e4f01d921b4627e913c26081df1fbacb627,Update Readme.md, ,1,3,   Readme.md--1--2--3,Perfective,
9190,2713ad43425bef040e3c7d55618d18035fe68c1a,Properly lint macro arguments for `explicit_deref_methods`, ,4,18,   tests/ui/explicit_deref_methods.stderr--7--1--8   clippy_lints/src/dereference.rs--3--3--6   tests/ui/explicit_deref_methods.fixed--2--0--2   tests/ui/explicit_deref_methods.rs--2--0--2,Corrective,
14857,a5139196029c8e9bc6e431e11c5e8780c6ee7f62,Add unbounded_depth to serde_json (clippy-driver), ,1,2,   src/tools/rustc-workspace-hack/Cargo.toml--1--1--2,Adaptive,
86566,8384dd93571181047f0461379e7ec49e5305b178,Fix ICE translating array repeat expr of non-Copy type,The type checker permits an array repeat expression of non-Copy  type if the count is 1  but trans asserts on it prior to this  change.    Closes #18425   ,1,35,   src/librustc/middle/trans/tvec.rs--16--19--35,Corrective,
50849,e4b2a97401f0139751f926fd1479898494b20a80,weird thing, ,2,14,   tests/ui/types_fn_to_int.rs--9--0--9   clippy_lints/src/types.rs--3--2--5,Perfective,
55680,3e29fe33304f3108abb36f873aeb631fad506ed8,Use published versions of libsyntax and librustc_errors,Rather than the versions shipping with the compiler. These are still unstable   so nightly is still required  but we can control when we update so breakage should  happen less often.   ,2,62,   Cargo.lock--61--0--61   Cargo.toml--1--0--1,Adaptive,
87813,a40e2a6463f972f687ab7e3636ba8c5595d9877c,Update compile-fail tests due to changed diagnostics, ,2,4,   src/test/compile-fail/resolve-conflict-import-vs-extern-crate.rs--1--1--2   src/test/compile-fail/resolve-conflict-item-vs-import.rs--1--1--2,Perfective,
16750,34d3c7df80dc687e184d8bfa456e851cad9839de,Let user see the full type of type-length limit error, ,17,46,   compiler/rustc_mir/src/monomorphize/collector.rs--13--9--22   src/test/ui/issues/issue-8727.stderr--2--1--3   src/test/ui/infinite/infinite-instantiation.stderr--1--1--2   src/test/ui/issues/issue-22638.stderr--1--1--2   .../issue-37311.stderr--1--1--2   src/test/ui/issues/issue-67552.stderr--1--1--2   src/test/ui/recursion/recursion.stderr--1--1--2   src/test/ui/type_length_limit.stderr--1--1--2   src/test/ui/infinite/infinite-instantiation.rs--1--0--1   src/test/ui/issues/issue-22638.rs--1--0--1   .../issue-37311-type-length-limit/issue-37311.rs--1--0--1   src/test/ui/issues/issue-67552.rs--1--0--1   src/test/ui/issues/issue-8727.rs--1--0--1   .../issue-38591-non-regular-dropck-recursion.rs--1--0--1   ...issue-38591-non-regular-dropck-recursion.stderr--1--0--1   src/test/ui/recursion/recursion.rs--1--0--1   src/test/ui/type_length_limit.rs--1--0--1,Adaptive,
68513,971e0be77c53a4d97f7b50f59854770b651c7881,str: Fix documentation typo,from_utf8 returns a Result  not an Option.    Signed-off-by: David Henningsson <diwic@ubuntu.com>   ,1,2,   src/libcore/str/mod.rs--1--1--2,Perfective,
74265,356bf529eedaea523b4266057b2ce8a13435b737,Fix tests, ,3,46,   src/test/run-fail/mir_dynamic_drops_3.rs--11--9--20   src/test/run-fail/mir_dynamic_drops_1.rs--7--6--13   src/test/run-fail/mir_dynamic_drops_2.rs--7--6--13,Perfective,
47954,5d6ca8e4c52eebeca6721b2276d548a0b29984b3,[nll] librustc_mir: enable feature(nll) for bootstrap, ,1,1,   src/librustc_mir/lib.rs--1--0--1,Perfective,
46744,fa11aad92a20aaf64c1ee4f43015fba9b6d24b62,print git commit hash and commit date in version output,clippy 0.0.212 (964fcbe0 2018-09-06)   ,7,68,   rustc_tools_util/src/lib.rs--45--0--45   build.rs--5--2--7   rustc_tools_util/Cargo.toml--5--0--5   src/main.rs--3--2--5   Cargo.toml--3--0--3   ci/base-tests.sh--2--0--2   .gitignore--1--0--1,Adaptive,
53782,466caa77bb23ed8c7fd39d1fc62a83ce192b7f0a,Make INDENT_BUFFER longer,Avoid panicking when indent whose width is 80 called `to_string()`.   ,1,4,   src/shape.rs--2--2--4,Corrective,
10213,45da2277a0e6452adc4e95baf57e62b01b27b429,Fix some Python2->3 error in publish_toolstate.py by type-checking it, ,1,42,   src/tools/publish_toolstate.py--28--14--42,Corrective,
5830,212e91a3568b3f65fb504ce23ffe31d8d00bbb90,Update tracking issue, ,1,4,   library/std/src/io/cursor.rs--2--2--4,Perfective,
81391,1dee7b0160fd708c8d5ccc6be5099f40e9d3bbba,Run valgrind with fair scheduling when available,Closes #3914.   ,1,3,   mk/platform.mk--2--1--3,Adaptive,
110468,7714cb297b5ef54690acaec26cae4828adfceab7,rustc: Make AST paths use interior vectors, ,12,114,   src/comp/syntax/parse/parser.rs--18--7--25   src/comp/syntax/print/pprust.rs--17--5--22   src/comp/syntax/ast.rs--7--5--12   src/comp/middle/typeck.rs--5--6--11   src/comp/syntax/ext/fmt.rs--5--6--11   src/comp/metadata/tydecode.rs--4--4--8   src/comp/syntax/ext/simplext.rs--4--2--6   src/comp/middle/resolve.rs--3--2--5   src/comp/syntax/ext/base.rs--3--2--5   src/comp/syntax/fold.rs--3--2--5   src/comp/middle/tstate/auxiliary.rs--1--1--2   src/comp/middle/tstate/bitvectors.rs--1--1--2,Adaptive,
80537,82c7282bec967d7f4431e3ebb9240fa9ce8e4051,trpl: Fix missing internal links, ,1,3,   src/doc/trpl/dining-philosophers.md--3--0--3,Perfective,
23850,fbdff5145ac3f6ecfe7bde656cfa41f5a77c8f10,avoid printing allocations twice, ,2,20,   src/librustc_mir/interpret/memory.rs--10--8--18   src/librustc_mir/interpret/machine.rs--1--1--2,Corrective,
62837,474cc91440ecb89a4d7ea81b1786fddbf2b70641,Use in-memory representation for Fingerprint that is more amenable to hashing., ,1,41,   src/librustc/ich/fingerprint.rs--15--26--41,Perfective,
647,32ddd0206c9bd1956f7629c8c76191369f19023f,Refactor linker argument generation,This commit refactors linker argument generation to leverage a helper  function that abstracts away details governing how these arguments are  transformed and provided to the linker.    This fixes the misuse of the `-exported_symbols_list` when an ld-like  linker is used rather than a compiler. A compiler would expect  `-Wl -exported_symbols_list path` but ld would expect  `-exported_symbols_list` and `path` as two seperate arguments. Prior  to this change  an ld-like linker was given  `-exported_symbols_list path`.   ,1,27,   compiler/rustc_codegen_ssa/src/back/linker.rs--10--17--27,Perfective,
48871,920a50ded91cf108ca29ce85dab7eda3b5a76309,Refactoring: return a summary from `format_project`,Rather than modifying `self.summary`.    Also move some Timer methods.   ,1,55,   src/formatting.rs--28--27--55,Perfective,
20919,60410ef020ab9cd079ec2951ac52aa567a32dd26,Fix forge-platform-support URL,Apparently it got changed. ,1,2,   RELEASES.md--1--1--2,Perfective,
61230,bcd73c96579e2cbe677ff5e2bf493f516436a818,Change default documentation rules to correspond with previous state., ,1,4,   src/bootstrap/doc.rs--2--2--4,Perfective,
85866,2578de9d6090210d9e94fd013190f387c8a88048,Test PartialEq multidispatch, ,1,35,   src/test/run-pass/eq-multidispatch.rs--35--0--35,Perfective,
44934,584d871494aa715b9b6e270bcb308d347fc1edbe,config: use 2015 as default Edition,Signed-off-by: Otavio Salvador <otavio@ossystems.com.br>   ,1,6,   src/config/options.rs--6--0--6,Perfective,
100688,624fbbd3d117f7199d69c923c051a6d46a4b88b7,Update and un-xfail tests, ,5,69,   src/test/run-fail/too-much-recursion-unwinding.rs--12--11--23   src/test/run-fail/fail-parens.rs--6--6--12   src/test/run-fail/unwind-resource-fail3.rs--6--6--12   src/test/run-fail/unwind-resource-fail.rs--6--5--11   src/test/run-fail/unwind-resource-fail2.rs--6--5--11,Perfective,
51422,564511e58b09c50932287f005e046865bd015430,add auto-impl for primitive type, ,4,52,   src/librustdoc/clean/auto_trait.rs--23--10--33   src/test/rustdoc/auto-impl-primitive.rs--11--0--11   src/librustdoc/clean/inline.rs--6--0--6   src/librustdoc/clean/mod.rs--1--1--2,Adaptive,
86089,f36ebb0eaaedf116bc9e663b9fe2246719b09268,fixed markdown rendering a H1 in comment, ,1,4,   src/libsyntax/attr.rs--2--2--4,Corrective,
23714,e0bb75ef69f847c849d35e49d0d172a8708211a1,Add EMIT_MIR_FOR_EACH_BIT_WIDTH to tests that need it., ,46,284,   .../32bit/rustc.main.ConstProp.diff--21--0--21   .../32bit/rustc.main.nll.0.mir--18--0--18   ...ring__String].AddMovesForPackedDrops.before.mir--15--0--15   .../{=>64bit}/rustc.main.ConstProp.diff--7--8--15   .../{=>64bit}/rustc.norm2.InstCombine.diff--7--7--14   .../{=>64bit}/rustc.main.nll.0.mir--7--7--14   .../32bit/rustc.norm2.InstCombine.diff--12--0--12   ...ustc.main.SimplifyCfg-elaborate-drops.after.mir--11--0--11   .../discriminant/32bit/rustc.main.ConstProp.diff--11--0--11   .../array_index/32bit/rustc.main.ConstProp.diff--11--0--11   ...ustc.main.SimplifyCfg-elaborate-drops.after.mir--5--5--10   .../64bit/rustc.main.SimplifyLocals.after.mir--10--0--10   .../repeat/32bit/rustc.main.ConstProp.diff--10--0--10   .../slice_len/32bit/rustc.main.ConstProp.diff--10--0--10   .../{=>64bit}/rustc.main.ConstProp.diff--5--5--10   .../repeat/{=>64bit}/rustc.main.ConstProp.diff--4--5--9   .../{=>64bit}/rustc.main.ConstProp.diff--4--4--8   ...ustc.main.SimplifyCfg-elaborate-drops.after.mir--4--4--8   ...ustc.main.SimplifyCfg-elaborate-drops.after.mir--8--0--8   .../rustc.main.SimplifyLocals.after.mir--3--4--7   ...vec__Vec_i32_.AddMovesForPackedDrops.before.mir--6--0--6   .../32bit/rustc.match_bool.mir_map.0.mir--6--0--6   .../{=>64bit}/rustc.match_bool.mir_map.0.mir--2--2--4   ...constant}}.SimplifyCfg-qualify-consts.after.mir--4--0--4   ...constant}}.SimplifyCfg-qualify-consts.after.mir--1--2--3   .../32bit/rustc.E-V-{{constant}}.mir_map.0.mir--3--0--3   ...ustc.{{impl}}-ASSOCIATED_CONSTANT.mir_map.0.mir--3--0--3   src/test/mir-opt/const_prop/slice_len.rs--1--1--2   .../rustc.Test-X-{{constructor}}.mir_map.0.mir--1--1--2   ...ustc.{{impl}}-ASSOCIATED_CONSTANT.mir_map.0.mir--1--1--2   .../rustc.E-V-{{constant}}.mir_map.0.mir--1--1--2   .../rustc.Test-X-{{constructor}}.mir_map.0.mir--2--0--2   src/test/mir-opt/const_prop/array_index.rs--1--1--2   src/test/mir-opt/combine_array_len.rs--1--0--1   src/test/mir-opt/nll/region-subtyping-basic.rs--1--0--1   src/test/mir-opt/issue-41697.rs--1--0--1   src/test/mir-opt/packed-struct-drop-aligned.rs--1--0--1   src/test/mir-opt/const_prop/repeat.rs--1--0--1   .../mir-opt/const_prop/optimizes_into_variable.rs--1--0--1   src/test/mir-opt/simple-match.rs--1--0--1   src/test/mir-opt/array-index-is-temporary.rs--1--0--1   src/test/mir-opt/slice-drop-shim.rs--1--0--1   src/test/mir-opt/const_prop/discriminant.rs--1--0--1   src/test/mir-opt/unusual-item-types.rs--1--0--1   ...ring__String].AddMovesForPackedDrops.before.mir--0--0--0   ...vec__Vec_i32_.AddMovesForPackedDrops.before.mir--0--0--0,Adaptive,
67612,319f46fba306f9e3dbe09e48044f941e74406ed6,rustbuild: Vendor all dependencies,This commit vendors all dependencies when using rustbuild to ensure that we  don't hit the network during a build and can build as a self-contained unit.   ,337,454,   src/vendor/rustc-serialize/src/json.rs--20--0--20   src/vendor/getopts/src/lib.rs--9--0--9   src/vendor/libc/src/unix/bsd/apple/mod.rs--8--0--8   src/vendor/toml/src/parser.rs--8--0--8   src/vendor/libc/src/unix/solaris/mod.rs--6--0--6   src/vendor/gcc/src/lib.rs--5--0--5   src/vendor/libc/src/unix/bsd/freebsdlike/mod.rs--5--0--5   src/vendor/libc/src/unix/mod.rs--5--0--5   src/vendor/libc/src/unix/notbsd/mod.rs--5--0--5   src/vendor/log/src/lib.rs--5--0--5   src/vendor/rustc-serialize/src/serialize.rs--5--0--5   src/vendor/libc/src/unix/haiku/mod.rs--4--0--4   src/vendor/libc/src/unix/notbsd/android/mod.rs--4--0--4   src/vendor/libc/src/unix/notbsd/linux/mips.rs--4--0--4   src/vendor/libc/src/unix/notbsd/linux/mod.rs--4--0--4   src/vendor/libc/src/unix/notbsd/linux/s390x.rs--4--0--4   src/vendor/toml/src/encoder/rustc_serialize.rs--4--0--4   src/vendor/cmake/src/lib.rs--3--0--3   src/vendor/env_logger/src/lib.rs--3--0--3   src/vendor/gcc/src/windows_registry.rs--3--0--3   src/vendor/libc/src/unix/bsd/netbsdlike/mod.rs--3--0--3   .../libc/src/unix/bsd/netbsdlike/netbsd/mod.rs--3--0--3   .../src/unix/bsd/netbsdlike/openbsdlike/mod.rs--3--0--3   src/vendor/libc/src/unix/notbsd/linux/other/mod.rs--3--0--3   src/vendor/rustc-serialize/src/base64.rs--3--0--3   src/vendor/toml/src/decoder/serde.rs--3--0--3   src/vendor/toml/src/lib.rs--3--0--3   src/vendor/filetime/src/lib.rs--2--0--2   src/vendor/libc/src/lib.rs--2--0--2   .../libc/src/unix/bsd/freebsdlike/dragonfly/mod.rs--2--0--2   .../libc/src/unix/bsd/freebsdlike/freebsd/mod.rs--2--0--2   src/vendor/libc/src/unix/bsd/mod.rs--2--0--2   src/vendor/libc/src/unix/notbsd/linux/mips64.rs--2--0--2   .../libc/src/unix/notbsd/linux/musl/b32/arm.rs--2--0--2   .../libc/src/unix/notbsd/linux/musl/b32/asmjs.rs--2--0--2   .../libc/src/unix/notbsd/linux/musl/b32/mips.rs--2--0--2   .../libc/src/unix/notbsd/linux/musl/b32/x86.rs--2--0--2   .../libc/src/unix/notbsd/linux/musl/b64/mod.rs--2--0--2   src/vendor/libc/src/unix/notbsd/linux/musl/mod.rs--2--0--2   .../libc/src/unix/notbsd/linux/other/b32/x86.rs--2--0--2   .../libc/src/unix/notbsd/linux/other/b64/x86_64.rs--2--0--2   src/vendor/libc/src/windows.rs--2--0--2   src/vendor/md5/src/lib.rs--2--0--2   src/vendor/rustc-serialize/src/hex.rs--2--0--2   src/vendor/toml/src/decoder/mod.rs--2--0--2   src/vendor/toml/src/decoder/rustc_serialize.rs--2--0--2   src/vendor/toml/src/encoder/mod.rs--2--0--2   src/vendor/toml/tests/valid/example-v0.4.0.toml--2--0--2   src/vendor/cmake/.cargo-checksum.json--1--0--1   src/vendor/cmake/.gitignore--1--0--1   src/vendor/cmake/.travis.yml--1--0--1   src/vendor/cmake/Cargo.toml--1--0--1   src/vendor/cmake/LICENSE-APACHE--1--0--1   src/vendor/cmake/LICENSE-MIT--1--0--1   src/vendor/cmake/README.md--1--0--1   src/vendor/cmake/src/registry.rs--1--0--1   src/vendor/env_logger/.cargo-checksum.json--1--0--1   src/vendor/env_logger/Cargo.toml--1--0--1   src/vendor/env_logger/src/regex.rs--1--0--1   src/vendor/env_logger/src/string.rs--1--0--1   src/vendor/env_logger/tests/regexp_filter.rs--1--0--1   src/vendor/filetime/.cargo-checksum.json--1--0--1   src/vendor/filetime/.gitignore--1--0--1   src/vendor/filetime/.travis.yml--1--0--1   src/vendor/filetime/Cargo.toml--1--0--1   src/vendor/filetime/LICENSE-APACHE--1--0--1   src/vendor/filetime/LICENSE-MIT--1--0--1   src/vendor/filetime/README.md--1--0--1   src/vendor/filetime/appveyor.yml--1--0--1   src/vendor/gcc/.cargo-checksum.json--1--0--1   src/vendor/gcc/.gitignore--1--0--1   src/vendor/gcc/.travis.yml--1--0--1   src/vendor/gcc/Cargo.toml--1--0--1   src/vendor/gcc/LICENSE-APACHE--1--0--1   src/vendor/gcc/LICENSE-MIT--1--0--1   src/vendor/gcc/README.md--1--0--1   src/vendor/gcc/appveyor.yml--1--0--1   src/vendor/gcc/src/bin/gcc-shim.rs--1--0--1   src/vendor/gcc/src/registry.rs--1--0--1   src/vendor/gcc/tests/cc_env.rs--1--0--1   src/vendor/gcc/tests/support/mod.rs--1--0--1   src/vendor/gcc/tests/test.rs--1--0--1   src/vendor/getopts/.cargo-checksum.json--1--0--1   src/vendor/getopts/.gitignore--1--0--1   src/vendor/getopts/.travis.yml--1--0--1   src/vendor/getopts/Cargo.toml--1--0--1   src/vendor/getopts/LICENSE-APACHE--1--0--1   src/vendor/getopts/LICENSE-MIT--1--0--1   src/vendor/getopts/README.md--1--0--1   src/vendor/getopts/appveyor.yml--1--0--1   src/vendor/getopts/tests/smoke.rs--1--0--1   src/vendor/libc/.cargo-checksum.json--1--0--1   src/vendor/libc/.gitignore--1--0--1   src/vendor/libc/.travis.yml--1--0--1   src/vendor/libc/Cargo.toml--1--0--1   src/vendor/libc/LICENSE-APACHE--1--0--1   src/vendor/libc/LICENSE-MIT--1--0--1   src/vendor/libc/README.md--1--0--1   src/vendor/libc/appveyor.yml--1--0--1   src/vendor/libc/ci/README.md--1--0--1   .../ci/docker/aarch64-unknown-linux-gnu/Dockerfile--1--0--1   .../ci/docker/arm-linux-androideabi/Dockerfile--1--0--1   .../docker/arm-unknown-linux-gnueabihf/Dockerfile--1--0--1   .../ci/docker/i686-unknown-linux-gnu/Dockerfile--1--0--1   .../ci/docker/i686-unknown-linux-musl/Dockerfile--1--0--1   .../ci/docker/mips-unknown-linux-gnu/Dockerfile--1--0--1   .../ci/docker/mips-unknown-linux-musl/Dockerfile--1--0--1   .../mips64-unknown-linux-gnuabi64/Dockerfile--1--0--1   .../ci/docker/mipsel-unknown-linux-musl/Dockerfile--1--0--1   .../ci/docker/powerpc-unknown-linux-gnu/Dockerfile--1--0--1   .../docker/powerpc64-unknown-linux-gnu/Dockerfile--1--0--1   .../ci/docker/x86_64-rumprun-netbsd/Dockerfile--1--0--1   .../ci/docker/x86_64-unknown-freebsd/Dockerfile--1--0--1   .../ci/docker/x86_64-unknown-linux-gnu/Dockerfile--1--0--1   .../ci/docker/x86_64-unknown-linux-musl/Dockerfile--1--0--1   .../ci/docker/x86_64-unknown-openbsd/Dockerfile--1--0--1   src/vendor/libc/ci/dox.sh--1--0--1   src/vendor/libc/ci/landing-page-footer.html--1--0--1   src/vendor/libc/ci/landing-page-head.html--1--0--1   src/vendor/libc/ci/run-docker.sh--1--0--1   src/vendor/libc/ci/run-qemu.sh--1--0--1   src/vendor/libc/ci/run.sh--1--0--1   src/vendor/libc/ci/style.rs--1--0--1   src/vendor/libc/src/dox.rs--1--0--1   src/vendor/libc/src/macros.rs--1--0--1   src/vendor/libc/src/unix/bsd/apple/b32.rs--1--0--1   src/vendor/libc/src/unix/bsd/apple/b64.rs--1--0--1   .../libc/src/unix/bsd/freebsdlike/freebsd/x86.rs--1--0--1   .../src/unix/bsd/freebsdlike/freebsd/x86_64.rs--1--0--1   .../unix/bsd/netbsdlike/netbsd/other/b32/mod.rs--1--0--1   .../unix/bsd/netbsdlike/netbsd/other/b64/mod.rs--1--0--1   .../src/unix/bsd/netbsdlike/netbsd/other/mod.rs--1--0--1   .../src/unix/bsd/netbsdlike/openbsdlike/bitrig.rs--1--0--1   .../src/unix/bsd/netbsdlike/openbsdlike/openbsd.rs--1--0--1   src/vendor/libc/src/unix/haiku/b32.rs--1--0--1   src/vendor/libc/src/unix/haiku/b64.rs--1--0--1   src/vendor/libc/src/unix/notbsd/android/b32.rs--1--0--1   src/vendor/libc/src/unix/notbsd/android/b64.rs--1--0--1   .../libc/src/unix/notbsd/linux/musl/b32/mod.rs--1--0--1   .../libc/src/unix/notbsd/linux/musl/b64/aarch64.rs--1--0--1   .../src/unix/notbsd/linux/musl/b64/powerpc64.rs--1--0--1   .../libc/src/unix/notbsd/linux/musl/b64/x86_64.rs--1--0--1   .../libc/src/unix/notbsd/linux/other/b32/arm.rs--1--0--1   .../libc/src/unix/notbsd/linux/other/b32/mod.rs--1--0--1   .../src/unix/notbsd/linux/other/b32/powerpc.rs--1--0--1   .../src/unix/notbsd/linux/other/b64/aarch64.rs--1--0--1   .../libc/src/unix/notbsd/linux/other/b64/mod.rs--1--0--1   .../src/unix/notbsd/linux/other/b64/powerpc64.rs--1--0--1   src/vendor/log/.cargo-checksum.json--1--0--1   src/vendor/log/.gitignore--1--0--1   src/vendor/log/.travis.yml--1--0--1   src/vendor/log/Cargo.toml--1--0--1   src/vendor/log/LICENSE-APACHE--1--0--1   src/vendor/log/LICENSE-MIT--1--0--1   src/vendor/log/README.md--1--0--1   src/vendor/log/appveyor.yml--1--0--1   src/vendor/log/src/macros.rs--1--0--1   src/vendor/log/tests/filters.rs--1--0--1   src/vendor/md5/.cargo-checksum.json--1--0--1   src/vendor/md5/.gitignore--1--0--1   src/vendor/md5/.travis.yml--1--0--1   src/vendor/md5/Cargo.toml--1--0--1   src/vendor/md5/LICENSE.txt--1--0--1   src/vendor/md5/README.md--1--0--1   src/vendor/md5/benches/lib.rs--1--0--1   src/vendor/num_cpus/.cargo-checksum.json--1--0--1   src/vendor/num_cpus/.gitignore--1--0--1   src/vendor/num_cpus/Cargo.toml--1--0--1   src/vendor/num_cpus/LICENSE-APACHE--1--0--1   src/vendor/num_cpus/LICENSE-MIT--1--0--1   src/vendor/num_cpus/README.md--1--0--1   src/vendor/num_cpus/src/lib.rs--1--0--1   src/vendor/rustc-serialize/.cargo-checksum.json--1--0--1   src/vendor/rustc-serialize/.gitignore--1--0--1   src/vendor/rustc-serialize/.travis.yml--1--0--1   src/vendor/rustc-serialize/Cargo.toml--1--0--1   src/vendor/rustc-serialize/LICENSE-APACHE--1--0--1   src/vendor/rustc-serialize/LICENSE-MIT--1--0--1   src/vendor/rustc-serialize/README.md--1--0--1   src/vendor/rustc-serialize/appveyor.yml--1--0--1   src/vendor/rustc-serialize/benches/base64.rs--1--0--1   src/vendor/rustc-serialize/benches/hex.rs--1--0--1   src/vendor/rustc-serialize/benches/json.rs--1--0--1   src/vendor/rustc-serialize/src/collection_impls.rs--1--0--1   src/vendor/rustc-serialize/src/lib.rs--1--0--1   src/vendor/toml/.cargo-checksum.json--1--0--1   src/vendor/toml/.gitignore--1--0--1   src/vendor/toml/.travis.yml--1--0--1   src/vendor/toml/Cargo.toml--1--0--1   src/vendor/toml/LICENSE-APACHE--1--0--1   src/vendor/toml/LICENSE-MIT--1--0--1   src/vendor/toml/README.md--1--0--1   src/vendor/toml/examples/toml2json.rs--1--0--1   src/vendor/toml/src/display.rs--1--0--1   src/vendor/toml/src/encoder/serde.rs--1--0--1   src/vendor/toml/tests/README.md--1--0--1   .../array-mixed-types-ints-and-floats.json--1--0--1   src/vendor/toml/tests/invalid.rs--1--0--1   .../invalid/array-mixed-types-arrays-and-ints.toml--1--0--1   .../invalid/array-mixed-types-ints-and-floats.toml--1--0--1   .../array-mixed-types-strings-and-ints.toml--1--0--1   .../tests/invalid/datetime-malformed-no-leads.toml--1--0--1   .../tests/invalid/datetime-malformed-no-secs.toml--1--0--1   .../tests/invalid/datetime-malformed-no-t.toml--1--0--1   .../tests/invalid/datetime-malformed-no-z.toml--1--0--1   .../invalid/datetime-malformed-with-milli.toml--1--0--1   .../toml/tests/invalid/duplicate-key-table.toml--1--0--1   src/vendor/toml/tests/invalid/duplicate-keys.toml--1--0--1   .../toml/tests/invalid/duplicate-tables.toml--1--0--1   .../toml/tests/invalid/empty-implicit-table.toml--1--0--1   src/vendor/toml/tests/invalid/empty-table.toml--1--0--1   .../toml/tests/invalid/float-no-leading-zero.toml--1--0--1   .../tests/invalid/float-no-trailing-digits.toml--1--0--1   src/vendor/toml/tests/invalid/key-after-array.toml--1--0--1   src/vendor/toml/tests/invalid/key-after-table.toml--1--0--1   src/vendor/toml/tests/invalid/key-empty.toml--1--0--1   src/vendor/toml/tests/invalid/key-hash.toml--1--0--1   src/vendor/toml/tests/invalid/key-newline.toml--1--0--1   .../toml/tests/invalid/key-open-bracket.toml--1--0--1   .../tests/invalid/key-single-open-bracket.toml--1--0--1   src/vendor/toml/tests/invalid/key-space.toml--1--0--1   .../toml/tests/invalid/key-start-bracket.toml--1--0--1   src/vendor/toml/tests/invalid/key-two-equals.toml--1--0--1   .../toml/tests/invalid/string-bad-byte-escape.toml--1--0--1   .../toml/tests/invalid/string-bad-escape.toml--1--0--1   .../toml/tests/invalid/string-byte-escapes.toml--1--0--1   src/vendor/toml/tests/invalid/string-no-close.toml--1--0--1   .../toml/tests/invalid/table-array-implicit.toml--1--0--1   .../invalid/table-array-malformed-bracket.toml--1--0--1   .../tests/invalid/table-array-malformed-empty.toml--1--0--1   src/vendor/toml/tests/invalid/table-empty.toml--1--0--1   .../tests/invalid/table-nested-brackets-close.toml--1--0--1   .../tests/invalid/table-nested-brackets-open.toml--1--0--1   .../toml/tests/invalid/table-whitespace.toml--1--0--1   .../toml/tests/invalid/table-with-pound.toml--1--0--1   .../tests/invalid/text-after-array-entries.toml--1--0--1   .../toml/tests/invalid/text-after-integer.toml--1--0--1   .../toml/tests/invalid/text-after-string.toml--1--0--1   .../toml/tests/invalid/text-after-table.toml--1--0--1   .../tests/invalid/text-before-array-separator.toml--1--0--1   src/vendor/toml/tests/invalid/text-in-array.toml--1--0--1   src/vendor/toml/tests/valid.rs--1--0--1   src/vendor/toml/tests/valid/array-empty.json--1--0--1   src/vendor/toml/tests/valid/array-empty.toml--1--0--1   src/vendor/toml/tests/valid/array-nospaces.json--1--0--1   src/vendor/toml/tests/valid/array-nospaces.toml--1--0--1   .../toml/tests/valid/arrays-hetergeneous.json--1--0--1   .../toml/tests/valid/arrays-hetergeneous.toml--1--0--1   src/vendor/toml/tests/valid/arrays-nested.json--1--0--1   src/vendor/toml/tests/valid/arrays-nested.toml--1--0--1   src/vendor/toml/tests/valid/arrays.json--1--0--1   src/vendor/toml/tests/valid/arrays.toml--1--0--1   src/vendor/toml/tests/valid/bool.json--1--0--1   src/vendor/toml/tests/valid/bool.toml--1--0--1   .../toml/tests/valid/comments-everywhere.json--1--0--1   .../toml/tests/valid/comments-everywhere.toml--1--0--1   src/vendor/toml/tests/valid/datetime.json--1--0--1   src/vendor/toml/tests/valid/datetime.toml--1--0--1   src/vendor/toml/tests/valid/empty.json--1--0--1   src/vendor/toml/tests/valid/example-bom.toml--1--0--1   src/vendor/toml/tests/valid/example-v0.3.0.json--1--0--1   src/vendor/toml/tests/valid/example-v0.3.0.toml--1--0--1   src/vendor/toml/tests/valid/example-v0.4.0.json--1--0--1   src/vendor/toml/tests/valid/example.json--1--0--1   src/vendor/toml/tests/valid/example.toml--1--0--1   src/vendor/toml/tests/valid/example2.json--1--0--1   src/vendor/toml/tests/valid/example2.toml--1--0--1   src/vendor/toml/tests/valid/float.json--1--0--1   src/vendor/toml/tests/valid/float.toml--1--0--1   src/vendor/toml/tests/valid/hard_example.json--1--0--1   src/vendor/toml/tests/valid/hard_example.toml--1--0--1   .../tests/valid/implicit-and-explicit-after.json--1--0--1   .../tests/valid/implicit-and-explicit-after.toml--1--0--1   .../tests/valid/implicit-and-explicit-before.json--1--0--1   .../tests/valid/implicit-and-explicit-before.toml--1--0--1   src/vendor/toml/tests/valid/implicit-groups.json--1--0--1   src/vendor/toml/tests/valid/implicit-groups.toml--1--0--1   src/vendor/toml/tests/valid/integer.json--1--0--1   src/vendor/toml/tests/valid/integer.toml--1--0--1   .../toml/tests/valid/key-equals-nospace.json--1--0--1   .../toml/tests/valid/key-equals-nospace.toml--1--0--1   src/vendor/toml/tests/valid/key-space.json--1--0--1   src/vendor/toml/tests/valid/key-space.toml--1--0--1   src/vendor/toml/tests/valid/key-special-chars.json--1--0--1   src/vendor/toml/tests/valid/key-special-chars.toml--1--0--1   src/vendor/toml/tests/valid/key-with-pound.json--1--0--1   src/vendor/toml/tests/valid/key-with-pound.toml--1--0--1   src/vendor/toml/tests/valid/long-float.json--1--0--1   src/vendor/toml/tests/valid/long-float.toml--1--0--1   src/vendor/toml/tests/valid/long-integer.json--1--0--1   src/vendor/toml/tests/valid/long-integer.toml--1--0--1   src/vendor/toml/tests/valid/multiline-string.json--1--0--1   src/vendor/toml/tests/valid/multiline-string.toml--1--0--1   .../toml/tests/valid/raw-multiline-string.json--1--0--1   .../toml/tests/valid/raw-multiline-string.toml--1--0--1   src/vendor/toml/tests/valid/raw-string.json--1--0--1   src/vendor/toml/tests/valid/raw-string.toml--1--0--1   src/vendor/toml/tests/valid/string-empty.json--1--0--1   src/vendor/toml/tests/valid/string-empty.toml--1--0--1   src/vendor/toml/tests/valid/string-escapes.json--1--0--1   src/vendor/toml/tests/valid/string-escapes.toml--1--0--1   src/vendor/toml/tests/valid/string-simple.json--1--0--1   src/vendor/toml/tests/valid/string-simple.toml--1--0--1   src/vendor/toml/tests/valid/string-with-pound.json--1--0--1   src/vendor/toml/tests/valid/string-with-pound.toml--1--0--1   .../toml/tests/valid/table-array-implicit.json--1--0--1   .../toml/tests/valid/table-array-implicit.toml--1--0--1   src/vendor/toml/tests/valid/table-array-many.json--1--0--1   src/vendor/toml/tests/valid/table-array-many.toml--1--0--1   src/vendor/toml/tests/valid/table-array-nest.json--1--0--1   src/vendor/toml/tests/valid/table-array-nest.toml--1--0--1   src/vendor/toml/tests/valid/table-array-one.json--1--0--1   src/vendor/toml/tests/valid/table-array-one.toml--1--0--1   src/vendor/toml/tests/valid/table-empty.json--1--0--1   src/vendor/toml/tests/valid/table-empty.toml--1--0--1   src/vendor/toml/tests/valid/table-sub-empty.json--1--0--1   src/vendor/toml/tests/valid/table-sub-empty.toml--1--0--1   src/vendor/toml/tests/valid/table-whitespace.json--1--0--1   src/vendor/toml/tests/valid/table-whitespace.toml--1--0--1   src/vendor/toml/tests/valid/table-with-pound.json--1--0--1   src/vendor/toml/tests/valid/table-with-pound.toml--1--0--1   src/vendor/toml/tests/valid/unicode-escape.json--1--0--1   src/vendor/toml/tests/valid/unicode-escape.toml--1--0--1   src/vendor/toml/tests/valid/unicode-literal.json--1--0--1   src/vendor/toml/tests/valid/unicode-literal.toml--1--0--1   src/vendor/cmake/.cargo-ok--0--0--0   src/vendor/env_logger/.cargo-ok--0--0--0   src/vendor/filetime/.cargo-ok--0--0--0   src/vendor/gcc/.cargo-ok--0--0--0   src/vendor/getopts/.cargo-ok--0--0--0   src/vendor/libc/.cargo-ok--0--0--0   src/vendor/log/.cargo-ok--0--0--0   src/vendor/md5/.cargo-ok--0--0--0   src/vendor/num_cpus/.cargo-ok--0--0--0   src/vendor/rustc-serialize/.cargo-ok--0--0--0   src/vendor/toml/.cargo-ok--0--0--0   src/vendor/toml/tests/valid/empty.toml--0--0--0,Adaptive,
90895,5bb9bd2d346c5921d35da5e743d1f20534b2b4d7,Document the Tm struct and fields, ,1,54,   src/libtime/lib.rs--42--12--54,Adaptive,
94354,889e1b9731615a6b03b0e46662edb70c6ca7e7ad,add `noalias` attribute to ~ return values, ,4,47,   src/librustc/middle/trans/base.rs--15--9--24   src/rustllvm/RustWrapper.cpp--15--0--15   src/librustc/lib/llvm.rs--6--0--6   src/rustllvm/rustllvm.def.in--2--0--2,Adaptive,
111915,11c359962ecabc4082e48eacddc823e3e7a377e7,test: XFAIL lib-box on stage0. Upstream LLVM doesn't have the library reading patch yet., ,2,4,   src/test/run-pass/drop-parametric-closure-with-bound-box.rs--2--0--2   src/test/run-pass/lib-box.rs--2--0--2,Perfective,
23374,7e6dbd2b7f271aa773f754c4e5dd49ff046f12ba,Address reviewers' comments: replace resolve_thread_local_allocation_id with resolve_maybe_global_alloc  clarify comments., ,2,44,   src/librustc_mir/interpret/machine.rs--23--12--35   src/librustc_mir/interpret/memory.rs--2--7--9,Perfective,
67513,eef10d0b5b9e0788442fc6c8ecce57ae7f5a4047,Clean up extraneous &mut., ,1,2,   src/libsyntax/ext/tt/macro_parser.rs--1--1--2,Perfective,
48985,d77defcca114c14e6bbedc24697ead76a249a567,Update stdsimd to undo an accidental stabilization,Closes #52403   ,4,10,   src/libstd/lib.rs--0--4--4   src/libcore/lib.rs--0--3--3   src/stdsimd--1--1--2   src/test/rustdoc-js/multi-query.js--0--1--1,Perfective,
85663,31b240d6bcb81836fca2c2aa4076daa2aea587fe,Add comments with type annotations.,This will hopefully help people with their first steps in Rust.    Fixes #16143.   ,1,56,   src/doc/guide.md--36--20--56,Perfective,
30616,62d1082190662d7efaf4350ee3d2ce661565421a,Update cranelift and object, ,2,72,   Cargo.lock--40--22--62   Cargo.toml--3--7--10,Perfective,
43788,1fed72bad4a7740cab5b5f607018a089f6d0132a,Address 'clippy::single-match' dogfood lint, ,1,10,   clippy_lints/src/trivially_copy_pass_by_ref.rs--4--6--10,Corrective,
33231,4458bef5d153e81ebd5f21c29a75e37e44f997f1,Simplify issue-4291 test, ,2,24,   tests/ui/extra_unused_lifetimes.rs--4--12--16   tests/ui/extra_unused_lifetimes.stderr--7--1--8,Perfective,
2543,4951e3ad9ecc653bd2097c6a80e2e1c841edec66,Point at argument when evaluating `Path`'s bounds,When evaluating an `ExprKind::Call`  we first have to `check_expr` on it's  callee. When this one is a `ExprKind::Path`  we had to evaluate the bounds  introduced for its arguments  but by the time we evaluated them we no  longer had access to the argument spans. Now we special case this so  that we can point at the right place on unsatisfied bounds. This also  allows the E0277 deduplication to kick in correctly  so we now emit  fewer errors.   ,10,78,   compiler/rustc_typeck/src/check/expr.rs--18--4--22   .../associated-types-path-2.stderr--3--11--14   .../ui/suggestions/issue-84973-blacklist.stderr--2--9--11   src/test/ui/issues/issue-17651.stderr--1--9--10   compiler/rustc_typeck/src/check/callee.rs--8--1--9   .../feature-gate-unsized_fn_params.stderr--2--2--4   src/test/ui/issues/issue-30355.stderr--2--2--4   .../ui/associated-types/associated-types-path-2.rs--0--2--2   src/test/ui/issues/issue-17651.rs--0--1--1   src/test/ui/suggestions/issue-84973-blacklist.rs--0--1--1,Perfective,
2731,e07ae3ca26fd15202af7fbcb19042d468b1213f0,ARMV6K 3DS: Removed useless parameters in target spec, ,1,4,   compiler/rustc_target/src/spec/armv6k_nintendo_3ds.rs--1--3--4,Perfective,
85147,177529267dd12e698435f84557e27307034e211d,Address code review nits, ,1,6,   src/librustdoc/html/format.rs--3--3--6,Perfective,
87667,fd278a892a9bb27fbe274d7cb472bc7e4ca0c1b3,Avoid flow-on Iterator error for `for ... in [ty err] {}`.,This squashes the    > `for` loop expression has type `[type error]` which does not implement  > the `Iterator` trait    message that one received when writing `for ... in x` where was  previously found to have a type error.    Fixes #16042.   ,2,29,   src/test/compile-fail/for-loop-type-error.rs--16--0--16   src/librustc/middle/typeck/check/mod.rs--9--4--13,Corrective,
11913,b18a426fb4f28493f8777cef6a146ac8731eb43e,Fix rustdoc --test-builder argument parsing, ,1,5,   src/librustdoc/lib.rs--3--2--5,Perfective,
18914,d635b76eaf3435f9bdce1dcbdd315b0e770493f0,adopt comments from review, ,9,76,   clippy_lints/src/needless_arbitrary_self_type.rs--23--0--23   clippy_lints/src/needless_fn_self_type.rs--0--16--16   tests/ui/needless_arbitrary_self_type.rs--12--0--12   tests/ui/needless_arbitrary_self_type.stderr--9--0--9   tests/ui/needless_fn_self_type.rs--0--6--6   src/lintlist/mod.rs--1--2--3   tests/ui/needless_fn_self_type.stderr--0--3--3   CHANGELOG.md--1--1--2   clippy_lints/src/lib.rs--1--1--2,Perfective,
2857,7f1c2c0e53898c987942388bb0868cb8ccb46cdf,Add target to cargo config, ,1,1,   .cargo/config--1--0--1,Adaptive,
65676,ab21314c3fbf093c92123abee62101d15846c1e2,Disable backtrace tests on i686-pc-windows-gnu since it's broken by FPO, ,2,5,   src/test/run-pass/backtrace.rs--4--0--4   src/test/run-pass/backtrace-debuginfo.rs--1--0--1,Corrective,
41396,20ba476ea85b0d01fc468c565770f1fb61132273,wildcard_match_arm: expand lint scope.,We're not only working with Results.   ,1,19,   clippy_lints/src/matches.rs--8--11--19,Perfective,
113309,5c622b6ecbb47cfcef7322047217665bda5675b7,rustc: Lex identifiers that have numbers in them too, ,1,8,   src/comp/front/lexer.rs--6--2--8,Perfective,
81017,2e23d8196e94d5b4a8c383e834829f900ab368c3,tests for lint that warns about mixing #[repr(C)] with Drop.,THis includes tests for struct and enum. (I suspect the closure case  is actually unreachable  but i see no harm in including it.)   ,1,22,   .../compile-fail/lint-no-drop-on-repr-extern.rs--22--0--22,Perfective,
92038,29840addd46b6ae01b61ee93247164d5818f09e0,remove the concept of managed-unique from libstd,Closes #11545   ,2,47,   src/libstd/cleanup.rs--16--28--44   src/libstd/managed.rs--0--3--3,Corrective,
64449,422330df2853695987f47cc8c5e25a36e232ea27,Render redirect pages.,These pages will help people who have links to the older book.   ,1,9,   src/bootstrap/doc.rs--9--0--9,Perfective,
82552,61a2766136536f9993ae095075ec766cfc729f8b,Note the alternate form of vec in trpl, ,1,6,   src/doc/trpl/arrays-vectors-and-slices.md--6--0--6,Perfective,
32569,27c7c23840290fed94aef069b47169b26b7c3625,Rename `waiting_cache`.,The name `waiting_cache` sounds like it is related to the states  `NodeState::Waiting`  but it's not; the cache holds nodes of various  states.    This commit changes it to `active_state`.   ,1,22,   .../obligation_forest/mod.rs--11--11--22,Perfective,
100516,78ee821154ba6034a86397d8540fec00c94e9282,Implement trait inheritance for bounded type parameters, ,38,159,   src/librustc/middle/typeck/check/vtable.rs--11--10--21   src/librustc/middle/typeck/check/method.rs--12--5--17   src/test/run-pass/trait-inheritance-num2.rs--12--0--12   src/librustc/middle/ty.rs--8--0--8   src/test/run-pass/trait-inheritance-overloading.rs--3--2--5   src/test/run-pass/trait-inheritance-subst2.rs--5--0--5   src/test/run-pass/trait-inheritance-cast.rs--4--0--4   src/test/run-pass/trait-inheritance-static2.rs--4--0--4   src/test/run-pass/trait-inheritance-simple.rs--2--2--4   .../auxiliary/trait_inheritance_overloading_xc.rs--3--1--4   src/test/run-pass/trait-inheritance-auto.rs--4--0--4   ...-inheritance-cast-without-call-to-supertrait.rs--4--0--4   src/test/run-pass/trait-inheritance-subst.rs--4--0--4   src/test/run-pass/trait-inheritance-auto-xc-2.rs--3--0--3   src/test/run-pass/trait-inheritance-auto-xc.rs--3--0--3   .../trait-inheritance-call-bound-inherited.rs--3--0--3   .../trait-inheritance-call-bound-inherited2.rs--3--0--3   .../trait-inheritance-cross-trait-call-xc.rs--3--0--3   .../run-pass/trait-inheritance-cross-trait-call.rs--3--0--3   src/test/run-pass/trait-inheritance2.rs--3--0--3   .../trait-inheritance-multiple-inheritors.rs--3--0--3   .../run-pass/trait-inheritance-multiple-params.rs--3--0--3   .../trait-inheritance-overloading-simple.rs--3--0--3   src/test/run-pass/trait-inheritance-static.rs--3--0--3   src/test/run-pass/trait-inheritance-diamond.rs--3--0--3   .../trait-inheritance-missing-requirement.rs--3--0--3   src/test/run-pass/trait-inheritance-visibility.rs--3--0--3   src/test/run-pass/trait-inheritance-num5.rs--2--0--2   src/test/run-pass/trait-inheritance-num.rs--2--0--2   .../trait-inheritance-overloading-xc-exe.rs--1--1--2   .../auxiliary/trait_inheritance_auto_xc_2_aux.rs--2--0--2   src/test/run-pass/trait-inheritance-num0.rs--2--0--2   src/librustc/middle/trans/meth.rs--1--1--2   src/test/run-pass/trait-inheritance-num1.rs--2--0--2   .../trait_inheritance_cross_trait_call_xc_aux.rs--2--0--2   src/test/run-pass/trait-inheritance-num3.rs--2--0--2   src/librustc/middle/trans/common.rs--1--1--2   .../auxiliary/trait_inheritance_auto_xc_aux.rs--1--0--1,Adaptive,
79929,13b9a725ea7e7bc949d08591e5f991d91498b9ce,Update dead-code-closure-bang,This stdlib function went away  so update it to use current syntax.   ,1,2,   src/test/compile-fail/dead-code-closure-bang.rs--1--1--2,Perfective,
17293,d7a97070517f20fa6533ff29fdc2945908fc58d7,Add missing examples on core traits' method, ,1,43,   library/core/src/ops/arith.rs--43--0--43,Perfective,
108066,76077a9fb7f67a8af1b2eb16c2814ca703ad6c97,Add should_fail annotation for unit tests,"This allows test cases to assert that a function is expected to fail.  Tests annotated with ""should_fail"" will succeed only if the function  fails.   ",7,149,   src/lib/test.rs--23--14--37   src/test/stdtest/test.rs--22--5--27   src/test/stdtest/int.rs--24--0--24   src/test/stdtest/uint.rs--24--0--24   src/comp/front/test.rs--19--3--22   src/test/stdtest/char.rs--12--0--12   src/compiletest/compiletest.rs--2--1--3,Perfective,
19934,9df03ccf622b96f23bc185019d9be464c308f3fe,mir opt cross compile, ,4,24,   src/test/mir-opt/issue-73223/32bit/rustc.main.PreCodegen.diff--4--4--8   .../mir-opt/issue-73223/32bit/rustc.main.SimplifyArmIdentity.diff--4--4--8   .../bad_op_unsafe_oob_for_slices/32bit/rustc.main.ConstProp.diff--2--2--4   .../mir-opt/const_prop/slice_len/32bit/rustc.main.ConstProp.diff--2--2--4,Adaptive,
80067,e20a6dbeed095427e5d5487844f65e7eb1599651,Add methods for handing CStrings back and forth to C, ,1,30,   src/libstd/ffi/c_str.rs--29--1--30,Adaptive,
19952,fcf52c167f9280efe332557195998650a99bf437,improve DiscriminantKind handling,This now reuses `fn discriminant_ty` in project  removing  some code duplication. Doing so made me realize that  we previously had a disagreement about the discriminant  type of generators  with MIR using `u32` and codegen and  trait selection using `i32`.    We now always use `u32`.   ,5,29,   src/librustc_trait_selection/traits/project.rs--5--15--20   src/test/ui/generator/discriminant.rs--2--2--4   src/librustc_hir/lang_items.rs--3--0--3   src/libcore/marker.rs--1--0--1   src/librustc_span/symbol.rs--1--0--1,Perfective,
29625,80f5213cee9f98bf37b5e7244f2c71e94b5ed4dc,expand type info on __rust_start_panic, ,1,2,   src/libstd/panicking.rs--2--0--2,Perfective,
113527,db377bae3a1d9b980ea6eb6f1daf3a72bdeb7b25,Accumulate number tokens properly  handle newline  EQ and EQEQ in rustc lexer., ,1,45,   src/comp/fe/lexer.rs--28--17--45,Corrective,
9217,f2f2a005b4efd3e44ac6a02ea2b9660d28401679,Merge commit '6ed6f1e6a1a8f414ba7e6d9b8222e7e5a1686e42' into clippyup, ,297,502,   lintcheck-logs/lintcheck_crates_logs.txt--10--10--20   clippy_lints/src/loops.rs--0--9--9   clippy_lints/src/methods/mod.rs--1--6--7   clippy_lints/src/{types.rs=>types/mod.rs}--1--4--5   clippy_lints/src/transmute.rs--0--3--3   .cargo/config--1--1--2   .github/workflows/clippy.yml--1--1--2   .github/workflows/clippy_bors.yml--1--1--2   Cargo.toml--1--1--2   clippy_dev/Cargo.toml--1--1--2   clippy_dev/src/lib.rs--1--1--2   clippy_dev/src/main.rs--1--1--2   clippy_dummy/Cargo.toml--1--1--2   clippy_lints/Cargo.toml--1--1--2   clippy_lints/src/assign_ops.rs--1--1--2   clippy_lints/src/async_yields_async.rs--1--1--2   clippy_lints/src/attrs.rs--1--1--2   clippy_lints/src/await_holding_invalid.rs--1--1--2   clippy_lints/src/bytecount.rs--1--1--2   .../case_sensitive_file_extension_comparisons.rs--1--1--2   clippy_lints/src/casts/mod.rs--2--0--2   clippy_lints/src/comparison_chain.rs--1--1--2   clippy_lints/src/default_numeric_fallback.rs--1--1--2   clippy_lints/src/derive.rs--1--1--2   clippy_lints/src/doc.rs--1--1--2   clippy_lints/src/drop_forget_ref.rs--1--1--2   clippy_lints/src/eta_reduction.rs--1--1--2   clippy_lints/src/fallible_impl_from.rs--1--1--2   clippy_lints/src/float_literal.rs--1--1--2   clippy_lints/src/format.rs--1--1--2   clippy_lints/src/functions.rs--1--1--2   clippy_lints/src/implicit_return.rs--1--1--2   .../src/inconsistent_struct_constructor.rs--1--1--2   clippy_lints/src/indexing_slicing.rs--1--1--2   clippy_lints/src/infinite_iter.rs--1--1--2   clippy_lints/src/inherent_to_string.rs--1--1--2   clippy_lints/src/integer_division.rs--1--1--2   clippy_lints/src/len_zero.rs--1--1--2   clippy_lints/src/lib.rs--1--1--2   clippy_lints/src/lifetimes.rs--1--1--2   clippy_lints/src/loops/manual_memcpy.rs--2--0--2   clippy_lints/src/loops/mod.rs--2--0--2   clippy_lints/src/loops/needless_range_loop.rs--2--0--2   clippy_lints/src/manual_map.rs--1--1--2   clippy_lints/src/map_clone.rs--1--1--2   clippy_lints/src/matches.rs--1--1--2   clippy_lints/src/methods/bind_instead_of_map.rs--1--1--2   clippy_lints/src/methods/bytes_nth.rs--1--1--2   clippy_lints/src/methods/inefficient_to_string.rs--1--1--2   clippy_lints/src/methods/inspect_for_each.rs--1--1--2   .../src/methods/manual_saturating_arithmetic.rs--1--1--2   clippy_lints/src/methods/option_map_unwrap_or.rs--1--1--2   clippy_lints/src/methods/unnecessary_filter_map.rs--1--1--2   clippy_lints/src/methods/unnecessary_lazy_eval.rs--1--1--2   clippy_lints/src/misc.rs--1--1--2   clippy_lints/src/missing_inline.rs--1--1--2   clippy_lints/src/mutable_debug_assertion.rs--1--1--2   clippy_lints/src/needless_borrowed_ref.rs--1--1--2   clippy_lints/src/needless_continue.rs--1--1--2   clippy_lints/src/needless_question_mark.rs--1--1--2   clippy_lints/src/open_options.rs--1--1--2   clippy_lints/src/path_buf_push_overwrite.rs--1--1--2   clippy_lints/src/ptr.rs--1--1--2   clippy_lints/src/redundant_clone.rs--1--1--2   clippy_lints/src/suspicious_operation_groupings.rs--1--1--2   clippy_lints/src/to_string_in_display.rs--1--1--2   clippy_lints/src/transmuting_null.rs--1--1--2   clippy_lints/src/use_self.rs--1--1--2   clippy_lints/src/zero_div_zero.rs--1--1--2   clippy_lints/src/zero_sized_map_values.rs--1--1--2   clippy_utils/src/camel_case.rs--1--1--2   clippy_utils/src/eager_or_lazy.rs--1--1--2   clippy_utils/src/hir_utils.rs--1--1--2   clippy_utils/src/lib.rs--1--1--2   clippy_utils/src/ptr.rs--1--1--2   doc/basics.md--1--1--2   {clippy_dev=>lintcheck}/README.md--1--1--2   {clippy_dev=>lintcheck}/lintcheck_crates.toml--1--1--2   .../src/lintcheck.rs=>lintcheck/src/main.rs--1--1--2   mini-macro/Cargo.toml--1--1--2   rust-toolchain--1--1--2   rustc_tools_util/Cargo.toml--1--1--2   src/driver.rs--1--1--2   tests/dogfood.rs--1--1--2   .../upper_case_acronyms.rs--1--1--2   .../upper_case_acronyms.stderr--1--1--2   tests/ui-toml/vec_box_sized/test.stderr--1--1--2   tests/ui/assign_ops2.stderr--1--1--2   tests/ui/auxiliary/macro_rules.rs--1--1--2   tests/ui/await_holding_lock.stderr--1--1--2   tests/ui/await_holding_refcell_ref.stderr--1--1--2   tests/ui/blocks_in_if_conditions.fixed--1--1--2   tests/ui/blocks_in_if_conditions.rs--1--1--2   tests/ui/blocks_in_if_conditions.stderr--1--1--2   tests/ui/box_vec.stderr--1--1--2   tests/ui/checked_unwrap/simple_conditionals.rs--1--1--2   tests/ui/cmp_owned/without_suggestion.stderr--1--1--2   tests/ui/comparison_chain.stderr--1--1--2   tests/ui/crashes/ice-6256.stderr--1--1--2   tests/ui/dbg_macro.rs--1--1--2   tests/ui/dbg_macro.stderr--1--1--2   tests/ui/default_trait_access.fixed--1--1--2   tests/ui/default_trait_access.rs--1--1--2   tests/ui/dlist.stderr--1--1--2   tests/ui/doc_panics.rs--1--1--2   tests/ui/doc_panics.stderr--1--1--2   tests/ui/drop_forget_copy.stderr--1--1--2   tests/ui/drop_ref.stderr--1--1--2   tests/ui/eta.stderr--1--1--2   tests/ui/explicit_counter_loop.stderr--1--1--2   tests/ui/fallible_impl_from.stderr--1--1--2   tests/ui/filter_map_next.stderr--1--1--2   tests/ui/filter_map_next_fixable.stderr--1--1--2   tests/ui/float_cmp.rs--1--1--2   tests/ui/float_cmp.stderr--1--1--2   tests/ui/float_cmp_const.rs--1--1--2   tests/ui/float_cmp_const.stderr--1--1--2   tests/ui/floating_point_abs.fixed--1--1--2   tests/ui/floating_point_abs.rs--1--1--2   tests/ui/floating_point_abs.stderr--1--1--2   tests/ui/for_loops_over_fallibles.stderr--1--1--2   tests/ui/forget_ref.stderr--1--1--2   tests/ui/if_let_some_result.fixed--1--1--2   tests/ui/if_let_some_result.rs--1--1--2   tests/ui/if_let_some_result.stderr--1--1--2   tests/ui/implicit_return.fixed--1--1--2   tests/ui/implicit_return.rs--1--1--2   tests/ui/implicit_return.stderr--1--1--2   tests/ui/indexing_slicing_index.stderr--1--1--2   tests/ui/indexing_slicing_slice.stderr--1--1--2   tests/ui/integer_division.stderr--1--1--2   tests/ui/iterator_step_by_zero.stderr--1--1--2   tests/ui/len_without_is_empty.stderr--1--1--2   tests/ui/manual_map_option.fixed--1--1--2   tests/ui/manual_map_option.rs--1--1--2   tests/ui/manual_map_option.stderr--1--1--2   tests/ui/match_same_arms2.stderr--1--1--2   tests/ui/methods.stderr--1--1--2   tests/ui/methods_fixable.stderr--1--1--2   tests/ui/mismatched_target_os_unix.stderr--1--1--2   tests/ui/needless_collect.fixed--1--1--2   tests/ui/needless_collect.rs--1--1--2   tests/ui/needless_collect_indirect.stderr--1--1--2   tests/ui/needless_lifetimes.rs--1--1--2   tests/ui/needless_lifetimes.stderr--1--1--2   tests/ui/needless_question_mark.stderr--1--1--2   tests/ui/needless_range_loop.stderr--1--1--2   tests/ui/needless_range_loop2.stderr--1--1--2   tests/ui/or_fun_call.stderr--1--1--2   tests/ui/ptr_arg.stderr--1--1--2   tests/ui/redundant_clone.fixed--1--1--2   tests/ui/redundant_clone.rs--1--1--2   tests/ui/redundant_clone.stderr--1--1--2   tests/ui/suspicious_operation_groupings.stderr--1--1--2   tests/ui/toplevel_ref_arg_non_rustfix.stderr--1--1--2   tests/ui/transmuting_null.stderr--1--1--2   tests/ui/unit_arg.rs--1--1--2   tests/ui/unit_arg.stderr--1--1--2   tests/ui/unnecessary_lazy_eval.stderr--1--1--2   tests/ui/unnecessary_lazy_eval_unfixable.stderr--1--1--2   tests/ui/unnecessary_wraps.rs--1--1--2   tests/ui/unnecessary_wraps.stderr--1--1--2   tests/ui/upper_case_acronyms.rs--1--1--2   tests/ui/use_self.fixed--1--1--2   tests/ui/use_self.rs--1--1--2   tests/ui/use_self.stderr--1--1--2   tests/ui/used_underscore_binding.stderr--1--1--2   tests/ui/vec_box_sized.stderr--1--1--2   tests/ui/wild_in_or_pats.stderr--1--1--2   tests/ui/zero_div_zero.stderr--1--1--2   tests/versioncheck.rs--1--1--2   .gitignore--1--0--1   CHANGELOG.md--1--0--1   README.md--0--1--1   clippy_dev/src/fmt.rs--1--0--1   clippy_lints/src/casts/cast_lossless.rs--1--0--1   clippy_lints/src/casts/cast_possible_truncation.rs--1--0--1   clippy_lints/src/casts/cast_possible_wrap.rs--1--0--1   clippy_lints/src/casts/cast_precision_loss.rs--1--0--1   clippy_lints/src/casts/cast_ptr_alignment.rs--1--0--1   clippy_lints/src/casts/cast_ref_to_mut.rs--1--0--1   clippy_lints/src/casts/cast_sign_loss.rs--1--0--1   clippy_lints/src/casts/char_lit_as_u8.rs--1--0--1   clippy_lints/src/casts/fn_to_numeric_cast.rs--1--0--1   .../casts/fn_to_numeric_cast_with_truncation.rs--1--0--1   clippy_lints/src/casts/ptr_as_ptr.rs--1--0--1   clippy_lints/src/casts/unnecessary_cast.rs--1--0--1   clippy_lints/src/casts/utils.rs--1--0--1   clippy_lints/src/loops/empty_loop.rs--1--0--1   clippy_lints/src/loops/explicit_counter_loop.rs--1--0--1   clippy_lints/src/loops/explicit_into_iter_loop.rs--1--0--1   clippy_lints/src/loops/explicit_iter_loop.rs--1--0--1   clippy_lints/src/loops/for_kv_map.rs--1--0--1   clippy_lints/src/loops/for_loops_over_fallibles.rs--1--0--1   clippy_lints/src/loops/iter_next_loop.rs--1--0--1   clippy_lints/src/loops/manual_flatten.rs--1--0--1   clippy_lints/src/loops/mut_range_bound.rs--1--0--1   clippy_lints/src/loops/needless_collect.rs--1--0--1   clippy_lints/src/loops/never_loop.rs--1--0--1   clippy_lints/src/loops/same_item_push.rs--1--0--1   clippy_lints/src/loops/single_element_loop.rs--1--0--1   clippy_lints/src/loops/utils.rs--1--0--1   .../src/loops/while_immutable_condition.rs--1--0--1   clippy_lints/src/loops/while_let_loop.rs--1--0--1   clippy_lints/src/loops/while_let_on_iterator.rs--1--0--1   clippy_lints/src/methods/clone_on_copy.rs--1--0--1   clippy_lints/src/methods/clone_on_ref_ptr.rs--1--0--1   clippy_lints/src/methods/expect_fun_call.rs--1--0--1   clippy_lints/src/methods/expect_used.rs--1--0--1   clippy_lints/src/methods/filetype_is_file.rs--1--0--1   clippy_lints/src/methods/filter_flat_map.rs--1--0--1   clippy_lints/src/methods/filter_map.rs--1--0--1   clippy_lints/src/methods/filter_map_flat_map.rs--1--0--1   clippy_lints/src/methods/filter_map_map.rs--1--0--1   clippy_lints/src/methods/filter_map_next.rs--1--0--1   clippy_lints/src/methods/filter_next.rs--1--0--1   clippy_lints/src/methods/flat_map_identity.rs--1--0--1   .../src/methods/from_iter_instead_of_collect.rs--1--0--1   clippy_lints/src/methods/get_unwrap.rs--1--0--1   clippy_lints/src/methods/implicit_clone.rs--1--0--1   clippy_lints/src/methods/into_iter_on_ref.rs--1--0--1   clippy_lints/src/methods/iter_cloned_collect.rs--1--0--1   clippy_lints/src/methods/iter_count.rs--1--0--1   clippy_lints/src/methods/iter_next_slice.rs--1--0--1   clippy_lints/src/methods/iter_nth.rs--1--0--1   clippy_lints/src/methods/iter_nth_zero.rs--1--0--1   clippy_lints/src/methods/iter_skip_next.rs--1--0--1   clippy_lints/src/methods/iterator_step_by_zero.rs--1--0--1   .../src/methods/map_collect_result_unit.rs--1--0--1   clippy_lints/src/methods/map_flatten.rs--1--0--1   clippy_lints/src/methods/map_unwrap_or.rs--1--0--1   clippy_lints/src/methods/ok_expect.rs--1--0--1   clippy_lints/src/methods/option_as_ref_deref.rs--1--0--1   clippy_lints/src/methods/option_map_or_none.rs--1--0--1   clippy_lints/src/methods/or_fun_call.rs--1--0--1   clippy_lints/src/methods/search_is_some.rs--1--0--1   .../src/methods/single_char_insert_string.rs--1--0--1   clippy_lints/src/methods/single_char_pattern.rs--1--0--1   .../src/methods/single_char_push_string.rs--1--0--1   clippy_lints/src/methods/skip_while_next.rs--1--0--1   clippy_lints/src/methods/string_extend_chars.rs--1--0--1   clippy_lints/src/methods/suspicious_map.rs--1--0--1   clippy_lints/src/methods/uninit_assumed_init.rs--1--0--1   clippy_lints/src/methods/unnecessary_fold.rs--1--0--1   clippy_lints/src/methods/unwrap_used.rs--1--0--1   clippy_lints/src/methods/useless_asref.rs--1--0--1   clippy_lints/src/methods/wrong_self_convention.rs--1--0--1   clippy_lints/src/methods/zst_offset.rs--1--0--1   .../src/transmute/crosspointer_transmute.rs--1--0--1   clippy_lints/src/transmute/mod.rs--1--0--1   .../src/transmute/transmute_float_to_int.rs--1--0--1   .../src/transmute/transmute_int_to_bool.rs--1--0--1   .../src/transmute/transmute_int_to_char.rs--1--0--1   .../src/transmute/transmute_int_to_float.rs--1--0--1   clippy_lints/src/transmute/transmute_ptr_to_ptr.rs--1--0--1   clippy_lints/src/transmute/transmute_ptr_to_ref.rs--1--0--1   clippy_lints/src/transmute/transmute_ref_to_ref.rs--1--0--1   .../transmutes_expressible_as_ptr_casts.rs--1--0--1   .../src/transmute/unsound_collection_transmute.rs--1--0--1   clippy_lints/src/transmute/useless_transmute.rs--1--0--1   clippy_lints/src/transmute/utils.rs--1--0--1   clippy_lints/src/transmute/wrong_transmute.rs--1--0--1   clippy_lints/src/types/borrowed_box.rs--1--0--1   clippy_lints/src/types/box_vec.rs--1--0--1   clippy_lints/src/types/linked_list.rs--1--0--1   clippy_lints/src/types/option_option.rs--1--0--1   clippy_lints/src/types/rc_buffer.rs--1--0--1   clippy_lints/src/types/redundant_allocation.rs--1--0--1   clippy_lints/src/types/utils.rs--1--0--1   clippy_lints/src/types/vec_box.rs--1--0--1   clippy_utils/Cargo.toml--1--0--1   clippy_utils/src/paths.rs--0--1--1   doc/adding_lints.md--1--0--1   lintcheck/Cargo.toml--1--0--1   lintcheck/test_sources.toml--1--0--1   rustfmt.toml--1--0--1   src/main.rs--0--1--1   tests/lint_message_convention.rs--1--0--1   tests/ui/auxiliary/option_helpers.rs--1--0--1   tests/ui/cmp_owned/without_suggestion.rs--1--0--1   tests/ui/crashes/ice-6256.rs--1--0--1   tests/ui/crashes/ice-6792.rs--1--0--1   tests/ui/crashes/ice-6793.rs--1--0--1   tests/ui/crashes/ice-6840.rs--1--0--1   tests/ui/eta.fixed--1--0--1   tests/ui/eta.rs--1--0--1   tests/ui/implicit_clone.rs--1--0--1   tests/ui/implicit_clone.stderr--1--0--1   tests/ui/iter_count.fixed--1--0--1   tests/ui/iter_count.rs--1--0--1   tests/ui/iter_count.stderr--1--0--1   tests/ui/len_without_is_empty.rs--1--0--1   tests/ui/match_same_arms2.rs--1--0--1   tests/ui/missing_inline_executable.rs--1--0--1   tests/ui/missing_inline_proc_macro.rs--1--0--1   tests/ui/or_fun_call.fixed--1--0--1   tests/ui/or_fun_call.rs--1--0--1,Adaptive,
83634,01172eedfab32b24e38aa86ba0cba24453e842fb,Add tests for MultiItemDecorator, ,2,35,   src/test/auxiliary/macro_crate_test.rs--21--1--22   .../macro-crate-multi-decorator.rs--13--0--13,Perfective,
91867,988e4f0a1c2802921375271bdc19f03650c024d2,Uppercase numeric constants,The following are renamed:    * `min_value` => `MIN`  * `max_value` => `MAX`  * `bits` => `BITS`  * `bytes` => `BYTES`    Fixes #10010.   ,36,92,   src/libstd/num/mod.rs--10--11--21   src/libextra/bitv.rs--1--2--3   src/libextra/getopts.rs--1--1--2   src/libextra/num/bigint.rs--1--1--2   src/libgreen/context.rs--1--1--2   src/librustc/middle/borrowck/move_data.rs--1--1--2   src/librustc/middle/dataflow.rs--1--1--2   src/librustc/middle/graph.rs--1--1--2   src/librustc/middle/lint.rs--1--1--2   src/librustc/middle/liveness.rs--1--1--2   src/librustc/middle/resolve.rs--1--1--2   .../middle/typeck/infer/region_inference/mod.rs--1--1--2   src/librustdoc/passes.rs--1--1--2   src/libstd/comm/mod.rs--1--1--2   src/libstd/comm/select.rs--1--1--2   src/libstd/io/extensions.rs--1--1--2   src/libstd/io/mod.rs--1--1--2   src/libstd/iter.rs--1--1--2   src/libstd/num/int.rs--1--1--2   src/libstd/num/int_macros.rs--1--1--2   src/libextra/ebml.rs--1--1--2   src/libstd/num/uint.rs--1--1--2   src/libstd/num/uint_macros.rs--1--1--2   src/libstd/option.rs--1--1--2   src/libstd/rand/rand_impls.rs--1--1--2   src/libstd/result.rs--1--1--2   src/libstd/rt/thread.rs--1--1--2   src/libstd/trie.rs--1--1--2   src/libstd/unstable/mutex.rs--1--1--2   src/libstd/vec.rs--1--1--2   src/libsyntax/ast_util.rs--1--1--2   src/libsyntax/parse/comments.rs--1--1--2   src/test/run-fail/bounds-check-no-overflow.rs--1--1--2   .../run-fail/bug-2470-bounds-check-overflow-2.rs--1--1--2   .../run-fail/bug-2470-bounds-check-overflow-3.rs--1--1--2   src/test/run-pass/deriving-primitive.rs--1--1--2,Perfective,
14824,a268264073d5341869348a5ac9c98905c2d658fa,Update RELEASES.md,Co-authored-by: Vadim Petrochenkov <vadim.petrochenkov@gmail.com> ,1,2,   RELEASES.md--1--1--2,Perfective,
42607,d395d45ca753099c2ff952604169a1602eae898a,test: panic at map_unit_fn.rs:202 for map() without args, ,1,20,   tests/ui/map_unit_fn.rs--20--0--20,Perfective,
69749,2eff282aef12ebbe848ed6841a0a7a39964b27b6,Add some tests for ! type, ,3,50,   src/test/run-fail/return-never-coerce.rs--22--0--22   src/test/compile-fail/return-from-diverging.rs--14--0--14   .../compile-fail/return-unit-from-diverging.rs--14--0--14,Perfective,
4884,e32eceefe1ca3efeef123309eaa154d27d31788b,Remove unnecessary CrateNum from Cache.externs,It can be found from ExternalCrate.   ,3,25,   src/librustdoc/clean/utils.rs--5--5--10   src/librustdoc/formats/cache.rs--4--5--9   src/librustdoc/clean/types.rs--3--3--6,Perfective,
99937,1b1700f44b88225bc3557e1ca497644b9852e268,Add core::private::run_in_bare_thread,This begins executing Rust code in a fresh context with no runtime environment   ,3,67,   src/libcore/private.rs--34--0--34   src/rt/rust_builtin.cpp--31--0--31   src/rt/rustrt.def.in--2--0--2,Adaptive,
109917,c141718952a97fa89433d5ff7c5ee17eeebd0081,Replace walk with visit in the typechecker, ,1,47,   src/comp/middle/typeck.rs--23--24--47,Perfective,
99115,ae86c03af261fd116d53f98766fb3700435b0bc1,librustc: change check_item_non_camel_case_types to not copy, ,1,17,   src/librustc/middle/lint.rs--7--10--17,Perfective,
29291,cf1ffb0355e608453acc9803d6f317c16011d517,rustc_lint: Remove lint `plugin_as_library`, ,7,49,   src/librustc_lint/builtin.rs--1--21--22   src/test/ui-fulldeps/plugin-as-extern-crate.stderr--0--8--8   src/doc/rustc/src/lints/listing/warn-by-default.md--0--7--7   .../ui-fulldeps/macro-crate-multi-decorator.rs--1--3--4   src/test/ui-fulldeps/plugin-as-extern-crate.rs--2--2--4   .../unstable-book/src/language-features/plugin.md--1--1--2   src/librustc_lint/lib.rs--1--1--2,Perfective,
6186,2a6dd25265807fa63d65d3ead3b0d9fcc7810f36,"Revert ""shrinking the deprecated method span""", ,7,58,   src/test/ui/lint/lint-stability-deprecated.stderr--10--11--21   src/test/ui/deprecation/deprecation-lint.stderr--10--10--20   src/test/ui/deprecation/suggestion.fixed--1--3--4   src/test/ui/deprecation/suggestion.rs--1--3--4   src/test/ui/deprecation/suggestion.stderr--2--2--4   .../generics-default-stability.stderr--1--2--3   compiler/rustc_passes/src/stability.rs--1--1--2,Corrective,
68871,68e8624d05bc9b291fc3d945aaf5c1cb24bf015f,Specify when type parameter shadows primitive type,"When a type parameter shadows a primitive type  the error message  was non obvious. For example  given the file `file.rs`:    ```rust  trait Parser<T> {      fn parse(text: &str) -> Option<T>;  }    impl<bool> Parser<bool> for bool {      fn parse(text: &str) -> Option<bool> {          Some(true)      }  }    fn main() {      println!(""{}""  bool::parse(""ok"").unwrap_or(false));  }  ```    The output was:    ```bash  % rustc file.rs  error[E0308]: mismatched types   --> file.rs:7:14    |  7 |         Some(true)    |              ^^^^ expected type parameter  found bool    |    = note: expected type `bool`    = note:    found type `bool`    error: aborting due to previous error  ```    We now show extra information about the type:    ```bash  % rustc file.rs  error[E0308]: mismatched types   --> file.rs:7:14    |  7 |         Some(true)    |              ^^^^ expected type parameter  found bool    |    = note: expected type `bool` (type parameter)    = note:    found type `bool` (bool)    error: aborting due to previous error  ```    Fixes #35030   ",5,68,   src/test/ui/mismatched_types/issue-35030.rs--25--0--25   src/librustc_errors/lib.rs--14--3--17   src/librustc/infer/error_reporting.rs--12--1--13   src/test/ui/mismatched_types/issue-35030.stderr--11--0--11   src/librustc/ty/error.rs--1--1--2,Adaptive,
4146,f2a4d7fdbe4fd5b91632c30cf67ea7f3249a3030,bless `expect-region-supply-region-2` test under polonius,"Polonius also emits the error that NLL doesn't get a chance to: see comment  ""Borrowck doesn't get a chance to run  but if it did it should error here.""   ",1,22,   .../expect-region-supply-region-2.polonius.stderr--22--0--22,Perfective,
43157,ad7c9a388b203e8db6da4b3053aa1ca4dbecff2b,Bump cranelift from `077f0e4` to `5fc828a`,Bumps [cranelift](https://github.com/CraneStation/cranelift) from `077f0e4` to `5fc828a`.  - [Release notes](https://github.com/CraneStation/cranelift/releases)  - [Commits](https://github.com/CraneStation/cranelift/compare/077f0e4794ea115341fce052713a6fc61ed7a474...5fc828ab9b513006f9322ba03645eb5ac4da97ed)    Signed-off-by: dependabot[bot] <support@dependabot.com> ,1,20,   Cargo.lock--10--10--20,Perfective,
68351,da7b1c984c74db17198bd5434d5da78587a9a91e,Separate Def::StructCtor/Def::VariantCtor from Def::Struct/Def::Variant, ,20,112,   src/librustc/hir/def.rs--16--6--22   src/librustc_resolve/build_reduced_graph.rs--10--6--16   src/librustc_mir/hair/cx/expr.rs--4--6--10   src/librustc/ty/mod.rs--6--3--9   src/librustc_resolve/lib.rs--4--5--9   src/librustc/middle/mem_categorization.rs--4--2--6   src/librustc_const_eval/check_match.rs--3--3--6   src/librustc_const_eval/eval.rs--2--3--5   src/librustc_passes/consts.rs--2--2--4   src/librustc_save_analysis/dump_visitor.rs--3--1--4   src/librustc/middle/expr_use_visitor.rs--2--1--3   src/librustc_typeck/check/mod.rs--2--1--3   src/librustc/hir/pat_util.rs--1--1--2   src/librustc/middle/dead.rs--1--1--2   src/librustc_mir/hair/cx/pattern.rs--1--1--2   src/librustc_passes/static_recursion.rs--1--1--2   src/librustc_privacy/lib.rs--1--1--2   src/librustc_save_analysis/lib.rs--1--1--2   src/librustc_typeck/check/_match.rs--1--1--2   .../calculate_svh/svh_visitor.rs--1--0--1,Perfective,
54792,e99f8fcbc5ea4cf839575bc7ca56151147346a54,Update trait-associated-const test to new format, ,1,24,   src/test/ui/nll/trait-associated-constant.stderr--7--17--24,Perfective,
12988,028754a2f7f62ed1e4df889fadfa74eb2d007109,implement better availability probing for copy_file_range,previously any attempt to copy to an immutable file (EPERM) would disable  copy_file_range support for the whole process.   ,1,33,   library/std/src/sys/unix/kernel_copy.rs--19--14--33,Adaptive,
66518,99529825e8765a1241c569495bca83218fc5e498,Add missing examples in some thread functions, ,1,48,   src/libstd/thread/mod.rs--40--8--48,Perfective,
29199,5c7bd52a7824fd1177e0b5c65ad063a23657d8b4,Lint for redundant branches in or-patterns, ,4,57,   src/librustc_mir/hair/pattern/_match.rs--16--6--22   src/test/ui/or-patterns/exhaustiveness-pass.stderr--19--1--20   src/test/ui/or-patterns/exhaustiveness-pass.rs--5--3--8   src/librustc_mir/hair/pattern/check_match.rs--5--2--7,Adaptive,
33451,dac2509bacd9e4c3f7cc27a4aeff38c5b0388840,Account for trait alias when looking for defid, ,2,9,   clippy_lints/src/methods/mod.rs--4--1--5   clippy_lints/src/utils/mod.rs--3--1--4,Adaptive,
21698,6315d0c99eead181e3725623c6a9d01950620640,Add test for #71042, ,2,17,   .../issue-71042-opaquely-typed-constant-used-in-pattern.rs--9--0--9   .../issue-71042-opaquely-typed-constant-used-in-pattern.stderr--8--0--8,Perfective,
104662,fa6c68a025337072fd61fe3d5f71e7f079ce0652,Set no-unwind attribute on all upcalls other than fail., ,2,11,   src/rustc/back/upcall.rs--5--1--6   src/rustc/middle/trans/base.rs--5--0--5,Adaptive,
101016,1679960889498d389af1869429b30a7a4360a929,Change a use of map::get to map::find, ,1,4,   src/rustc/middle/region.rs--2--2--4,Perfective,
106647,35cbcbe0c2b4a6c1a1e068dcb85d02e3c816c6f5,Fix `cargo install *` fails at assertion., ,1,2,   src/cargo/cargo.rs--1--1--2,Corrective,
36821,41dd21a9bc5a8e69b5d2fd5d158c8f87a97d3e58,Add a regression test for #53457, ,1,15,   src/test/ui/impl-trait/issue-53457.rs--15--0--15,Perfective,
104610,79ed1f2df4153a0c868d2ccf53d19dc6d1f08214,New lint pass for picking out uses of old-style vecs and str., ,1,48,   src/rustc/middle/lint.rs--46--2--48,Adaptive,
14297,a54f04373382b085837f5f835569d238bf6049e1,Add documentation for automatic_links lint, ,2,38,   src/doc/rustdoc/src/lints.md--33--0--33   compiler/rustc_lint_defs/src/builtin.rs--2--3--5,Perfective,
112257,1c8a2598fbb82a4719c8a7fde602ba005e6a48be,rustc: XFAIL use.rs too. Should put out burning tinderbox., ,1,1,   Makefile.in--1--0--1,Perfective,
43401,a16e85707d3c12272b0461923e79c5f04cd81a39,Rustup to rustc 1.32.0-nightly (3e90a12a8 2018-11-29), ,2,20,   src/constant.rs--16--2--18   src/lib.rs--1--1--2,Adaptive,
23877,0ca2a5e52cb428a8381988e3551649ae07d4eb61,Add test for #59023, ,1,17,   .../ui/traits/impl_trait_as_trait_return_position.rs--17--0--17,Perfective,
2294,160b93903c15ee46e09e04a156563ded1b152116,Expose the std_detect env_override feature, ,2,2,   library/std/Cargo.toml--1--0--1   library/test/Cargo.toml--1--0--1,Adaptive,
27232,766f6c5d0ad5c71f42ab3a305572bf1e7b5edafa,Actually pass target LLVM args to LLVM, ,1,5,   src/librustc_codegen_llvm/llvm_util.rs--3--2--5,Corrective,
45449,e4434be6b7caa1261fa1500d321c20a59f9953b1,remove a now outdated comment, ,1,3,   src/liballoc/collections/btree/node.rs--0--3--3,Perfective,
64957,e2c5a6e64edf48a30fd7d593e90b1a97fe6a5aa7,don't allocate for primvals, ,1,8,   src/lvalue.rs--6--2--8,Corrective,
92648,2612d76d2276d15e30c022426d2ae5222a080b83,librustc: De-`@mut` `intrinsic_defs`, ,2,13,   src/librustc/middle/ty.rs--6--4--10   src/librustc/middle/typeck/collect.rs--2--1--3,Perfective,
24174,b3d744c9f51b6bb42c7cebeb8f7fcefac8778d1e,add `unused_braces`  lint anon_const, ,2,45,   src/librustc_lint/unused.rs--32--12--44   src/librustc_lint/lib.rs--1--0--1,Adaptive,
103356,c4af6e92fbae171c56a4e68666025725555fc9d8,rustc: Switch to the new resolution pass, ,41,83,   src/rustc/middle/resolve3.rs--15--6--21   src/test/compile-fail/class-implements-int.rs--1--1--2   src/libstd/net_ip.rs--1--1--2   src/libsyntax/parse.rs--1--1--2   src/test/compile-fail/ambig_impl_2_exe.rs--1--1--2   src/libsyntax/parse/parser.rs--1--1--2   src/rustc/driver/driver.rs--1--1--2   .../compile-fail/cap-clause-unresolved-copy.rs--1--1--2   .../compile-fail/cap-clause-unresolved-move.rs--1--1--2   .../compile-fail/class-implements-bad-iface.rs--1--1--2   src/test/compile-fail/export-import.rs--1--1--2   src/test/compile-fail/iface-test.rs--1--1--2   src/test/compile-fail/import-from-missing.rs--1--1--2   src/test/compile-fail/import-glob-circular.rs--1--1--2   src/test/compile-fail/import-loop-2.rs--1--1--2   src/test/compile-fail/import-loop.rs--1--1--2   src/test/compile-fail/import.rs--1--1--2   src/test/compile-fail/import2.rs--1--1--2   src/test/compile-fail/import3.rs--1--1--2   src/test/compile-fail/import4.rs--1--1--2   src/test/compile-fail/issue-1697.rs--1--1--2   src/test/compile-fail/not-a-pred.rs--1--1--2   src/test/run-pass/issue2170exe.rs--1--1--2   src/test/compile-fail/import-from-dup.rs--0--1--1   src/rustc/metadata/loader.rs--1--0--1   src/rustc/middle/ty.rs--1--0--1   src/test/compile-fail/import-glob-multiple.rs--0--1--1   src/rustc/middle/typeck.rs--1--0--1   src/rustdoc/config.rs--1--0--1   src/test/compile-fail/bad-tag-export-2.rs--0--1--1   src/test/compile-fail/bad-tag-export-3.rs--0--1--1   src/test/compile-fail/bad-tag-export-4.rs--0--1--1   src/test/compile-fail/bad-tag-export.rs--0--1--1   src/test/compile-fail/import5.rs--0--1--1   .../compile-fail/cross-crate-glob-collision.rs--0--1--1   src/libcore/task.rs--1--0--1   src/test/compile-fail/tag-exports-2.rs--0--1--1   src/test/compile-fail/tag-exports-3.rs--0--1--1   src/test/compile-fail/tag-exports.rs--0--1--1   src/libsyntax/parse/comments.rs--1--0--1   src/test/run-pass/tag-exports.rs--1--0--1,Adaptive,
6587,6d737772246d9912ba7bbf9b906f467da02ef70e,Fix `same_item_push.rs`, ,1,2,   clippy_lints/src/loops/same_item_push.rs--1--1--2,Perfective,
29944,8444e1628cd5e2d7229b3176cb5b248271defe22,move DIAGNOSTICS usage to rustc_driver, ,13,91,   src/librustc_interface/interface.rs--13--14--27   src/librustc_driver/lib.rs--9--6--15   src/librustc_interface/util.rs--1--12--13   src/librustc_error_codes/lib.rs--3--8--11   src/librustc/session/mod.rs--4--5--9   src/librustc_error_codes/error_codes.rs--1--2--3   src/librustdoc/lib.rs--2--1--3   src/test/run-make-fulldeps/issue-19371/foo.rs--2--1--3   Cargo.lock--1--1--2   src/librustdoc/core.rs--1--1--2   src/librustc_driver/Cargo.toml--1--0--1   src/librustc_interface/Cargo.toml--0--1--1   src/librustdoc/test.rs--1--0--1,Perfective,
29547,1eeed17c9ebc5a5bcae5613cdef77a0fa17828aa,Tweak duplicate fmt arg error, ,2,13,   src/test/ui/if/ifmt-bad-arg.stderr--3--7--10   src/libsyntax_ext/format.rs--2--1--3,Corrective,
80376,483a546e74a55ddae9769475e794ee55d62cfc17,added messages to test error comments, ,1,10,   tests/compile-fail/len_zero.rs--5--5--10,Perfective,
81196,7f7888754745696467d6ba8f93ce2b9e50c10b3b,Add previously omitted associated const tests., ,6,90,   src/test/compile-fail/impl-wrong-item-for-trait.rs--22--0--22   .../run-pass/associated-const-resolution-order.rs--18--0--18   .../associated-const-use-impl-of-same-trait.rs--18--0--18   .../run-pass/associated-const-marks-live-code.rs--12--0--12   .../associated-const-upper-case-lint.rs--11--0--11   ...thod.rs=>associated-const-impl-wrong-type.rs}--5--4--9,Perfective,
19678,e53fea7e061a5f669e7729093f0613d047f7dfc3,Use intra-doc links on HashMap, ,2,39,   src/libstd/collections/hash/map.rs--9--29--38   src/tools/linkchecker/main.rs--0--1--1,Perfective,
90789,e7c4fb692bc0daf519da1d84132cda151d0fb4b1,rand: Fix a bug acquiring a context on windows,The details can be found in the comment I wrote on the block in question  but  the gist of it is that our usage of the TIB for a stack limit was causing  CryptAcquireContext to fail  so we temporarily get around it by setting the  stack limit to 0.   ,1,40,   src/librand/os.rs--39--1--40,Corrective,
27795,23b0c470244e612206486bb51f687ef4f6b6e117,Ensure we don't accidentally turn non-zsts into zsts, ,1,1,   src/librustc_mir/const_eval/eval_queries.rs--1--0--1,Perfective,
48443,7a5e8bdc020e2c169cd65b01e5befb66dc5a41c8,[RISCV] Enable CI., ,4,6,   config.toml.example--1--1--2   src/bootstrap/config.rs--1--1--2   src/ci/docker/dist-various-1/Dockerfile--1--0--1   src/tools/build-manifest/src/main.rs--1--0--1,Adaptive,
72859,c86e7c49500d7abc03f1377997b445896c74f020,rustbuild: Add helper to abstract hard_link/copy,Also helps provide context if it fails.   ,2,41,   src/bootstrap/build/compile.rs--15--15--30   src/bootstrap/build/util.rs--10--1--11,Adaptive,
96003,0e81072ded014450cb471dac66b23bd05955ca0c,Move stats into an @mut stats, ,1,4,   src/librustc/middle/trans/context.rs--2--2--4,Perfective,
78213,b247402666d1c149005de1d341f3fa49fb2943a4,nits from pnkfelix, ,3,40,   .../transitive_relation.rs--15--7--22   src/librustc_data_structures/bitvec.rs--9--8--17   src/librustc/middle/free_region.rs--1--0--1,Perfective,
25974,0b1e08cb557768f168266c7bbcdcb93fcf372a66,parse: recover `mut (x @ y)` as `(mut x @ mut y)`., ,3,61,   src/test/ui/parser/mut-patterns.stderr--19--11--30   src/librustc_parse/parser/pat.rs--13--16--29   src/test/ui/parser/mut-patterns.rs--2--0--2,Corrective,
87398,713cf373c118517ec2638c4af1b73deceae4d4e0,Take core as a dependency on librlibc. This is needed so that it can see the lang-items for Sized etc. @acrichto and @thestinger had no objections., ,2,5,   src/librlibc/lib.rs--2--1--3   mk/crates.mk--1--1--2,Perfective,
43648,53ed3b79562fdbcbb1ca073cb48a6fea1e23d51a,make memory allocation hook infallible, ,2,8,   src/librustc/mir/interpret/allocation.rs--3--3--6   src/librustc_mir/interpret/memory.rs--1--1--2,Perfective,
92668,70ff5f7033b53a55b6107fbf6a18b05e59e8e391,mk: Fix doc tests for multiple targets,It only really makes sense to run tests for the build target anyway because it's  not guaranteed that you can execute other targets.    This is blocking the next snapshot   ,1,26,   mk/tests.mk--16--10--26,Corrective,
89789,d9eca56c065d27498a0e5fbd20ad114063c96281,Use Get/FreeEnvironmentStringsW instead of Get/FreeEnvironmentStringsA,Changed libstd to use Get/FreeEnvironmentStringsW instead of  Get/FreeEnvironmentStringsA to support Unicode environment variables.   ,2,46,   src/libstd/os.rs--31--9--40   src/liblibc/lib.rs--3--3--6,Perfective,
113823,44d719d5fb246bfdfc9a83af2a43d79428319b47,Make the call args referent type always have a closure word (non-optional  null in case of no closure) in preparation for shifting it inward from its current position at end-of-call-tup., ,1,9,   src/boot/me/semant.ml--4--5--9,Perfective,
109171,2fab948e01477a9862142993be486bca36aa8152,stdlib: Added a treemap traversal function., ,2,40,   src/lib/treemap.rs--23--0--23   src/test/stdtest/treemap.rs--17--0--17,Adaptive,
74440,a60ec05fdc1bf51c6d96fa60876be2c8e2aa1b1e,Add LLVM FunctionPass regression test using run-make.,Part of https://github.com/rust-lang/rust/issues/31185.    Similar to https://github.com/rust-lang/rust/pull/31391.   ,6,40,   .../run-make/llvm-pass/llvm-function-pass.so.cc--22--0--22   src/test/run-make/llvm-pass/Makefile--7--0--7   src/test/run-make/llvm-module-pass/Makefile--0--6--6   .../{llvm-module-pass=>llvm-pass}/plugin.rs--2--1--3   .../llvm-module-pass.so.cc}--1--1--2   .../{llvm-module-pass=>llvm-pass}/main.rs--0--0--0,Perfective,
66695,39e6ae2dccdea270ef70aa7eecdd87252a5c36f2,Clean up `get_traits_containing_item`., ,1,45,   src/librustc_resolve/lib.rs--21--24--45,Perfective,
74843,5ac67adb409f374aa37a40860649f8c770ecdee8,gitignore .rs.bk files,These clutter up `git status` output when working on rustfmt.   ,1,3,   .gitignore--2--1--3,Perfective,
72234,1bcf41e53f1361a7b09503b6c3a081a3b6907cb6,rustdoc: HTML-escape Rust code (from constants),Especially in cases like the one in the test file  this can blow  up the docs big time if string constants in the code contain HTML.    But also other constants can contain special chars (e.g. `&` as an  operator in constant expressions).   ,3,22,   src/test/rustdoc/escape-rust-expr.rs--15--0--15   src/librustdoc/html/render.rs--2--2--4   src/librustdoc/html/format.rs--2--1--3,Perfective,
9267,c8b2c86b2eaa2d98add7c13e6c9c5df11ca34549,Add regression test for https://github.com/rust-lang/rust/issues/79825, ,2,24,   src/test/ui/proc-macro/auxiliary/issue-79825.rs--14--0--14   src/test/ui/proc-macro/issue-79825.rs--10--0--10,Perfective,
32427,a744fd04321f6307303a22ecc8880cbc7b6bcbda,bug-out asyncness query on non-local funtions, ,2,24,   src/librustc/ty/mod.rs--11--10--21   src/librustc_metadata/decoder.rs--2--1--3,Perfective,
62610,ee982d4355a10790993ab65f80730ba75395e140,fix translation of MSVC funclets that loop to their own start, ,5,53,   src/librustc_trans/mir/block.rs--13--16--29   src/librustc_trans/mir/mod.rs--9--6--15   src/librustc_data_structures/indexed_vec.rs--3--0--3   src/librustc_trans/common.rs--0--3--3   src/librustc_trans/mir/analyze.rs--3--0--3,Corrective,
26930,79d8c9beab960e81c73788208da4bbd39137d85b,Correct ICE caused by macros generating invalid spans., ,1,9,   src/librustc_errors/emitter.rs--8--1--9,Corrective,
78838,43b2c4781e5d6e25dedfc480218ceda92d9dffad,std: Fix sub-second Condvar::wait_timeout_ms,"The API we're calling requires us to pass an absolute point in time as an  argument (`pthread_cond_timedwait`) so we call `gettimeofday` ahead of time to  then add the specified duration to. Unfortuantely the current ""add the duration""  logic forgot to take into account the current time's sub-second precision (e.g.  the `tv_usec` field was ignored)  causing sub-second duration waits to return  spuriously.   ",1,27,   src/libstd/sys/unix/condvar.rs--14--13--27,Corrective,
38612,87e4b43d518c754cc8c522da04ac3a6ae30eb7aa,Deny `internal` in stage0, ,27,56,   src/bootstrap/bin/rustc.rs--1--3--4   src/libarena/lib.rs--1--1--2   src/libfmt_macros/lib.rs--1--1--2   src/librustc/lib.rs--1--1--2   src/librustc/ty/mod.rs--1--1--2   src/librustc_allocator/lib.rs--1--1--2   src/librustc_borrowck/lib.rs--1--1--2   src/librustc_codegen_ssa/lib.rs--1--1--2   src/librustc_codegen_utils/lib.rs--1--1--2   src/librustc_driver/lib.rs--1--1--2   src/librustc_errors/lib.rs--1--1--2   src/librustc_incremental/lib.rs--1--1--2   src/librustc_interface/lib.rs--1--1--2   src/librustc_lint/lib.rs--1--1--2   src/librustc_metadata/lib.rs--1--1--2   src/librustc_mir/lib.rs--1--1--2   src/librustc_passes/lib.rs--1--1--2   src/librustc_privacy/lib.rs--1--1--2   src/librustc_resolve/lib.rs--1--1--2   src/librustc_save_analysis/lib.rs--1--1--2   src/librustc_target/lib.rs--1--1--2   src/librustc_traits/lib.rs--1--1--2   src/librustc_typeck/lib.rs--1--1--2   src/librustdoc/lib.rs--1--1--2   src/libsyntax/lib.rs--1--1--2   src/libsyntax_ext/lib.rs--1--1--2   src/libsyntax_pos/lib.rs--1--1--2,Adaptive,
52238,144c0d5519dff9eca7bacd6191856ef57dbb7e0f,Fix a copy-and-paste bug in nearest_common_ancestor.,This code path is rarely hit  which likely explains why this bug hasn't  been detected before now. (I only noticed it via code inspection.)   ,1,2,   src/librustc/middle/region.rs--1--1--2,Corrective,
74838,46242ed10e2430add4ecdaa44ed195cddbee3197,Add support for the config-path option,Adds a config-path option for rustfmt. If this argument is provided   it recursively searches the config-path for a rustfmt.toml file.  If file is not found  reverts to searching the file input path for the  config file or uses default options.   ,1,54,   src/bin/rustfmt.rs--44--10--54,Adaptive,
65325,6d97d02c52a3d1f49b5c8617c1999bf2542ee98e,autogenerate markdown for rustc test suite result, ,1,51,   tests/compiletest.rs--46--5--51,Adaptive,
42366,f62f540b4e81a4e67a39f199948406684a343f4a,Point at function name span, ,17,56,   src/librustc_typeck/check/mod.rs--12--9--21   .../liveness/liveness-return-last-stmt-semi.stderr--2--2--4   src/test/ui/liveness/liveness-issue-2163.stderr--1--2--3   .../consider-removing-last-semi.stderr--1--1--2   src/test/ui/block-result/issue-11714.stderr--1--1--2   src/test/ui/block-result/issue-13428.stderr--1--1--2   src/test/ui/break-while-condition.stderr--1--1--2   .../coercion-missing-tail-expected-type.stderr--1--1--2   src/test/ui/issues/issue-10536.stderr--1--1--2   src/test/ui/issues/issue-32323.stderr--1--1--2   src/test/ui/issues/issue-43162.stderr--1--1--2   src/test/ui/issues/issue-44023.stderr--1--1--2   src/test/ui/issues/issue-6458-4.stderr--1--1--2   .../liveness/liveness-closure-require-ret.stderr--1--1--2   src/test/ui/liveness/liveness-forgot-ret.stderr--1--1--2   src/test/ui/liveness/liveness-missing-ret2.stderr--1--1--2   src/test/ui/missing/missing-return.stderr--1--1--2,Adaptive,
85231,d87b308b67ab070d67ab66062b33f64e5bc621e4,Add support for multiple region bounds in where clauses, ,11,61,   ...multiple-lifetime-bounds-on-fns-where-clause.rs--22--0--22   src/librustc/middle/resolve_lifetime.rs--4--3--7   src/libsyntax/print/pprust.rs--4--2--6   src/librustc_typeck/collect.rs--3--2--5   src/libsyntax/parse/parser.rs--2--2--4   src/libsyntax/visit.rs--2--2--4   src/libsyntax/ast.rs--1--2--3   src/libsyntax/fold.rs--1--2--3   .../where-clause-method-substituion.rs--1--2--3   src/libsyntax/ext/deriving/generic/mod.rs--1--1--2   .../where-clauses-method-unsatisfied.rs--1--1--2,Adaptive,
93401,681fda016979786da5d60a5c6d7fcf5c6c649c86,Reduce the aggressiveness of reachability,Previously  all functions called by a reachable function were considered  reachable  but this is only the case if the original function was possibly  inlineable (if it's type generic or #[inline]-flagged).   ,4,50,   src/librustc/middle/reachable.rs--18--13--31   src/test/auxiliary/linkage-visibility.rs--10--0--10   src/test/run-pass/linkage-visibility.rs--6--0--6   src/librustc/middle/trans/base.rs--1--2--3,Perfective,
3408,451abd311c90e0e94c8c364a282c472323528cf5,PGO for LLVM builds on x86_64-unknown-linux-gnu in CI,This shows up to 5% less instruction counts on multiple benchmarks  and up to  19% wins on the -j1 wall times for rustc self-compilation.    We can afford to spend the extra cycles building LLVM essentially once more for  the x86_64-unknown-linux-gnu CI build today. The builder finishes in around 50  minutes on average  and this adds just 10 more minutes. Given the sizeable  improvements in compiler performance  this is definitely worth it.   ,7,38,   src/ci/pgo.sh--11--11--22   src/bootstrap/flags.rs--4--1--5   src/bootstrap/dist.rs--3--1--4   src/bootstrap/native.rs--2--0--2   .../host-x86_64/dist-x86_64-linux/Dockerfile--2--0--2   .../host-x86_64/dist-x86_64-linux/build-clang.sh--1--1--2   src/bootstrap/config.rs--1--0--1,Adaptive,
15459,0faaa499ccc9fb4835251845cf457bae385f07f5,Add test for compiler reexports removal, ,1,7,   src/test/rustdoc/no-compiler-reexport.rs--7--0--7,Perfective,
60668,3b7f3dc8e7124869c9d2399c37f5d59ddfe4e0ef,WIP: Find binding or assignment within outer loop, ,4,53,   clippy_lints/src/loops.rs--38--7--45   tests/ui/while_loop.rs--2--1--3   tests/ui/while_loop.stderr--2--1--3   clippy_lints/src/lib.rs--1--1--2,Adaptive,
5077,3bc5abef6219f15929ffb6ff8ddedd998f013c63,default_numeric_fallback: Fix FP with floating literal, ,3,57,   tests/ui/default_numeric_fallback.rs--26--2--28   tests/ui/default_numeric_fallback.stderr--18--6--24   clippy_lints/src/default_numeric_fallback.rs--2--3--5,Corrective,
32639,d583fefa59e87cf39714c92c90fd9449f0975ea2,Add ignore reason to placate `tidy`, ,1,2,   src/librustc_mir/dataflow/generic.rs--1--1--2,Perfective,
92959,e9d364d1dffd4398d2a2b4fcb5713bb050e45334,Fix test for #10391 to have pub main, ,1,2,   src/test/run-pass/regions-early-bound-lifetime-in-assoc-fn.rs--1--1--2,Corrective,
64165,36f0402bac2464910b261d08de54e37a0dce5601,Canonicalize range path in FileLines::intersects(), ,1,9,   src/file_lines.rs--6--3--9,Perfective,
62173,8748bdd353e7d8744fdbb3c1c1b2e6c7f424b065,Redefine strdup  open  fdopen as _strdup  _open  _fdopen to avoid linking errors on MSVC, ,1,3,   src/libprofiler_builtins/build.rs--3--0--3,Perfective,
63798,dd7dfe56a9e0d095c670a84f9e827fa9689aad97,Fix invalid associated type rendering in rustdoc, ,3,46,   src/librustdoc/html/format.rs--23--13--36   src/test/rustdoc/assoc-item-cast.rs--8--0--8   src/librustdoc/clean/mod.rs--1--1--2,Corrective,
80250,570a0435765864e2e51c8f953a645c544e9afdd4,Convert 15 diagnostics to have error codes (E0380-E0394).,Also adds explanations for E0380 and E0381.   ,9,77,   src/librustc_borrowck/borrowck/mod.rs--15--18--33   src/librustc_borrowck/diagnostics.rs--12--1--13   src/librustc_typeck/diagnostics.rs--6--1--7   src/librustc_typeck/astconv.rs--3--3--6   src/librustc_typeck/check/wf.rs--3--3--6   src/librustc_typeck/coherence/orphan.rs--2--2--4   src/librustc/middle/check_const.rs--1--2--3   src/librustc_typeck/collect.rs--1--2--3   src/librustc/diagnostics.rs--1--1--2,Adaptive,
21213,e237e0280b301457e5cc4bf6d559e91373a17d65,Reoder order in which MinGW libs are linked, ,1,2,   src/librustc_target/spec/windows_gnu_base.rs--1--1--2,Perfective,
75267,8ea7b88c9b8de8d750b42ceb46b3ec667e21e881,Require stability annotations on fields of tuple variants, ,12,86,   src/libstd/path.rs--16--8--24   src/librustc/middle/stability.rs--1--15--16   src/libcollections/btree/map.rs--6--2--8   src/libstd/collections/hash/map.rs--6--2--8   src/libcollections/borrow.rs--4--2--6   src/libstd/io/mod.rs--3--3--6   src/libcore/result.rs--2--2--4   src/libstd/net/addr.rs--2--2--4   src/libstd/sync/mpsc/mod.rs--2--2--4   src/libcore/option.rs--1--1--2   src/libstd/env.rs--1--1--2   src/libstd/sys/common/poison.rs--1--1--2,Perfective,
98502,8aee0a6a2972f0c62777cb757184c01042513973,libsyntax: Fix `static` in pretty printer. rs=burningtree, ,1,10,   src/libsyntax/print/pprust.rs--0--10--10,Corrective,
75182,fae75c93b3df9c99f10aee03acf5e5570d6fc3af,Fix and test variance of BTreeMap and its companion structs., ,4,51,   .../compile-fail/variance-btree-invariant-types.rs--22--0--22   src/libcollections/btree/map.rs--10--4--14   src/libcollections/btree/node.rs--4--4--8   src/libcollectionstest/btree/map.rs--7--0--7,Perfective,
40438,5f27a25cf4eab09e70cdf81f5e548f13fa7fc289,Invalid byte alignment expected/provided in message #58617, ,3,17,   src/test/ui/consts/const-eval/ub-ref.stderr--5--5--10   src/librustc_mir/interpret/validity.rs--4--2--6   src/test/ui/consts/const-eval/ub-ref.rs--1--0--1,Perfective,
13239,eda4c63fdcfe4717ade45333b90bd1568ebcc949,Add benchmark for File to UnixStream copy, ,1,27,   library/std/src/sys/unix/kernel_copy/tests.rs--27--0--27,Adaptive,
62733,ec33121aafb081f33c78f062492cd61b77cef565,Format source codes, ,8,110,   src/types.rs--12--17--29   src/items.rs--13--14--27   tests/target/chains.rs--11--13--24   src/expr.rs--7--7--14   src/comment.rs--3--3--6   tests/target/file-lines-1.rs--2--2--4   tests/target/file-lines-3.rs--2--2--4   tests/target/configs-fn_call_style-block.rs--1--1--2,Perfective,
83034,a36fc2d66cb95382008a4236f3a803350b64d784,Fix inconsistent spacing of collapse all button, ,1,3,   src/librustdoc/html/render.rs--1--2--3,Perfective,
96084,e80dcf700b97d6d9899a291357a21e22d965c9c0,Use #[allow(warnings)] in rusti instead of explicitly listing warnings, ,1,16,   src/librusti/program.rs--1--15--16,Perfective,
54938,cfe53c066646857a19046ebaf0cdc410c3d9f034,Export wasm source map when debug information is enabled,We use binaryen's linker to produce a wasm file (via s2wasm). The wasm writer has capabilities to export source maps.    The produced source map contains references to the original file  that might require additional source map file processing to include / package original files with it.   ,3,67,   src/librustc_binaryen/BinaryenWrapper.cpp--28--3--31   src/librustc_binaryen/lib.rs--20--0--20   src/librustc_trans/back/write.rs--13--3--16,Adaptive,
23522,55464ebc8372cb2b489aaee84c324f5a6f6ba58d,Fix order of comparison and remove incorrect case for ints in typeck/demand.rs Add tests for *size, ,2,30,   src/test/ui/integer-literal-suffix-inference.rs--25--0--25   src/librustc_typeck/check/demand.rs--2--3--5,Perfective,
18088,6782dc0fcecccc2747d39ff7496b35d11dcc556c,Time running the global context, ,1,2,   src/librustdoc/core.rs--1--1--2,Perfective,
22669,e15383cce12a3bf33ec0475fd78cf786f57c3140,Move the DepNode construction to librustc_query_system., ,8,82,   src/librustc_middle/dep_graph/dep_node.rs--2--23--25   src/librustc_query_system/dep_graph/dep_node.rs--24--0--24   src/librustc_query_system/query/config.rs--11--5--16   src/librustc_middle/ty/query/plumbing.rs--0--6--6   src/librustc_middle/dep_graph/mod.rs--4--0--4   src/librustc_query_system/query/plumbing.rs--3--1--4   src/librustc_middle/ty/query/mod.rs--1--1--2   src/librustc_query_system/dep_graph/mod.rs--1--0--1,Perfective,
11330,a398994cb214c9ba022cb8e6cd97c3fee4bca6ac,Account for existing `_` field pattern when suggesting `..`,Follow up to #80017.   ,2,26,   compiler/rustc_typeck/src/check/pat.rs--15--7--22   src/test/ui/pattern/pat-tuple-underfield.stderr--2--2--4,Adaptive,
499,5ed93af9c41e552c8d85390e2387d01eb9429174,Use `ExprUseVisitor` and multipart suggestion to avoid iffy `String` replacement, ,6,85,   clippy_lints/src/methods/search_is_some.rs--22--7--29   tests/ui/search_is_some.stderr--19--1--20   tests/ui/search_is_some_fixable.stderr--4--11--15   tests/ui/search_is_some.rs--7--0--7   tests/ui/search_is_some_fixable.fixed--0--7--7   tests/ui/search_is_some_fixable.rs--0--7--7,Adaptive,
89912,a289ebefb8c3584d91484f0bb62f696dffadda02,Register new snapshots,This is the first snapshot with support to mix rlib and dylib dependencies.   ,1,8,   src/snapshots.txt--8--0--8,Adaptive,
38804,825a11ea3bb8a4b1a07d4e03a009b2ca4205c6a9,Fix attributes position in type declaration, ,2,23,   src/librustdoc/html/static/rustdoc.css--14--0--14   src/librustdoc/html/render.rs--3--6--9,Corrective,
55554,fa782303a6a12fa4c13d8c8e2af13239b36813b5,0.3.5, ,4,66,   Cargo.lock--26--31--57   CHANGELOG.md--4--0--4   Cargo.toml--1--2--3   src/visitor.rs--0--2--2,Perfective,
51250,acd6ab8f0f00365b424ac9cd83d9d08852add0bc,Rename `unused_loop_label` to `unused_label` and fix/clean up lint logic, ,4,52,   src/librustc_lint/unused.rs--16--20--36   src/test/ui/lint/unused_label.rs--4--5--9   src/librustc_lint/lib.rs--2--2--4   src/test/ui/lint/unused_label.stderr--1--2--3,Perfective,
32500,c9d05aa9ceb82f31a86a548eaaffab8bdb229d76,Point at correct span for parenthesized types, ,23,157,   src/test/ui/issues/issue-32995.stderr--11--11--22   .../ui/anonymous-higher-ranked-lifetime.stderr--8--9--17   src/libsyntax/parse/parser/path.rs--5--5--10   src/test/ui/issues/issue-32995-2.stderr--5--5--10   .../parser/type-parameters-in-field-exprs.stderr--5--5--10   src/test/ui/span/macro-ty-params.stderr--5--5--10   src/test/ui/error-codes/E0214.stderr--4--4--8   src/test/ui/issues/issue-23589.stderr--4--4--8   .../unboxed-closure-sugar-used-on-struct-3.stderr--4--4--8   ...ugar-wrong-number-number-type-parameters.stderr--3--4--7   .../expect-fn-supply-fn.stderr--2--3--5   src/librustc/hir/lowering.rs--3--1--4   ...ature-gate-unboxed-closures-manual-impls.stderr--2--2--4   src/test/ui/issues/issue-39687.stderr--2--2--4   src/test/ui/type/ascription/issue-34255-1.stderr--2--2--4   .../unboxed-closure-sugar-used-on-struct-1.stderr--2--2--4   .../unboxed-closure-sugar-used-on-struct.stderr--2--2--4   ...ar-wrong-number-number-type-parameters-1.stderr--2--2--4   ...ar-wrong-number-number-type-parameters-3.stderr--2--2--4   .../unboxed-closure-sugar-wrong-trait.stderr--2--2--4   src/test/ui/issues/issue-43623.stderr--1--1--2   src/test/ui/issues/issue-60283.stderr--1--1--2   .../closure-arg-type-mismatch.stderr--1--1--2,Corrective,
69871,953d711cc74457981bc01e0090ba67b9a5779e5b,promote svh calculation into its own directory, ,3,43,   src/librustc_incremental/calculate_svh.rs--0--21--21   .../calculate_svh/svh_visitor.rs--16--0--16   src/librustc_incremental/calculate_svh/mod.rs--6--0--6,Adaptive,
88805,16a9258797436498a00726e8aea2ee8a85755e15,core: Reorganize slice module.,This is just moving things around so they are defined in a logical order.   ,1,50,   src/libcore/slice.rs--26--24--50,Perfective,
112221,e99feabf47351a461518760e6f5f5086e11e7c17,Add a result_str method to std.sha1.sha1., ,1,12,   src/lib/sha1.rs--12--0--12,Adaptive,
28625,020be74f6bc5131b79a46d94a1111c35b187469a,Clean up E0120 long explanation, ,1,10,   src/librustc_error_codes/error_codes/E0120.md--6--4--10,Perfective,
8159,8f4417faf24e18359a344945ff1072b54f354f77,Fix rustfmt, ,1,21,   tests/ui/panic_in_result_fn_debug_assertions.rs--7--14--21,Corrective,
100449,40550013886d5da17b0be5e5103606cc8693defc,test: Fix shootout-mandelbrot.rs. rs=bustage, ,1,10,   src/test/bench/shootout-mandelbrot.rs--5--5--10,Perfective,
18462,96efaee55240a3d3428ea5fe30c884a3227dad6e,cargo dev update_lints, ,2,24,   clippy_lints/src/lib.rs--9--9--18   src/lintlist/mod.rs--3--3--6,Adaptive,
68883,b735c1bc7891a5a0176e544aa50c47b4d67f52b4,Tweak std::marker docs,Fixes #29361.   ,1,50,   src/libcore/marker.rs--32--18--50,Perfective,
4798,0d3d6f05f15bcac8a565d7ed0206469c8df6439a,fix typo in compile_fail doctest, ,1,2,   library/core/src/option.rs--1--1--2,Perfective,
15693,e4cf24bd451363cfb675af70b40dbb96a1ec2716,Fiddle with the comments, ,1,10,   library/std/src/sys/unix/time.rs--5--5--10,Perfective,
62355,06f63f5edb887aaff70a475de904103119d022e3,Add doc example for `CString::as_bytes`., ,1,10,   src/libstd/ffi/c_str.rs--10--0--10,Perfective,
21244,690bb8af510c0cf4099eac512127948180dbc792,[AVR] Add AVR platform support, ,21,114,   src/librustc_target/abi/call/avr.rs--22--0--22   src/librustc_target/spec/none_base.rs--20--0--20   src/librustc_target/spec/avr_unknown_unknown.rs--11--0--11   .../feature-gate-abi-avr-interrupt.stderr--8--0--8   src/librustc_ast_passes/feature_gate.rs--6--0--6   src/librustc_llvm/lib.rs--6--0--6   src/librustc_target/spec/abi.rs--6--0--6   .../feature-gate-abi-avr-interrupt.rs--6--0--6   src/rustllvm/PassWrapper.cpp--5--0--5   src/libstd/env.rs--4--0--4   src/librustc_target/abi/call/mod.rs--3--0--3   config.toml.example--1--1--2   src/bootstrap/native.rs--1--1--2   src/librustc_codegen_llvm/abi.rs--2--0--2   src/librustc_codegen_llvm/llvm/ffi.rs--2--0--2   src/librustc_feature/active.rs--2--0--2   src/librustc_middle/ty/layout.rs--2--0--2   src/librustc_target/spec/mod.rs--2--0--2   src/librustc_llvm/build.rs--1--0--1   src/librustc_span/symbol.rs--1--0--1   src/tools/compiletest/src/util.rs--1--0--1,Adaptive,
59388,ed2687f33b52b12dab675b5a36beba4346929ff8,Cargo update, ,1,34,   Cargo.lock--17--17--34,Perfective,
13971,8766c0452c9ae19a041a926820ae400864be6a9b,cleanup: Remove `ParseSess::injected_crate_name`, ,5,23,   compiler/rustc_interface/src/passes.rs--2--6--8   compiler/rustc_builtin_macros/src/standard_library_imports.rs--3--3--6   compiler/rustc_session/src/parse.rs--1--3--4   compiler/rustc_ast_pretty/src/pprust/state.rs--1--2--3   compiler/rustc_driver/src/pretty.rs--0--2--2,Perfective,
2392,e4faf17437ae3aa7609a415d061817e40d3f9ab3,Re-export FromSecsError from `std`, ,1,3,   library/std/src/time.rs--3--0--3,Perfective,
81099,60f8f6bde9be62554a850c31c770357e7d3e576e,compiletest: Add support for `// ignore-musl`,Add the ability to ignore a test based on the environment of the triple being  used.   ,2,8,   src/compiletest/header.rs--4--0--4   src/compiletest/util.rs--4--0--4,Adaptive,
41738,5ca6bd50b584bc157eac783f2a2251424382351f,Rename CanonicalUserTypeAnnotation -> CanonicalUserType,We want the name `CanonicalUserTypeAnnotation` for our own use.   ,6,30,   src/librustc/ty/context.rs--6--6--12   src/librustc_mir/hair/pattern/mod.rs--3--3--6   src/librustc_mir/hair/util.rs--2--2--4   src/librustc_typeck/check/mod.rs--2--2--4   src/librustc/ty/mod.rs--1--1--2   src/librustc_mir/hair/cx/expr.rs--1--1--2,Perfective,
81257,193461c63aa15d476c48a632f35a2284b27bc843,mk: Remove version numbers from beta artifacts,Instead of rustc-1.0.0-beta-$triple.tar.gz  betas will be named  rustc-beta-$triple.tar.gz. This will give betas a stable download  URL  prevent old artifacts from accumulating in the dist server's  root directory  and not require the website to be updated every  beta.    As a tradeoff  it will be harder to download previous betas because  they will need to be located in the archives.   ,1,8,   mk/main.mk--6--2--8,Perfective,
33442,ac940c71100f32ddd56fd69e5b628cbbcad2f55b,Mark toml file as non-executable. (#3754), ,1,0,   tests/config/issue-1111.toml--0--0--0,Perfective,
48791,94921768ea30fb74889d7a0e7b96989358573c63,Suggest in separate line, ,1,2,   src/librustc/traits/error_reporting.rs--1--1--2,Perfective,
21841,47e35cb9bdcb4d2fd66595d566633e9444325ad4,Add test for #72455, ,1,27,   src/test/ui/issues/issue-72455.rs--27--0--27,Perfective,
90750,d6b3f1f231350798f019fdb09f6c4979fb23b8d4,sync: Move the concurrent queue to using &self,This commit also lifts it up a level in the module hierarchy in the soon-to-come  reorganization of libsync.   ,2,21,   src/libsync/{sync=>}/mpsc_intrusive.rs--10--9--19   src/etc/licenseck.py--1--1--2,Perfective,
55551,c31c60cbb9ceb75402240bfe1adc9c2b48a29aa0,Reword diagnostic, ,2,22,   src/librustc/infer/error_reporting/mod.rs--6--10--16   src/test/ui/borrowck/issue-45983.stderr--3--3--6,Perfective,
10566,79f6f11816cbef2bba6f5da6d4a4f0aa10535b88,Remove some unnecessary `trait_ref` calls, ,4,45,   compiler/rustc_privacy/src/lib.rs--18--4--22   .../rustc_trait_selection/src/traits/fulfill.rs--8--8--16   .../src/traits/object_safety.rs--1--4--5   .../rustc_typeck/src/constrained_generic_params.rs--1--1--2,Perfective,
20963,fd9ed30e4b19457cc7059d1b08832edd6d2cbfb8,asm: Update chapter in unstable book for multiple template string arguments,Update all examples to use the new formatting  and update explanations  to document it.   ,1,23,   src/doc/unstable-book/src/library-features/asm.md--14--9--23,Perfective,
56687,289b5f4c21dcac521ab344d32c4d8e3ef170e387,Update a test, ,1,2,   tests/target/macros.rs--1--1--2,Perfective,
34754,828e7b685ade9d53a8f72f3509a98f2255787136,miri: add get and get_mut to AllocMap; use that in get_size_and_align and avoid rightwards drift, ,2,43,   src/librustc_mir/interpret/memory.rs--17--18--35   src/librustc_mir/interpret/machine.rs--8--0--8,Adaptive,
50705,7df009922bc190977ad0ab4e64dd7a72804a442a,Pass literal through black_box, ,1,12,   src/test/run-pass/const-endianess.rs--8--4--12,Perfective,
39400,44730271f79e74def2dc09315268df64f3ea6271,Hide obvious suggestion from cli output, ,4,32,   src/test/ui/issues/issue-52891.stderr--5--13--18   src/test/ui/error-codes/E0430.stderr--2--4--6   src/test/ui/issues/issue-45829/import-twice.stderr--2--4--6   src/librustc_resolve/lib.rs--1--1--2,Perfective,
37674,7e94f9c72ee5eb33f2e373e91ce6dbd36ae30cf8,default to $ARCH-apple-macosx10.7.0 LLVM triple for darwin targets,"Over in #60378  we made `rustc` switch LLVM target triples dynamically  based on the `MACOSX_DEPLOYMENT_TARGET` environment variable.  This  change was made to align with `clang`'s behavior  and therefore make  cross-language LTO feasible on OS X.  Otherwise  `rustc` would produce  LLVM bitcode files with a target triple of `x86_64-apple-darwin`   `clang` would produce LLVM bitcode files with a target triple of  `x86_64-apple-macosx$VERSION`  and the linker would complain.    This change worked fine  except for one corner case: if you didn't have  `MACOSX_DEPLOYMENT_TARGET` set  and you wanted to do LTO on just Rust  code  you'd get warning messages similar to:    ```  warning: Linking two modules of different target triples: ' is 'x86_64-apple-macosx10.7.0' whereas 'main.7rcbfp3g-cgu.4' is 'x86_64-apple-darwin'  ```    This message occurs because libstd is compiled with  `MACOSX_DEPLOYMENT_TARGET` set to 10.7.  The LLVM bitcode distributed in  libstd's rlibs  then  is tagged with the target triple of  `x86_64-apple-macosx10.7.0`  while the bitcode `rustc` produces for  ""user"" code is tagged with the target triple of `x86_64-apple-darwin`.    It's not good to have LTO on just Rust code (probably much more common  than cross-language LTO) warn by default.  These warnings also break  Cargo's testsuite.    This change defaults to acting as though `MACOSX_DEPLOYMENT_TARGET` was  set to 10.7.  ""user"" code will then be given a target triple that is  equivalent to the target triple libstd bitcode is already using.  The  above warning will therefore go away.    `rustc` already assumes that compiling without  `MACOSX_DEPLOYMENT_TARGET` means that we're compiling for a target  compatible with OS X 10.7 (e.g. that things like TLS work properly).  So  this change is really just making things conform more closely to the  status quo.    (It's also worth noting that before and after this patch  compiling with  `MACOSX_DEPLOYMENT_TARGET` set to  say  10.9  works just fine: target  triples with an ""apple"" version ignore OS versions when checking  compatibility  so bitcode with a `x86_64-apple-macosx10.7.0` triple works just  fine with bitcode with a `x86_64-apple-macosx10.9.0` triple.)   ",3,21,   src/librustc_target/spec/apple_base.rs--5--12--17   src/test/codegen/i686-no-macosx-deployment-target.rs--1--1--2   src/test/codegen/x86_64-no-macosx-deployment-target.rs--1--1--2,Perfective,
58888,eb59952fbdb217101834325fa7e08074b735a3e0,Docs: Add trace_macros! to unstable book, ,1,22,   .../src/language-features/trace-macros.md--22--0--22,Perfective,
44834,7c34f2da577a0b3b8effdbcc0705499bc2a6861f,Addressed minor issues brought up in review., ,4,30,   src/librustc_mir/const_eval.rs--9--6--15   .../const-eval/promoted_const_fn_fail_deny_const_err.rs--4--6--10   .../promoted_const_fn_fail_deny_const_err.stderr--1--2--3   src/test/rustdoc/const-evalutation-ice.rs--1--1--2,Corrective,
47469,de35b66783278a16d2de35ddcc11b397be04c473,Document Box::into_raw returns non-null ptr, ,1,4,   src/liballoc/boxed.rs--3--1--4,Perfective,
17559,326b772609c4cfbd09026c534be4cbfda36fbcf4,inliner: Check for no_sanitize attribute compatibility, ,1,9,   compiler/rustc_mir/src/transform/inline.rs--6--3--9,Perfective,
87308,31f6d45a181859e10595ee1de43dfaee9f16963d,Do not attempt to autoderef `!`,This prevents error spam when attempting to look up overload traits.   ,1,4,   src/librustc/middle/typeck/check/mod.rs--4--0--4,Perfective,
10409,e18c79a4a9c06ae8dc282f1b4aae560a3076d9cd,Work around various issues cleaning up bootstrap on Windows, ,1,42,   src/bootstrap/clean.rs--36--6--42,Perfective,
39908,aa5374192704861bd64dc031b363a88ec7edc0ad,HirIdification: remove all NodeIds from typeck, ,4,39,   src/librustc_typeck/check/mod.rs--7--8--15   src/librustc_typeck/check/writeback.rs--2--9--11   src/librustc_typeck/check/method/probe.rs--5--4--9   src/librustc_typeck/check/method/mod.rs--2--2--4,Perfective,
103050,c936ae515bdcebd184309c709540b512fc6f7c59,Linked failure: Make joining a taskgroup O(1), ,1,53,   src/libcore/task.rs--33--20--53,Perfective,
54315,3b79dd9b37662402b4715801e0a128dc74300b30,Preserve trailing comma on macro in item position, ,1,6,   rustfmt-core/src/macros.rs--5--1--6,Perfective,
30951,c2bbfeadcce08a4b8ce02b66906ecc542cc9df39,Always align Waiter to 4 bytes, ,1,1,   src/libstd/sync/once.rs--1--0--1,Perfective,
16560,9a7e66aeafe8debdee9b3b5e128c47034864f2b1,Make sure we don't hide errors just because a lint has been emitted, ,8,53,   .../src/thir/pattern/const_to_pat.rs--16--6--22   src/test/ui/consts/match_ice.stderr--4--10--14   src/test/ui/consts/match_ice.rs--2--3--5   ...sue-62307-match-ref-ref-forbidden-without-eq.rs--2--2--4   .../cant-hide-behind-doubly-indirect-embedded.rs--1--1--2   .../cant-hide-behind-doubly-indirect-param.rs--1--1--2   .../cant-hide-behind-indirect-struct-embedded.rs--1--1--2   .../cant-hide-behind-indirect-struct-param.rs--1--1--2,Perfective,
89579,badde74100a6e55989811255cf2571fa030832db,Add slice::MutableCloneableVector to the prelude,Every other trait in slice is in the prelude  so it makes sense to  provide MutableCloneableVector as well.   ,1,8,   src/libstd/prelude.rs--4--4--8,Perfective,
6310,01d4d46f66929122cc890279cde4765df7a0a90f,Replace IntoIter::new with IntoIterator::into_iter in std, ,5,40,   library/core/tests/array.rs--11--11--22   .../array-impls/into-iter-impls-length-32.rs--3--4--7   .../array-impls/into-iter-impls-length-33.rs--3--4--7   .../alloc/src/collections/vec_deque/pair_slices.rs--1--1--2   library/core/src/array/mod.rs--1--1--2,Perfective,
110273,12d553216663b80a6c10921ab52558253ba56920,Use switches rather than chained conditionals to compile alt matches,This also moves the alt-related trans code into its own file.    Closes #467   ,4,68,   src/comp/middle/trans_alt.rs--43--0--43   src/comp/middle/trans.rs--1--22--23   src/comp/rustc.rc--1--0--1   src/comp/util/common.rs--1--0--1,Perfective,
85536,888f24969fc06d9aa783c71ab0d1f1b88a58f170,librustdoc: use unboxed closures, ,2,25,   src/librustdoc/html/render.rs--9--4--13   src/librustdoc/html/format.rs--8--4--12,Perfective,
14848,fb8a9cb38d73f3876b57f250502895c7cc60d421,Change lint doc test, ,3,32,   tests/ui/mut_mutex_lock.stderr--7--15--22   clippy_lints/src/mut_mutex_lock.rs--3--3--6   tests/ui/mut_mutex_lock.rs--2--2--4,Perfective,
55778,1afbe3203c97bf4f5d8aa7cb564c2e674b2eb36e,Fix build,Added comment   ,1,2,   .travis.yml--2--0--2,Corrective,
103492,18ac4eee3b38b3af0e252630c590325fb40ba54f,std: Ignore a test that doesn't terminate on windows, ,1,1,   src/libstd/net_tcp.rs--1--0--1,Perfective,
41557,82fae2be049f37bc20d2bad6c6c482a7d957f687,Correctly set filetime for copied LLVM,This also makes compiletest no longer always retest everything.   ,3,48,   src/tools/compiletest/src/main.rs--23--13--36   src/bootstrap/lib.rs--7--3--10   src/tools/compiletest/src/runtest.rs--1--1--2,Corrective,
84318,e7e308f447eccb626f697b5d6d10b1c9e45839e4,reference: Made a number of small gramatical fixes changes for correctness/consistency. Small updates to text and code where the language has since changed., ,1,52,   src/doc/reference.md--26--26--52,Perfective,
113146,756880a5f5e5df2474a9770d27fa3751b0be4916,rustc: Parse simple patterns, ,2,55,   src/comp/front/parser.rs--48--0--48   src/comp/front/ast.rs--7--0--7,Adaptive,
112885,3b0e207109ba135e94264cef17bac989574ccb0b,Drop closures. Un-XFAIL bind-interior.rs., ,2,49,   src/comp/middle/trans.rs--42--6--48   src/Makefile--1--0--1,Adaptive,
49458,f580b983b1a35cfb0d25b56c5b201ebdbc39636c,Edit code example for File::open, ,1,6,   src/libstd/fs.rs--3--3--6,Perfective,
44891,6fd914a1afc3d0d0f86e8a9a1bfacd55be053d58,Add vtable-shim helper methods for Instance., ,1,27,   src/librustc/ty/instance.rs--27--0--27,Perfective,
104842,2955ecd13c3c49a8c17dd2d02fdc75e66b5097a4,"Revert ""libstd: Colorify test results when run in parallel""",This reverts commit 7b3cb05311ef7d671b0bf92b041112ef141dc188.   ,1,37,   src/libstd/test.rs--22--15--37,Corrective,
102611,4be8239ac2fe2209dd4f19279151aa18792e6c4a,Add 'static' to rust-mode.el., ,1,2,   src/etc/emacs/rust-mode.el--1--1--2,Perfective,
24279,d224e214e051a92c5313a2d4ec0c94d41c4ba01d,Rename read_query_job -> current_query_job and simplify it., ,4,38,   src/librustc_query_system/query/job.rs--12--17--29   src/librustc/ty/query/plumbing.rs--2--2--4   src/librustc_query_system/query/plumbing.rs--2--1--3   src/librustc_query_system/query/config.rs--1--1--2,Perfective,
59377,2819122b44fc7b6069fc09cf7ea6b710019eed72,Update cargo submodule,Just a routine update   ,1,2,   src/tools/cargo--1--1--2,Perfective,
88957,6fede93475013a5a8bef1678dfd04fef3118836e,Make the crate and its exported items available in the lint context, ,2,28,   src/librustc/lint/context.rs--13--3--16   src/librustc/lint/builtin.rs--2--10--12,Adaptive,
52453,f607a3872addf380846cae28661a777ec3e3c9a2,Rename alloc::Void to alloc::Opaque, ,18,70,   src/liballoc_system/lib.rs--10--11--21   src/libcore/alloc.rs--4--4--8   src/liballoc/alloc.rs--3--3--6   src/liballoc/raw_vec.rs--2--3--5   src/liballoc/heap.rs--1--2--3   src/librustc_allocator/expand.rs--1--2--3   src/doc/nomicon--1--1--2   .../src/language-features/global-allocator.md--1--1--2   src/liballoc/arc.rs--1--1--2   src/liballoc/btree/node.rs--1--1--2   src/liballoc/rc.rs--1--1--2   src/libcore/ptr.rs--1--1--2   src/libstd/alloc.rs--1--1--2   src/libstd/collections/hash/table.rs--1--1--2   src/test/run-make-fulldeps/std-core-cycle/bar.rs--1--1--2   src/test/run-pass/allocator/auxiliary/custom.rs--1--1--2   src/test/run-pass/allocator/custom.rs--1--1--2   src/test/run-pass/realloc-16687.rs--1--1--2,Perfective,
107750,0f339b481a8ae255f012f2218c8f5b5fc3d451ce,rt: Remove a lock from task_start_wrapper that does nothing, ,1,3,   src/rt/rust_task.cpp--0--3--3,Perfective,
73667,bd5af32cb1589a9c8b00f0be2a0e2c24dfdbfc6d,Fix `conf.rs` path in `update_wiki`, ,1,2,   util/update_wiki.py--1--1--2,Corrective,
83117,a35824b149c82308204547158b4b23c5699effa5,std: Add Vec::from_iter comment,Requested by Niko in #22200 (and is good to have anyway)   ,1,11,   src/libcollections/vec.rs--11--0--11,Perfective,
84628,87eebd17cd994a1c847c4a8926663478c4670c40,Fixed tests, ,1,4,   src/test/debuginfo/gdb-pretty-struct-and-enums.rs--2--2--4,Perfective,
14158,cf3aa64c662586548f1c5cebbde3cc5864a1cd45,Better build dir layout,It now matches the layout used by rustc itself   ,6,30,   build_sysroot/build_sysroot.sh--4--4--8   Readme.md--3--3--6   scripts/config.sh--3--3--6   build.sh--3--1--4   src/bin/cg_clif.rs--3--1--4   scripts/test_bootstrap.sh--1--1--2,Perfective,
53393,c1ba5ac62c14ab5e231edcce914fd33f0e32c2d1,Reporting with `span_suggestion_short`., ,1,20,   src/librustc/traits/error_reporting.rs--5--15--20,Perfective,
55693,ee43e6d6c9c298c22c106a221ca962818f6a0b56,Added test for #46983, ,2,28,   src/test/ui/issue-46983.rs--18--0--18   src/test/ui/issue-46983.stderr--10--0--10,Perfective,
106712,882bea5b6d016006ab110d3a9526ffca0a479e27,Rename fn*() to fn() as originally planned., ,6,51,   src/comp/syntax/parse/parser.rs--9--7--16   src/test/compile-fail/block-coerce-no.rs--8--8--16   src/test/pretty/fn-types.rs--8--0--8   src/test/compile-fail/block-coerce-no-2.rs--3--4--7   src/comp/syntax/print/pprust.rs--1--1--2   src/test/run-pass/block-arg-used-as-any.rs--1--1--2,Perfective,
63846,d821e98fd73ee16c2f2733570220b2b64d367d45,Make a comment better., ,1,2,   src/librustc/session/mod.rs--1--1--2,Perfective,
8916,11b3409b5d927079f945d24d848c6e8d20cff8ac,Remove FingerprintEncoder/Decoder., ,4,33,   compiler/rustc_data_structures/src/fingerprint.rs--4--18--22   .../rustc_middle/src/ty/query/on_disk_cache.rs--0--5--5   compiler/rustc_metadata/src/rmeta/decoder.rs--0--3--3   compiler/rustc_metadata/src/rmeta/encoder.rs--0--3--3,Perfective,
51885,f12d7a55fca7215a08029c90634ab54f883a9f1c,Update ui/generator tests to reflect changes from new generator drop rules., ,6,62,   src/test/ui/generator/borrowing.nll.stderr--15--7--22   src/test/ui/generator/dropck.nll.stderr--9--6--15   .../ref-escapes-but-not-over-yield.nll.stderr--7--3--10   src/test/ui/generator/dropck.stderr--7--2--9   src/test/ui/generator/borrowing.rs--1--2--3   src/test/ui/generator/dropck.rs--1--2--3,Perfective,
52715,62000c072e850f0a102db2b22e08b12d82e3c475,Rename `ast::Variant_::name` into `ident` + Fix rebase, ,21,68,   src/libsyntax/parse/mod.rs--3--7--10   src/libsyntax_ext/deriving/generic/mod.rs--2--4--6   src/test/run-pass-fulldeps/pprust-expr-roundtrip.rs--2--4--6   src/librustc_resolve/lib.rs--2--2--4   src/libsyntax/ast.rs--2--2--4   src/libsyntax/ext/build.rs--2--2--4   src/libsyntax/print/pprust.rs--2--2--4   src/libsyntax/visit.rs--2--2--4   src/librustc/hir/lowering.rs--1--1--2   src/librustc/hir/map/def_collector.rs--1--1--2   src/librustc_lint/unused.rs--1--1--2   src/librustc_resolve/build_reduced_graph.rs--1--1--2   src/librustc_save_analysis/dump_visitor.rs--1--1--2   src/librustc_save_analysis/lib.rs--1--1--2   src/librustc_save_analysis/sig.rs--1--1--2   src/libsyntax/config.rs--1--1--2   src/libsyntax/fold.rs--1--1--2   src/libsyntax/parse/parser.rs--1--1--2   src/libsyntax_ext/deriving/clone.rs--1--1--2   src/libsyntax_ext/deriving/debug.rs--1--1--2   src/libsyntax_ext/deriving/encodable.rs--1--1--2,Perfective,
101312,44f8a4401ab37a45ba49db56611d77807bcbce35,Backup changes before pull from incoming, ,1,53,   src/libstd/sort.rs--48--5--53,Perfective,
90369,7ba8cb530a608763e4c052c4f21b1f961889376e,Register snapshots.,This is the first snap based on mingw-w64.   ,1,8,   src/snapshots.txt--8--0--8,Adaptive,
65406,d90a7b3b006be912493ddf15d0dc5895a6929b38,std: Add retain method for HashMap and HashSet,Fix #36648   ,3,70,   src/libstd/collections/hash/map.rs--23--12--35   src/libstd/collections/hash/table.rs--22--3--25   src/libstd/collections/hash/set.rs--10--0--10,Adaptive,
35590,920a17a60c13101225a3a50e232c3e44017dab69,privacy: Only opaque macros leak private things, ,4,69,   src/libsyntax/attr/builtin.rs--33--0--33   src/libsyntax/ext/tt/macro_rules.rs--14--13--27   src/libsyntax/attr/mod.rs--1--5--6   src/librustc_privacy/lib.rs--2--1--3,Adaptive,
54353,0d8636f229a5fd68fecc613fb5b4cefa1659f901,Allow meta item's value to exceed max width, ,1,9,   rustfmt-core/src/attr.rs--8--1--9,Perfective,
46415,fab6b06b899a2844df4ed5ce65a7fa7947cf18cb,Add treat-err-as-bug flag in rustdoc, ,4,66,   src/test/rustdoc-ui/treat-err-as-bug.stderr--21--0--21   src/librustdoc/core.rs--11--8--19   src/librustdoc/lib.rs--10--3--13   src/test/rustdoc-ui/treat-err-as-bug.rs--13--0--13,Adaptive,
112668,127139aecd5c3a1227ee58c77fc083506125f7cd,Parse crate directive tree in one pass  then evaluate it in a second., ,2,49,   src/comp/front/parser.rs--35--12--47   src/comp/front/ast.rs--1--1--2,Adaptive,
96293,58fc1fccad8a0343dd7399a44305b5b3a51a9547,last bit of whitespace, ,1,1,   src/test/run-pass/match-borrowed_str.rs--0--1--1,Perfective,
50592,8a74be6684a6b0f02c5d4a36cbc19201a9d6f34f,Add source information the const propagation of places, ,1,9,   src/librustc_mir/transform/const_prop.rs--5--4--9,Perfective,
29614,53e083323257d0d79d9f0b2d365232a3c1f085ca,Implement log10f* intrinsics, ,1,2,   src/intrinsics.rs--2--0--2,Adaptive,
103753,4dcf84e4f4a9a54254fd426609ad9f1ccffae3b9,Remove bind. Issue #2189, ,116,336,   src/rustc/driver/driver.rs--12--9--21   src/libsyntax/visit.rs--8--8--16   src/rustc/middle/typeck/check.rs--1--11--12   src/test/run-pass/auto_serialize.rs--5--6--11   src/libsyntax/ext/simplext.rs--6--4--10   doc/rust.md--1--8--9   src/rustc/middle/resolve.rs--5--4--9   src/fuzzer/fuzzer.rs--3--4--7   src/libsyntax/fold.rs--3--4--7   src/libsyntax/parse/parser.rs--1--5--6   src/libsyntax/print/pprust.rs--1--4--5   src/rustc/middle/tstate/pre_post_conditions.rs--1--4--5   src/rustc/middle/trans/base.rs--2--2--4   src/test/run-pass/bind-generic.rs--0--4--4   src/test/run-pass/bind-methods.rs--0--4--4   src/test/run-pass/bind-native-fn.rs--0--4--4   src/test/run-pass/generic-bind.rs--0--4--4   doc/tutorial.md--0--3--3   src/rustc/front/config.rs--1--2--3   src/rustc/middle/liveness.rs--1--2--3   src/rustc/middle/tstate/annotate.rs--1--2--3   src/rustc/middle/tstate/states.rs--0--3--3   src/test/run-pass/bind-interior.rs--0--3--3   src/test/run-pass/bind-thunk.rs--0--3--3   src/test/run-pass/bind-trivial.rs--0--3--3   src/test/run-pass/issue-898.rs--0--3--3   src/cargo/cargo.rs--1--1--2   src/compiletest/runtest.rs--1--1--2   src/libcore/comm.rs--1--1--2   src/libcore/extfmt.rs--1--1--2   src/libstd/bitv.rs--1--1--2   src/libstd/c_vec.rs--1--1--2   src/libstd/deque.rs--1--1--2   src/libstd/test.rs--1--1--2   src/libstd/treemap.rs--1--1--2   src/libsyntax/ext/auto_serialize.rs--1--1--2   src/libsyntax/ext/expand.rs--1--1--2   src/libsyntax/ext/fmt.rs--1--1--2   src/libsyntax/ext/qquote.rs--1--1--2   src/libsyntax/parse.rs--1--1--2   src/rustc/back/rpath.rs--1--1--2   src/rustc/back/upcall.rs--1--1--2   src/rustc/driver/rustc.rs--1--1--2   src/rustc/front/test.rs--1--1--2   src/rustc/metadata/creader.rs--1--1--2   src/rustc/metadata/decoder.rs--1--1--2   src/rustc/metadata/encoder.rs--1--1--2   src/rustc/metadata/tydecode.rs--1--1--2   src/rustc/middle/astencode.rs--1--1--2   src/rustc/middle/borrowck/categorization.rs--1--1--2   src/rustc/middle/check_alt.rs--1--1--2   src/rustc/middle/check_const.rs--1--1--2   src/rustc/middle/trans/alt.rs--1--1--2   src/rustc/middle/trans/closure.rs--0--2--2   src/rustc/middle/trans/common.rs--1--1--2   src/rustc/middle/trans/type_use.rs--1--1--2   src/rustc/middle/tstate/auxiliary.rs--1--1--2   src/rustc/middle/tstate/bitvectors.rs--1--1--2   src/rustc/middle/tstate/ck.rs--1--1--2   src/rustc/middle/tstate/collect_locals.rs--1--1--2   src/rustc/middle/typeck/check/alt.rs--1--1--2   src/rustc/middle/typeck/collect.rs--1--1--2   src/rustc/util/common.rs--1--1--2   src/rustdoc/prune_unexported_pass.rs--1--1--2   src/rustdoc/reexport_pass.rs--1--1--2   src/test/bench/sudoku.rs--1--1--2   src/test/bench/task-perf-word-count-generic.rs--1--1--2   src/test/bench/task-perf-word-count.rs--1--1--2   src/test/compile-fail/bind-stack-closure.rs--0--2--2   src/test/compile-fail/crust-no-bind.rs--0--2--2   src/test/compile-fail/fn-bare-bind.rs--0--2--2   .../compile-fail/liveness-uninit-after-item.rs--1--1--2   src/test/compile-fail/tstate-unsat-after-item.rs--1--1--2   src/test/compile-fail/unsafe-fn-used-in-bind.rs--0--2--2   src/test/run-fail/unwind-closure.rs--1--1--2   src/test/run-pass/bind-native.rs--0--2--2   src/test/run-pass/bind-parameterized-args-2.rs--0--2--2   src/test/run-pass/bind-parameterized-args.rs--0--2--2   src/test/run-pass/block-fn-coerce.rs--1--1--2   src/test/run-pass/cycle-collection2.rs--1--1--2   src/test/run-pass/cycle-collection4.rs--1--1--2   src/test/run-pass/cycle-collection5.rs--1--1--2   src/test/run-pass/empty-tag.rs--1--1--2   src/test/run-pass/expr-alt-generic-box1.rs--1--1--2   src/test/run-pass/expr-alt-generic-box2.rs--1--1--2   src/test/run-pass/expr-alt-generic-unique1.rs--1--1--2   src/test/run-pass/expr-alt-generic-unique2.rs--1--1--2   src/test/run-pass/expr-alt-generic.rs--1--1--2   src/test/run-pass/expr-block-generic-box1.rs--1--1--2   src/test/run-pass/expr-block-generic-box2.rs--1--1--2   src/test/run-pass/expr-block-generic-unique1.rs--1--1--2   src/test/run-pass/expr-block-generic-unique2.rs--1--1--2   src/test/run-pass/expr-block-generic.rs--1--1--2   src/test/run-pass/expr-if-generic-box1.rs--1--1--2   src/test/run-pass/expr-if-generic-box2.rs--1--1--2   src/test/run-pass/expr-if-generic.rs--1--1--2   src/test/run-pass/fixed-point-bind-box.rs--1--1--2   src/test/run-pass/fixed-point-bind-unique.rs--1--1--2   src/test/run-pass/fn-bare-bind-generic.rs--0--2--2   src/test/run-pass/fn-bare-bind.rs--0--2--2   src/test/run-pass/generic-bind-2.rs--0--2--2   src/test/run-pass/hashmap-memory.rs--1--1--2   src/test/run-pass/issue-2185.rs--1--1--2   src/test/run-pass/issue-333.rs--1--1--2   src/test/run-pass/rebind-fn.rs--0--2--2   src/test/run-pass/unchecked-predicates.rs--1--1--2   src/test/run-pass/weird-exprs.rs--1--1--2   src/libsyntax/ast.rs--0--1--1   src/libsyntax/parse/token.rs--0--1--1   src/rustc/middle/kind.rs--0--1--1   src/test/compile-fail/auto-deref-bind.rs--0--1--1   src/test/run-pass/bind-exterior.rs--0--1--1   src/test/run-pass/drop-bind-thunk-args.rs--0--1--1   .../drop-parametric-closure-with-bound-box.rs--0--1--1   src/test/run-pass/fun-call-variants.rs--0--1--1   src/test/run-pass/issue-1899.rs--0--1--1,Perfective,
99928,abae61257c4d866bb321bfb80ad16b7531736f7e,Allow consts to be non-nullary enum constructors, ,2,21,   src/librustc/middle/trans/consts.rs--18--0--18   src/librustc/middle/check_const.rs--2--1--3,Adaptive,
40911,b86dd161df35086d55dd627fa97337635cd2b046,remove unneeded Version import, ,1,2,   src/lib.rs--1--1--2,Perfective,
41229,71023394772e9194e3c7a2426364faef6c3ad2c4,Update visibility of intermediate use items.,Currently  the target of a use statement will be updated with  the visibility of the use statement itself (if the use statement was  visible).    This commit ensures that if the path to the target item is via another  use statement then that intermediate use statement will also have the  visibility updated like the target. This silences incorrect  `unreachable_pub` lints with inactionable suggestions.   ,8,93,   src/librustc_privacy/lib.rs--35--2--37   src/librustc/middle/privacy.rs--9--6--15   src/test/ui/issues/issue-57410-1.rs--14--0--14   src/test/ui/issues/issue-57410.rs--14--0--14   src/librustc/hir/def.rs--8--0--8   src/libcore/iter/traits/mod.rs--2--0--2   src/libstd/sys/mod.rs--2--0--2   src/libcore/iter/adapters/mod.rs--1--0--1,Perfective,
15673,fb4d62759b6d4a5165f1a4401eb8c55c9f7f6211,Add a regression test for issue-71443, ,3,31,   src/test/ui/associated-type-bounds/issue-71443-1.stderr--11--0--11   src/test/ui/associated-type-bounds/issue-71443-2.rs--11--0--11   src/test/ui/associated-type-bounds/issue-71443-1.rs--9--0--9,Perfective,
13995,380b222f52ee2f506d35ba89bbd8f83f6469f31f,Consider mutable ident binding patterns to be simple,This should fix `rustdoc` rendering of by-value mutable arguments in  `async fn` contexts.   ,1,9,   compiler/rustc_ast_lowering/src/item.rs--6--3--9,Corrective,
69161,ffdd982fc13f31cde692caf9711d013ff17f35b2,Fix documentation with 'soft-float' codegen option,This option doesn't cause software FP routines  to be called it only changes the float ABI.    Additionally  this option is ignored by all targets   except the ARM eabihf ones.   ,1,2,   src/librustc/session/config.rs--1--1--2,Corrective,
51034,edbdf3d2635db5e456b3da72e51382b62810232b,Formatting nit, ,1,2,   src/librustc/mir/interpret/value.rs--1--1--2,Perfective,
102124,e9ac7489b5032b4a922a0df1dd611471260b31ef,Refactor representation of borrowing so that it is tracked by fn_ctxt and not infer, ,10,73,   src/rustc/middle/typeck/check.rs--15--13--28   src/rustc/middle/typeck/infer/assignment.rs--7--8--15   src/rustc/middle/typeck/check/writeback.rs--4--3--7   src/rustc/middle/typeck/infer.rs--3--4--7   src/rustc/middle/typeck/check/method.rs--3--3--6   src/rustc/middle/typeck/check/vtable.rs--2--1--3   src/rustc/middle/typeck/check/alt.rs--1--1--2   src/rustc/middle/typeck/check/demand.rs--1--1--2   src/rustc/middle/typeck/check/regionck.rs--1--1--2   src/libstd/test.rs--1--0--1,Perfective,
88580,f8bc571df70a0832890bbed82ff80d4c9921b6ac,Add range lint for float literals  fixing #10934, ,4,38,   src/librustc/lint/builtin.rs--21--8--29   src/test/compile-fail/lint-type-overflow.rs--5--0--5   src/libcore/num/f32.rs--2--0--2   src/libcore/num/f64.rs--2--0--2,Adaptive,
56417,524c3ff472a54a42c75257b803abc9dc34c7302c,Remove Sync and Send implementation for RawTable,The implementation was introduced when changing hash storage from  Unique to *mut  but it was changed back to Unique. ,1,3,   src/libstd/collections/hash/table.rs--0--3--3,Perfective,
110805,f3798fd2134ce3b47d69e452dfe9aa926b66e859,rustc: Load immediate types when iterating over interior vectors, ,1,32,   src/comp/middle/trans.rs--30--2--32,Adaptive,
98184,97cc571358c3ac1bc3d562ac60c39c67cda3678d,std: clean up the order of {De En}codable methods, ,4,72,   src/libstd/json.rs--20--20--40   src/libstd/ebml.rs--10--10--20   src/libstd/serialize.rs--3--3--6   src/libsyntax/ext/auto_encode.rs--3--3--6,Perfective,
1984,00152d89776b632905cfa4ae58e594055298c9c8,Stabilize try_reserve, ,16,56,   src/test/ui/feature-gates/feature-gate-try_reserve.stderr--0--12--12   library/alloc/src/collections/vec_deque/mod.rs--2--4--6   library/alloc/src/string.rs--2--4--6   library/alloc/src/vec/mod.rs--2--4--6   library/alloc/src/collections/mod.rs--2--2--4   src/test/ui/feature-gates/feature-gate-try_reserve.rs--0--4--4   library/std/src/collections/hash/map.rs--1--2--3   library/std/src/collections/hash/set.rs--1--2--3   compiler/rustc_data_structures/src/sso/map.rs--1--1--2   compiler/rustc_data_structures/src/sso/set.rs--1--1--2   library/std/src/collections/mod.rs--1--1--2   library/std/src/error.rs--1--1--2   compiler/rustc_middle/src/lib.rs--0--1--1   library/alloc/tests/lib.rs--0--1--1   library/std/src/lib.rs--0--1--1   src/test/ui/closures/issue-87814-2.rs--0--1--1,Perfective,
111376,2d17d9101dc9de04888cacb5b29860200a0f11c7,stdlib: Use if/alt expressions in std::map, ,1,18,   src/lib/map.rs--8--10--18,Perfective,
1373,5f79583c3c83aa3b8a832e4effacb9141de4c2aa,chore: bump toolchain  fix conflict, ,2,8,   Cargo.lock--0--6--6   rust-toolchain--1--1--2,Corrective,
72269,89d086be74d5ddf21d67f2a3c27a29cca2631bba,change color of warning to YELLOW, ,1,2,   src/libsyntax/errors/mod.rs--1--1--2,Perfective,
64120,e97fc5247a1d3e3e223febbbcda15e3439b61c30,kill the graphviz-flowgraph tests,They are so annoying to update  and haven't caught any bugs afaik.   ,53,268,   .../graphviz-flowgraph/f24.dot-expected.dot--0--21--21   .../graphviz-flowgraph/f25.dot-expected.dot--0--21--21   .../graphviz-flowgraph/f23.dot-expected.dot--0--15--15   .../graphviz-flowgraph/f22.dot-expected.dot--0--14--14   .../graphviz-flowgraph/f16.dot-expected.dot--0--14--14   .../graphviz-flowgraph/f15.dot-expected.dot--0--14--14   .../graphviz-flowgraph/f21.dot-expected.dot--0--13--13   .../graphviz-flowgraph/f13.dot-expected.dot--0--7--7   .../graphviz-flowgraph/f12.dot-expected.dot--0--7--7   .../graphviz-flowgraph/f09.dot-expected.dot--0--7--7   src/test/run-make/graphviz-flowgraph/Makefile--0--5--5   .../graphviz-flowgraph/f10.dot-expected.dot--0--5--5   src/test/run-make/graphviz-flowgraph/f25.rs--0--5--5   .../graphviz-flowgraph/f11.dot-expected.dot--0--5--5   .../graphviz-flowgraph/f07.dot-expected.dot--0--5--5   .../graphviz-flowgraph/f08.dot-expected.dot--0--5--5   .../graphviz-flowgraph/f14.dot-expected.dot--0--5--5   src/test/run-make/graphviz-flowgraph/f24.rs--0--5--5   src/test/run-make/graphviz-flowgraph/f21.rs--0--4--4   .../graphviz-flowgraph/f20.dot-expected.dot--0--4--4   src/test/run-make/graphviz-flowgraph/f22.rs--0--4--4   .../graphviz-flowgraph/f19.dot-expected.dot--0--4--4   src/test/run-make/graphviz-flowgraph/f16.rs--0--4--4   src/test/run-make/graphviz-flowgraph/f15.rs--0--4--4   src/test/run-make/graphviz-flowgraph/f23.rs--0--4--4   src/test/run-make/graphviz-flowgraph/f11.rs--0--3--3   src/test/run-make/graphviz-flowgraph/f09.rs--0--3--3   src/test/run-make/graphviz-flowgraph/f13.rs--0--3--3   src/test/run-make/graphviz-flowgraph/f14.rs--0--3--3   src/test/run-make/graphviz-flowgraph/f12.rs--0--3--3   .../graphviz-flowgraph/f17.dot-expected.dot--0--3--3   .../graphviz-flowgraph/f18.dot-expected.dot--0--3--3   .../graphviz-flowgraph/f03.dot-expected.dot--0--3--3   .../graphviz-flowgraph/f05.dot-expected.dot--0--3--3   .../graphviz-flowgraph/f06.dot-expected.dot--0--3--3   src/test/run-make/graphviz-flowgraph/f07.rs--0--3--3   src/test/run-make/graphviz-flowgraph/f17.rs--0--2--2   src/test/run-make/graphviz-flowgraph/f06.rs--0--2--2   src/test/run-make/graphviz-flowgraph/f18.rs--0--2--2   .../graphviz-flowgraph/f04.dot-expected.dot--0--2--2   src/test/run-make/graphviz-flowgraph/f03.rs--0--2--2   .../graphviz-flowgraph/f02.dot-expected.dot--0--2--2   src/test/run-make/graphviz-flowgraph/f20.rs--0--2--2   src/test/run-make/graphviz-flowgraph/f01.rs--0--2--2   .../graphviz-flowgraph/f01.dot-expected.dot--0--2--2   src/test/run-make/graphviz-flowgraph/f00.rs--0--2--2   src/test/run-make/graphviz-flowgraph/f02.rs--0--2--2   .../graphviz-flowgraph/f00.dot-expected.dot--0--2--2   src/test/run-make/graphviz-flowgraph/f08.rs--0--2--2   src/test/run-make/graphviz-flowgraph/f05.rs--0--2--2   src/test/run-make/graphviz-flowgraph/f04.rs--0--2--2   src/test/run-make/graphviz-flowgraph/f10.rs--0--2--2   src/test/run-make/graphviz-flowgraph/f19.rs--0--2--2,Perfective,
9581,6f49aadabbd2d487f290fe393c7a69f77ebda9c6,Disable destination propagation on all mir-opt-levels, ,15,101,   .../mir-opt/issue_73223.main.PreCodegen.32bit.diff--14--8--22   .../mir-opt/issue_73223.main.PreCodegen.64bit.diff--14--8--22   .../issue_59352.num_to_digit.PreCodegen.after.mir--9--8--17   .../inline/inline_generator.main.Inline.diff--5--4--9   ...ks.is_line_doc_comment_2.DeduplicateBlocks.diff--4--4--8   .../mir-opt/inline/inline_diverging.h.Inline.diff--2--2--4   .../inline_closure_captures.foo.Inline.after.mir--2--1--3   compiler/rustc_mir/src/transform/dest_prop.rs--2--0--2   src/test/mir-opt/dest-prop/branch.rs--1--1--2   src/test/mir-opt/dest-prop/copy_propagation_arg.rs--1--1--2   src/test/mir-opt/dest-prop/cycle.rs--1--1--2   src/test/mir-opt/dest-prop/simple.rs--1--1--2   src/test/mir-opt/dest-prop/union.rs--1--1--2   .../lower_intrinsics.f_u64.PreCodegen.before.mir--1--1--2   .../mir-opt/simplify_locals.c.SimplifyLocals.diff--1--1--2,Adaptive,
66954,6404143d8a36c9076cac89b3c386051b130f54c1,Preserve inherited mode flags., ,1,3,   src/bootstrap/job.rs--2--1--3,Perfective,
56947,f06cb340220d2f594d4532c409183e78ea30bdfe,Replace TargetKind with simple String, ,1,47,   src/bin/cargo-fmt.rs--3--44--47,Perfective,
23996,a0eab7d91330de1d18caecdde558369c77f642f7,Update actions-rs/cargo, ,1,2,   .github/workflows/main.yml--1--1--2,Perfective,
6026,ed0557ec2ce2efcba33df8f879141fe0c4cbc923,Remove `is_unicast_site_local`, ,2,53,   library/std/src/net/ip.rs--0--41--41   library/std/src/net/ip/tests.rs--1--11--12,Perfective,
96749,1e8982bdb26208d9d9ed4cdcbcd21cc9ef35bd46,std: replace str::each_split* with an iterator, ,19,69,   src/libstd/str.rs--10--21--31   src/libstd/path.rs--2--2--4   src/compiletest/header.rs--1--1--2   src/compiletest/runtest.rs--1--1--2   src/libextra/fileinput.rs--1--1--2   src/libextra/getopts.rs--1--1--2   src/libextra/net_ip.rs--1--1--2   src/libextra/net_url.rs--1--1--2   src/libextra/num/rational.rs--1--1--2   src/libextra/terminfo/parser/compiled.rs--1--1--2   src/libextra/terminfo/searcher.rs--1--1--2   src/librustc/driver/driver.rs--1--1--2   src/librustc/metadata/cstore.rs--1--1--2   src/librusti/rusti.rc--1--1--2   src/librustpkg/path_util.rs--1--1--2   src/librustpkg/rustpkg.rc--1--1--2   src/libstd/os.rs--1--1--2   src/libsyntax/parse/parser.rs--1--1--2   src/test/bench/sudoku.rs--1--1--2,Perfective,
52831,58217edd2fbb9f51b5838c6da97ef8dc4bfdef33,run-pass/attr-stmt-expr: expand test cases, ,2,29,   .../proc-macro/auxiliary/attr-stmt-expr.rs--15--0--15   src/test/run-pass-fulldeps/proc-macro/attr-stmt-expr.rs--13--1--14,Perfective,
26857,187983e9919fd181fba69c1d8a71a68aa45ac77b,update test stderr, ,26,58,   tests/ui/checked_unwrap/complex_conditionals.stderr--2--2--4   tests/ui/checked_unwrap/simple_conditionals.stderr--2--2--4   tests/ui/infinite_iter.stderr--2--2--4   tests/ui/borrow_box.stderr--1--1--2   tests/ui/bytecount.stderr--1--1--2   tests/ui/cstring.stderr--1--1--2   tests/ui/default_lint.stderr--1--1--2   tests/ui/fallible_impl_from.stderr--1--1--2   tests/ui/get_unwrap.stderr--1--1--2   tests/ui/identity_conversion.stderr--1--1--2   tests/ui/inefficient_to_string.stderr--1--1--2   tests/ui/inherent_to_string.stderr--1--1--2   tests/ui/issue_2356.stderr--1--1--2   tests/ui/lint_without_lint_pass.stderr--1--1--2   tests/ui/mem_discriminant.stderr--1--1--2   tests/ui/mem_discriminant_unfixable.stderr--1--1--2   tests/ui/option_and_then_some.stderr--1--1--2   tests/ui/outer_expn_data.stderr--1--1--2   tests/ui/replace_consts.stderr--1--1--2   tests/ui/try_err.stderr--1--1--2   tests/ui/type_repetition_in_bounds.stderr--1--1--2   tests/ui/unnecessary_ref.stderr--1--1--2   tests/ui/unneeded_wildcard_pattern.stderr--1--1--2   tests/ui/unused_unit.stderr--1--1--2   tests/ui/useless_asref.stderr--1--1--2   tests/ui/wildcard_enum_match_arm.stderr--1--1--2,Perfective,
16083,b01694e0a2f36cee14e5844e1b4abae965dee627,Returns values up to 2*usize by value, ,2,17,   compiler/rustc_target/src/abi/call/mod.rs--0--12--12   compiler/rustc_middle/src/ty/layout.rs--3--2--5,Adaptive,
7341,0aa28446f8422ed03845b00074fd49eabc28c695,rustdoc: Remove unnecessary `StripItem` wrapper, ,3,25,   src/librustdoc/fold.rs--4--11--15   src/librustdoc/passes/stripper.rs--3--3--6   src/librustdoc/passes/strip_hidden.rs--2--2--4,Perfective,
106268,c1b075d042cabb90f804f3d73e6a4f4b512aa697,Remove experimental GC code,It's been sitting unused long enough to have bitrotted completely.   ,24,116,   src/rt/rust_gc.cpp--0--39--39   src/comp/middle/gc.rs--0--35--35   src/comp/middle/trans/base.rs--2--3--5   src/libcore/sys.rs--0--3--3   src/rt/rust_gc.h--0--3--3   src/rt/rust_upcall.cpp--1--2--3   src/comp/back/upcall.rs--1--1--2   src/comp/middle/trans/closure.rs--1--1--2   src/comp/middle/trans/common.rs--1--1--2   src/rt/rust_builtin.cpp--0--2--2   src/rt/rust_task.cpp--1--1--2   src/rt/rust_task.h--1--1--2   src/test/run-fail/morestack2.rs--1--1--2   src/test/run-pass/bind-native.rs--1--1--2   src/test/run-pass/binops.rs--1--1--2   src/test/run-pass/native-dupe.rs--1--1--2   mk/rt.mk--0--1--1   src/comp/driver/driver.rs--0--1--1   src/comp/driver/session.rs--0--1--1   src/comp/rustc.rc--0--1--1   src/rt/rust_cc.cpp--0--1--1   src/rt/rustrt.def.in--0--1--1   src/rustdoc/astsrv.rs--0--1--1   src/test/run-pass/morestack6.rs--0--1--1,Perfective,
46040,06b8c3ee5b52dc849259655578afca70cb32dda3,Rely only on base alignment and offset for computing field alignment,Fix #54028   ,2,15,   src/test/codegen/align-struct.rs--10--0--10   src/librustc_codegen_llvm/mir/place.rs--1--4--5,Corrective,
91489,d45dd2754e58d12ee5a9cabc4bb19ac8db18cecc,regionck -- rewrite in terms of mem_categorization  compute upvar borrow kinds, ,1,26,   src/librustc/middle/typeck/check/regionck.rs--14--12--26,Perfective,
22052,ff97db1e54dde5418f55f1c727e1c37257c4a6ab,Apply review feedback, ,10,97,   src/librustc_builtin_macros/asm.rs--19--17--36   src/librustc_target/asm/x86.rs--10--8--18   src/test/ui/asm/parse-error.stderr--7--3--10   src/librustc_target/asm/aarch64.rs--4--4--8   src/librustc_target/asm/arm.rs--4--2--6   src/librustc_target/asm/riscv.rs--3--3--6   src/librustc_passes/intrinsicck.rs--4--1--5   src/test/ui/asm/type-check-3.stderr--2--2--4   src/librustc_target/asm/mod.rs--1--1--2   src/test/ui/asm/parse-error.rs--1--1--2,Perfective,
64851,3aa6f189d43add0dc937facbd7dab2a7ccace23b,add unstable book to the bookshelf, ,1,4,   src/doc/index.md--3--1--4,Perfective,
45017,37393576eced8680065d2ae629a6e96912a782f9,Stabilize impl_header_lifetime_elision in 2015,It's already stable in 2018; this finishes the stabilization.   ,27,128,   .../feature-gate-in_band_lifetimes.stderr--11--11--22   ...te-impl_header_lifetime_elision-with-in_band.rs--0--17--17   .../feature-gate-impl_header_lifetime_elision.rs--0--13--13   ...mpl_header_lifetime_elision-with-in_band.stderr--0--10--10   ...eature-gate-impl_header_lifetime_elision.stderr--0--10--10   src/librustc/hir/lowering.rs--3--6--9   src/libsyntax/feature_gate.rs--2--3--5   .../impl-header-lifetime-elision/dyn-trait.stderr--2--2--4   .../impl-header-lifetime-elision/assoc-type.stderr--1--2--3   src/libcore/lib.rs--1--1--2   src/libcore/tests/lib.rs--1--1--2   src/librustc/lib.rs--1--1--2   src/librustc_data_structures/lib.rs--1--1--2   src/librustc_mir/lib.rs--1--1--2   .../feature-gate-in_band_lifetimes.rs--0--2--2   .../ui/impl-header-lifetime-elision/assoc-type.rs--0--2--2   .../ui/impl-header-lifetime-elision/dyn-trait.rs--0--2--2   .../explicit-and-elided-same-header.rs--0--2--2   .../ui/impl-header-lifetime-elision/path-elided.rs--0--2--2   .../path-elided.stderr--1--1--2   .../path-underscore.rs--0--2--2   .../impl-header-lifetime-elision/ref-underscore.rs--0--2--2   .../impl-header-lifetime-elision/trait-elided.rs--0--2--2   .../trait-elided.stderr--1--1--2   .../trait-underscore.rs--0--2--2   src/test/ui/nll/issue-52742.stderr--1--1--2   src/test/ui/nll/issue-52742.rs--0--1--1,Perfective,
69386,5683bf9e2020506003d6528482e0673399f61c7d,don't update the src/jemalloc submodule is jemalloc has been disabled,i.e. via the --disable-jemalloc configure flag   ,1,9,   src/bootstrap/lib.rs--8--1--9,Corrective,
78222,aa469a994cced0db89fc889322430d41fa6f40eb,add final test case  correct one of the others (both versions produced same result), ,1,22,   .../transitive_relation.rs--18--4--22,Perfective,
86956,c1db2fbec854a929546da4e224b31cc4724c9899,Update AUTHORS.txt for 0.12.0, ,1,60,   AUTHORS.txt--60--0--60,Perfective,
43029,ddd8b416a6bfa009db997e4e8724fa0069a850dc,Build manifest tool on mingw-check builder,This builder is not really the correct place to put this  but it  definitely has the time budget and checking this tool builds on just one  platform is more than sufficient.   ,1,3,   src/ci/docker/mingw-check/Dockerfile--2--1--3,Perfective,
56633,d68d1278752d67bd8dc98958713daabf716db549,Stabilize abi_sysv64, ,5,34,   src/test/compile-fail/feature-gate-abi-sysv64.rs--0--19--19   src/libsyntax/feature_gate.rs--4--8--12   src/test/codegen/abi-sysv64.rs--0--1--1   src/test/run-pass/abi-sysv64-arg-passing.rs--0--1--1   src/test/run-pass/abi-sysv64-register-usage.rs--0--1--1,Perfective,
3175,eb913664333036b185bd5d5f3df3ce270864aaa6,"Put back ""auto-collapse-implementors"" setting", ,2,6,   src/librustdoc/html/static/js/main.js--5--0--5   src/librustdoc/html/render/mod.rs--1--0--1,Perfective,
50719,6ff67ee0d7b4f9f962809a82d9078f353e200818,remove debug_assert in padding_needed_for, ,1,3,   src/libcore/alloc.rs--0--3--3,Perfective,
42780,91bfbb968751ae8441ebccefed7cd63ca00b43dd,Use compiletest timestamp to check if the tests should be rerun., ,1,28,   src/tools/compiletest/src/main.rs--18--10--28,Adaptive,
61778,38b468832f34d0f9bfcaa9e3c47a246546f52b0b,Update Cargo, ,2,58,   src/Cargo.lock--32--24--56   src/tools/cargo--1--1--2,Perfective,
90531,dcb01ff573b5f4404d2e4ef6700dca63e91f0eb4,middle: typeck: check: remove dead code, ,1,33,   src/librustc/middle/typeck/check/mod.rs--0--33--33,Perfective,
62230,c29f5ea83b7184b575bb23abac4b47553f807b54,Commit updated example stderr, ,2,31,   clippy_tests/examples/borrow_box.stderr--12--17--29   clippy_lints/src/types.rs--1--1--2,Perfective,
55890,f86f6dcd9c33fa7b2b1bcda29edbed4d4fd9cba2,Format some macros 2.0 macro defs,cc #1539   ,4,63,   src/macros.rs--56--1--57   src/visitor.rs--2--1--3   src/lib.rs--1--1--2   src/config.rs--1--0--1,Perfective,
11223,1373f988fa662aa43a22a9b13300aabe9ce2213b,Test cases for handling mutable references, ,8,97,   .../2229_closure_analysis/run_pass/mut_ref.rs--22--0--22   .../diagnostics/mut_ref.stderr--20--0--20   .../2229_closure_analysis/diagnostics/mut_ref.rs--16--0--16   .../diagnostics/cant-mutate-imm-borrow.stderr--12--0--12   .../run_pass/mut_ref_struct_mem.rs--9--0--9   .../diagnostics/cant-mutate-imm-borrow.rs--8--0--8   .../2229_closure_analysis/run_pass/mut_ref.stderr--5--0--5   .../run_pass/mut_ref_struct_mem.stderr--5--0--5,Perfective,
18317,18ad5a594ec4ee039897eb03d90dfeb117b4c6d6,Add a regression test for issue-72793, ,1,24,   src/test/ui/type-alias-impl-trait/issue-72793.rs--24--0--24,Perfective,
18642,3b6e4a84f92995f75cd2ab26b9b15eb508f85336,Move #[doc(alias)] attribute checks in rustc, ,5,60,   src/librustdoc/visit_ast.rs--1--21--22   src/librustc_passes/check_attr.rs--11--1--12   src/test/ui/check-doc-alias-attr-location.stderr--12--0--12   src/test/ui/check-doc-alias-attr-location.rs--9--0--9   .../check-doc-alias-attr-location.stderr--2--3--5,Perfective,
80686,683da9c3840a622601818488941161dc7d53652e,doc: unwrap is discouraged  so use Some, ,1,53,   src/libcore/iter.rs--26--27--53,Perfective,
11192,7e3217845dc5dea331b26efb2bf51b60afae2082,Balance sidebar `Deref` cycle check with main content,"The `Deref` cycle checks added as part of #80653 were ""unbalanced"" in the sense  that the main content code path checks for cycles _before_ descending  while the  sidebar checks _after_. Checking _before_ is correct  so this changes the  sidebar path to match the main content path.   ",2,33,   src/librustdoc/html/render/mod.rs--11--7--18   src/test/rustdoc-ui/deref-generic.rs--15--0--15,Corrective,
84784,dc97247d112dc77bd709417d6bc870bbcfde9b54,Make call notation use autoderef. Fixes #18742., ,9,56,   src/librustc_typeck/check/callee.rs--21--0--21   src/librustc_typeck/check/mod.rs--1--15--16   .../run-pass/unboxed-closures-call-fn-autoderef.rs--4--0--4   ...unboxed-closures-call-sugar-object-autoderef.rs--4--0--4   .../unboxed-closures-call-sugar-autoderef.rs--3--0--3   src/librustc/middle/cfg/construct.rs--1--1--2   src/librustc/middle/liveness.rs--1--1--2   src/librustc_trans/trans/callee.rs--1--1--2   src/test/compile-fail/issue-19692.rs--1--1--2,Adaptive,
96458,cbad1da3db7eda0911e988fb6255ac5c16961aa7,vec: remove eachi,replaced by the `enumerate` method from std::iterator   ,6,49,   src/libstd/vec.rs--0--30--30   src/test/bench/shootout-chameneos-redux.rs--5--5--10   src/librustc/middle/trans/cabi.rs--1--2--3   src/compiletest/runtest.rs--1--1--2   src/librustc/middle/trans/closure.rs--1--1--2   src/librustc/middle/trans/glue.rs--1--1--2,Perfective,
5844,c8a8a23a31e9e4831ccab4efbc085852b7a86fa5,Do not emit invalid suggestions on multiple mutable borrow errors, ,4,56,   .../src/borrow_check/diagnostics/explain_borrow.rs--15--7--22   src/test/ui/borrowck/issue-85581.stderr--14--0--14   src/test/ui/borrowck/issue-85581.rs--13--0--13   .../borrow_check/diagnostics/conflict_errors.rs--7--0--7,Corrective,
95591,304a5f07867cff4cb6a558d320efafd7c6da56c3,Have vtable resolution check for supertrait bounds. Closes #4055., ,1,17,   src/librustc/middle/typeck/check/vtable.rs--17--0--17,Corrective,
82686,8a7b6b3ee6a85aa60a1733727a4028a690744fdf,Collapse nested matches in method_context., ,1,38,   src/librustc_lint/builtin.rs--17--21--38,Perfective,
10035,e56364fa995ce0e8e607fabdd4b959d3da848e2c,Use Oxform comma,Co-authored-by: Nathan Nguyen <43092380+nhwn@users.noreply.github.com> ,1,2,   src/doc/unstable-book/src/language-features/doc-spotlight.md--1--1--2,Perfective,
29006,f8ecf04f4b60f1004b9ba4092747f16d290dfff7,accept union inside enum if not followed by identifier, ,2,18,   src/test/ui/enum/union-in-enum.rs--13--0--13   src/librustc_parse/parser/item.rs--3--2--5,Adaptive,
28292,8e74f630546676e0a40e8f5debac531a8e44912a,review comments: move error reporting to their own methods, ,1,41,   src/librustc_typeck/astconv.rs--22--19--41,Perfective,
76030,a69bcd885b5cf18ba05e0f81c091d3132534115c,Ensure two `SystemTime`s are equal when nanos add to exactly 1B,Currently if you add a duration which should lead to 0 nanos and 1  additional second  we end up with no additional seconds  and 1000000000  nanos.   ,2,6,   src/libstd/time/mod.rs--4--0--4   src/libstd/sys/unix/time.rs--1--1--2,Perfective,
95911,83fb3d224a40022d6083b42f4296731a9edfdc70,extra: add metrics ratchet to test driver., ,2,53,   src/libextra/test.rs--40--11--51   src/libextra/json.rs--1--1--2,Perfective,
12676,74bd2eae3335e74663d25a6a2142bc904007a499,impl Default for LangString  replacing all_false by default, ,2,50,   src/librustdoc/html/markdown/tests.rs--13--22--35   src/librustdoc/html/markdown.rs--8--7--15,Corrective,
1293,361c978fbd41535f3c7fd0b2f956d4e1ee4aeefd,Added docs to internal_macro const, ,1,3,   library/core/src/internal_macros.rs--3--0--3,Perfective,
107382,c758e11fd37f54ddfa9a628466fde7c92c027947,Install and snapshot cargo by default., ,2,4,   src/etc/snapshot.py--3--0--3   mk/install.mk--1--0--1,Perfective,
57320,955c054ab15dcaef4931e732f7a9d77df8797baf,Fix primitive types not showing up, ,1,38,   src/librustdoc/html/static/main.js--19--19--38,Corrective,
112107,d64b72f6ec26ddac775046191dca2d3659d6fb87,More statement-to-expression edits, ,1,20,   doc/rust.texi--10--10--20,Perfective,
65341,d92085fd0e113d4e4cb7f6c204008541760e39cc,properly extract the inner type in a drop impl, ,2,35,   tests/run-pass/box_box_trait.rs--29--0--29   src/terminator/drop.rs--4--2--6,Adaptive,
94515,62a343452978f570454be38556839049aef7792b,stop treating char as an integer type,Closes #7609   ,45,258,   src/libstd/char.rs--20--9--29   src/librustc/middle/ty.rs--14--13--27   src/libstd/str.rs--5--19--24   src/librustc/middle/typeck/check/mod.rs--11--4--15   src/libstd/str/ascii.rs--7--6--13   src/libstd/io.rs--8--4--12   src/libsyntax/parse/lexer.rs--7--5--12   src/librustc/middle/check_const.rs--4--5--9   src/test/run-pass/binops.rs--0--9--9   src/librustc/middle/typeck/infer/combine.rs--3--4--7   src/libstd/rt/io/net/ip.rs--3--4--7   src/libextra/json.rs--3--3--6   src/libextra/terminfo/parm.rs--3--3--6   src/libextra/url.rs--3--3--6   src/libsyntax/ext/quote.rs--5--1--6   src/libstd/rand.rs--1--4--5   src/libsyntax/parse/token.rs--3--2--5   src/libstd/unicode.rs--0--5--5   src/libsyntax/ext/bytes.rs--2--2--4   src/libextra/ebml.rs--1--2--3   src/librustc/util/ppaux.rs--1--2--3   src/librustc/middle/typeck/astconv.rs--3--0--3   src/librustc/middle/typeck/coherence.rs--1--2--3   src/libsyntax/print/pprust.rs--1--2--3   src/test/run-pass/cast.rs--1--2--3   src/librustc/metadata/tyencode.rs--1--1--2   src/librustc/middle/typeck/check/method.rs--1--1--2   src/librustc/middle/typeck/check/_match.rs--1--1--2   src/librustc/middle/trans/type_of.rs--2--0--2   src/librustc/middle/trans/reflect.rs--1--1--2   src/libsyntax/ast.rs--1--1--2   src/libsyntax/ast_util.rs--1--1--2   src/librustc/middle/trans/debuginfo.rs--1--1--2   src/libsyntax/ext/ifmt.rs--1--1--2   src/libsyntax/parse/parser.rs--1--1--2   src/librustc/middle/resolve.rs--1--1--2   src/test/run-pass/shift.rs--1--1--2   src/test/run-pass/utf8_chars.rs--1--1--2   src/librustc/middle/const_eval.rs--1--0--1   src/librustc/middle/lint.rs--0--1--1   src/librustc/middle/trans/type_.rs--0--1--1   src/librustc/middle/trans/expr.rs--1--0--1   src/librustc/middle/trans/consts.rs--1--0--1   src/librustc/middle/trans/base.rs--1--0--1   src/etc/unicode.py--1--0--1,Perfective,
101046,d52f988dbb8c147d310926434b7ed2415a4a8719,Make moves explicit in rustdoc, ,9,74,   src/rustdoc/fold.rs--12--12--24   src/rustdoc/markdown_pass.rs--10--9--19   src/rustdoc/markdown_writer.rs--8--7--15   src/rustdoc/astsrv.rs--3--3--6   src/rustdoc/attr_pass.rs--1--1--2   src/rustdoc/page_pass.rs--1--1--2   src/rustdoc/rustdoc.rs--1--1--2   src/rustdoc/sort_pass.rs--1--1--2   src/rustdoc/text_pass.rs--1--1--2,Perfective,
43077,fd9f5df36ca934405183ee8e7ba96b46b1f645f2,Add comment and rename, ,1,16,   clippy_lints/src/redundant_clone.rs--11--5--16,Perfective,
72382,70611bf9ac9f8103aa77ab1f91adb51327f681e4,Always skip children when using Plain write mode,"Outputting child module contents in the ""Plain"" write mode does not make  sense  since there is no way to differentiate code that came from a  child module from that which came from the parent file.   ",1,5,   src/lib.rs--4--1--5,Perfective,
108660,aabff480c92d7c72f8a8ff6652d328e6624585d5,rt: Factor out stack walking into rust_abi.cpp, ,3,79,   src/rt/rust_gc.cpp--1--31--32   src/rt/rust_abi.cpp--25--0--25   src/rt/rust_abi.h--22--0--22,Perfective,
86373,d317039b222f0c73f80434f8d248f8adb19e3fdd,Add regression test for #18661, ,1,28,   src/test/run-pass/issue-18661.rs--28--0--28,Perfective,
28803,054458b48db87ce767d7cc3d2dd86846ada3e3da,make visitor uses more robust, ,2,12,   src/librustc_resolve/late.rs--4--4--8   src/librustc/hir/lowering/item.rs--2--2--4,Perfective,
107584,493492910f480e84cae53587683b8a4d45508af5,adopt -H-all convention, ,1,2,   Makefile.in--1--1--2,Perfective,
110929,391348ec86ba40cfc05eb7a23d3dd1e58013f250,Consistify ast::local., ,12,124,   src/comp/front/parser.rs--15--12--27   src/comp/middle/trans.rs--10--12--22   src/comp/middle/typeck.rs--10--9--19   src/comp/middle/resolve.rs--7--7--14   src/comp/middle/tstate/states.rs--5--5--10   src/comp/middle/tstate/pre_post_conditions.rs--5--4--9   src/comp/pretty/pprust.rs--3--4--7   src/comp/front/ast.rs--2--2--4   src/comp/middle/ty.rs--2--2--4   src/comp/util/common.rs--2--2--4   src/comp/middle/visit.rs--1--1--2   src/comp/middle/walk.rs--1--1--2,Perfective,
10901,ac5e9c8d2691da5a3872a8eec97ce694193c1e5c,Fix let_underscore_drop implements Drop logic,This fixes false positives and false negatives.   ,2,21,   clippy_lints/src/let_underscore.rs--2--11--13   tests/ui/let_underscore_drop.rs--8--0--8,Corrective,
44378,affddf68c623390aa5566dad6357892d9e0ae278,Make `ui/issues/issue-17263.rs` robust w.r.t. NLL., ,3,28,   src/test/ui/issues/issue-17263.rs--14--8--22   src/test/ui/issues/issue-17263.nll.stderr--2--2--4   .../{issue-17263.stderr=>issue-17263.ast.stderr}--1--1--2,Perfective,
66178,291c84aad48d09e31e84045c1ffccf82e7c2d443,Un-remove E0001  put a notice on it instead, ,2,26,   src/librustc_const_eval/diagnostics.rs--22--0--22   .../feature-gate-rustc-diagnostic-macros.rs--2--2--4,Perfective,
85444,b60de4bfc2cf45ebe16b9b5b768f0aad54211625,Emit warning when lifetime names are shadowed.,This is not technically a [breaking-change]  but it will be soon  so  you should update your code. Typically  shadowing is accidental  and  the shadowing lifetime can simply be removed. This frequently occurs  in constructor patterns:    ```rust  // Old:  impl<'a> SomeStruct<'a> { fn new<'a>(..) -> SomeStruct<'a> { ... } }    // Should be:  impl<'a> SomeStruct<'a> { fn new(..) -> SomeStruct<'a> { ... } }  ```    Otherwise  you should rename the inner lifetime to something  else. Note though that lifetime elision frequently applies:    ```rust  // Old  impl<'a> SomeStruct<'a> {      fn get<'a>(x: &'a self) -> &'a T { &self.field }  }    // Should be:  impl<'a> SomeStruct<'a> {      fn get(x: &self) -> &T { &self.field }  }  ``   ,2,37,   src/librustc/middle/resolve_lifetime.rs--19--10--29   src/test/compile-fail/shadowed-lifetime.rs--8--0--8,Adaptive,
96326,87ecfb74357b669308a6e337ebc766af8a03b554,converted TCP interface to newtype structs, ,1,33,   src/libstd/rt/io/net/tcp.rs--9--24--33,Perfective,
110598,432e5e9f7f0704a6a90071b5ac3ae72fde3d2b1e,Allow dereferencing of single-variant  single-argument tag values,(Using the * operator.)    This makes tags more useful as nominal 'newtype' types  since you no  longer have to copy out their contents (or construct a cumbersome  boilerplate alt) to access them.    I could have gone with a scheme where you could dereference individual  arguments of an n-ary variant with ._0  ._1  etc  but opted not to   since we plan to move to a system where all variants are unary (or  I  guess  nullary).   ,4,73,   src/comp/middle/trans.rs--27--19--46   src/comp/middle/typeck.rs--13--4--17   src/comp/middle/alias.rs--2--3--5   src/comp/middle/ty.rs--4--1--5,Perfective,
13245,96ee060529b507c10d14015de42becbd9ff0f639,Preserve polarity on negative non-trait impl, ,1,19,   src/items.rs--15--4--19,Perfective,
102355,4b1d83ca6494d10cb1ffaf50032e0a2d833ad635,fix deprecated-mode lint warning to consider dtors, ,2,26,   src/libcore/task.rs--12--12--24   src/rustc/middle/ty.rs--1--1--2,Corrective,
48237,bd66cbb806ee2a4d288d2e22626dff39ee9cc336,Remove obsolete tests in tidy,These have been replaced by more reliable checks in the compiler itself.   ,1,35,   src/tools/tidy/src/features.rs--3--32--35,Perfective,
103211,aa7b3cc9297d734fd60d0dac756187852931b5a9,Fix some version numbers., ,12,64,   src/cargo/cargo.rc--5--5--10   src/rustdoc/rustdoc.rc--5--5--10   src/rustc/driver/rustc.rs--4--4--8   src/rustc/rustc.rc--4--4--8   src/fuzzer/fuzzer.rc--3--3--6   src/libsyntax/syntax.rc--3--3--6   src/compiletest/compiletest.rc--2--2--4   src/libstd/std.rc--2--2--4   src/etc/pkg/rust.iss--1--1--2   src/libcore/core.rc--1--1--2   src/libcore/core.rs--1--1--2   src/test/run-pass/use.rs--1--1--2,Corrective,
49987,d748dc5db04f8287510984caa3ecb6465836ecc2,extract `query_result_substitution` helper, ,1,28,   src/librustc/infer/canonical/query_result.rs--21--7--28,Adaptive,
29456,a5b8a3088a61a564fb2e4de97d4d26e321eb66bd,Simplify fields of `MemCategorizationContext`, ,4,45,   src/librustc/middle/mem_categorization.rs--9--21--30   src/librustc/middle/expr_use_visitor.rs--3--8--11   src/librustc_typeck/check/regionck.rs--1--1--2   src/librustc_typeck/check/upvar.rs--1--1--2,Perfective,
67049,ecf6f1b96aae615698ce3283750f442a18130138,Update items section in reference,Make clear that items must be definitions  and add missing extern block ,1,9,   src/doc/reference.md--5--4--9,Perfective,
58177,b22643a57231e850f255342786adbd104ab09732,0.2.10 + cargo update, ,2,28,   Cargo.lock--13--13--26   Cargo.toml--1--1--2,Perfective,
25658,43e760ce1dfcf92328d81fcf761f23bcdc18c0cd,Update git2 to 0.12, ,1,2,   Cargo.toml--1--1--2,Perfective,
29624,6440b9425384d2f8f11c4fe281fe99f79b92afb6,make comment compile, ,1,3,   src/libcore/panicking.rs--1--2--3,Perfective,
29424,eda2d416f6a6e45bdfa8552d34fa249bf0880b37,Removed FIXME comment, ,1,2,   src/librustc/mir/interpret/error.rs--0--2--2,Perfective,
112443,400df70643820012edfdf4811c05a4ce72b82bfe,Improve depfile generation for rustc., ,1,7,   src/Makefile--5--2--7,Perfective,
49934,63ab0cba7d36c4768bc64a27382fc56ca3a390ce,Inline `abi::Size::bytes()`,This save an additional 6 seconds on the test program.   ,1,1,   src/librustc_target/abi/mod.rs--1--0--1,Perfective,
46017,90701935b352a7f0ed2286d3b257e7de4408cf20,Update rustfmt and RLS, ,4,40,   src/Cargo.lock--14--20--34   src/librustc_save_analysis/Cargo.toml--1--1--2   src/tools/rls--1--1--2   src/tools/rustfmt--1--1--2,Perfective,
46544,f116baeed7072d7126c4cf844dbd02fc4e49080f,Add a test for match flattening, ,2,44,   tests/target/match-flattening.rs--23--0--23   tests/source/match-flattening.rs--21--0--21,Perfective,
104288,d993df74c39d7c0938194485d7c41ba94ed419ec,Teach parser and related things to understand const kind bounds., ,12,38,   src/test/run-pass/const-bound.rs--13--0--13   src/librustsyntax/parse/parser.rs--5--2--7   src/rustc/middle/typeck/check/method.rs--3--1--4   src/rustc/middle/typeck/check/vtable.rs--3--1--4   src/librustsyntax/fold.rs--1--1--2   src/librustsyntax/visit.rs--1--1--2   src/librustsyntax/ast.rs--1--0--1   src/librustsyntax/print/pprust.rs--1--0--1   src/rustc/metadata/tydecode.rs--1--0--1   src/rustc/metadata/tyencode.rs--1--0--1   src/rustc/middle/ty.rs--1--0--1   src/rustc/middle/typeck/collect.rs--1--0--1,Adaptive,
34648,69daf844daac2f8c75ae0db662c584f05dd9838e,adding throw_ and err_ macros for InterpError, ,21,166,   src/librustc_mir/interpret/memory.rs--15--15--30   src/librustc_mir/interpret/terminator.rs--12--13--25   src/librustc/mir/interpret/mod.rs--16--5--21   src/librustc/mir/interpret/interp_error.rs--0--14--14   src/librustc_mir/interpret/eval_context.rs--7--7--14   src/librustc/mir/interpret/value.rs--4--5--9   src/librustc_mir/interpret/operator.rs--4--5--9   src/librustc_mir/interpret/operand.rs--3--4--7   src/librustc/mir/interpret/allocation.rs--2--3--5   src/librustc/mir/interpret/pointer.rs--2--3--5   src/librustc_mir/const_eval.rs--1--2--3   src/librustc_mir/interpret/cast.rs--1--2--3   src/librustc_mir/interpret/intrinsics.rs--1--2--3   src/librustc_mir/interpret/place.rs--1--2--3   src/librustc_mir/interpret/validity.rs--1--2--3   src/librustc/mir/interpret/error.rs--1--1--2   src/librustc_mir/interpret/intern.rs--1--1--2   src/librustc_mir/interpret/machine.rs--1--1--2   src/librustc_mir/interpret/step.rs--1--1--2   src/librustc_mir/interpret/traits.rs--1--1--2   src/librustc_mir/transform/const_prop.rs--1--1--2,Adaptive,
12325,d116f48788645f2b5ff5cd409f4ac8ba84f906ad,Add fallible box allocator APIs (`Box::try_new_*_in()`), ,1,46,   library/alloc/src/boxed.rs--45--1--46,Adaptive,
15270,df95dcebf5f98cefdc60c9b9d818fb285ac07d5b,Add missing `mut`.,Co-authored-by: David Tolnay <dtolnay@gmail.com> ,1,2,   library/core/src/pin.rs--1--1--2,Corrective,
7556,c97d8992ae0ffc6f773fedcfe419bc260a644ea6,spanview debug output caused ICE when a function had no body, ,1,19,   compiler/rustc_mir/src/util/spanview.rs--10--9--19,Corrective,
52183,43baa2c0419709c13f7764212596f94d9900ba36,Add as_nanos function to duration, ,1,16,   src/libcore/time.rs--16--0--16,Adaptive,
12433,cdad0c80ef93dc64dd9ab8ec2410ec08f60b4120,Also show the displayed version of IntVar and FloatVar,Co-authored-by: Joshua Nelson <joshua@yottadb.com> ,1,4,   compiler/rustc_middle/src/ty/sty.rs--2--2--4,Perfective,
84355,6fc0ac5ee3611a094e9462d9b54468bf1d59fa21,Ensure that the book is built after the doc/ directory.,Without this  rustbook was failing because it was expecting the  directory to exist. (Previously  rustbook was just silently failing to  install the CSS files due to this.)   ,1,2,   mk/docs.mk--1--1--2,Perfective,
13253,5bdd6409139193ad73d991cba0ee8354457fa99a,Fix several broken links in doc that used the wrong qualifier or Self::, ,5,32,   library/core/src/num/f32.rs--5--5--10   library/core/src/num/f64.rs--5--5--10   library/core/src/cell.rs--3--3--6   library/core/src/str/mod.rs--2--2--4   Cargo.lock--1--1--2,Corrective,
92016,8f4edf9bf889bbb1f7bfb5bac4d0c825d2d5374d,Update test run summary, ,2,28,   src/etc/check-summary.py--17--9--26   src/libextra/test.rs--1--1--2,Perfective,
69629,9daea5b6393af6706dd50a48d4bf8e6eeaff9860,Add a comment  remove Deref/DerefMut,The comment explains the `index-builder` pattern. We no longer need the  `Deref/DerefMut` relationship  and it seems nicer without it.   ,2,39,   src/librustc_metadata/index_builder.rs--25--9--34   src/librustc_metadata/encoder.rs--2--3--5,Perfective,
36118,b7fe2ca5e09b8edab393073198f8f55e1a78079f,Stabilize profile-guided optimization., ,14,67,   src/librustc/session/config.rs--11--11--22   .../cross-lang-lto-pgo-smoketest/Makefile--3--4--7   src/librustc/session/mod.rs--3--3--6   src/librustc/session/config/tests.rs--2--2--4   src/librustc_codegen_llvm/attributes.rs--2--2--4   src/librustc_codegen_ssa/back/write.rs--2--2--4   src/test/codegen/pgo-instrumentation.rs--2--2--4   src/test/run-make-fulldeps/pgo-use/Makefile--2--2--4   src/librustc_codegen_ssa/back/link.rs--1--1--2   src/librustc_codegen_ssa/back/symbol_export.rs--1--1--2   src/librustc_metadata/creader.rs--1--1--2   src/test/run-make-fulldeps/pgo-gen-lto/Makefile--1--1--2   .../pgo-gen-no-imp-symbols/Makefile--1--1--2   src/test/run-make-fulldeps/pgo-gen/Makefile--1--1--2,Perfective,
101998,2d690ae43f77a6c4e1f8ba10afd32926e2459e8e,"libstd: ""import"" -> ""use""", ,32,261,   src/libstd/net_ip.rs--17--19--36   src/libstd/uv_global_loop.rs--9--9--18   src/libstd/map.rs--8--8--16   src/libstd/net_tcp.rs--8--8--16   src/libstd/net_url.rs--7--8--15   src/libstd/test.rs--7--7--14   src/libstd/json.rs--5--8--13   src/libstd/uv_iotask.rs--6--6--12   src/libstd/arena.rs--4--5--9   src/libstd/getopts.rs--4--4--8   src/libstd/list.rs--4--4--8   src/libstd/smallintmap.rs--4--4--8   src/libstd/time.rs--4--4--8   src/libstd/timer.rs--4--4--8   src/libstd/fun_treemap.rs--3--3--6   src/libstd/net.rs--3--3--6   src/libstd/prettyprint.rs--3--3--6   src/libstd/treemap.rs--3--3--6   src/libstd/uv.rs--3--3--6   src/libstd/uv_ll.rs--3--3--6   src/libstd/arc.rs--2--3--5   src/libstd/tempfile.rs--2--3--5   src/libstd/deque.rs--2--2--4   src/libstd/ebml.rs--2--2--4   src/libstd/sort.rs--2--2--4   src/libstd/base64.rs--1--1--2   src/libstd/bitv.rs--1--1--2   src/libstd/comm.rs--1--1--2   src/libstd/dbg.rs--1--1--2   src/libstd/par.rs--1--1--2   src/libstd/sync.rs--1--1--2   src/libstd/term.rs--1--1--2,Perfective,
53648,01cc5b3e195bb01088fdd59638f0d8c6d0a78142,add intrinsics for portable packed simd vector reductions, ,6,52,   src/librustc_trans/intrinsic.rs--20--1--21   .../run-pass/simd-intrinsic-generic-reduction.rs--14--0--14   src/librustc_trans/builder.rs--7--0--7   src/rustllvm/RustWrapper.cpp--5--0--5   src/librustc_llvm/ffi.rs--4--0--4   src/librustc_typeck/check/intrinsic.rs--1--0--1,Adaptive,
7803,2a97c690bc56e7e20768d0ce632f0b719bf5ff37,Note array.into_iter() specifically in method probing, ,1,1,   compiler/rustc_typeck/src/check/method/probe.rs--1--0--1,Perfective,
54642,f45a474bd6c7ccfe35e7be5f341e3d04aa5d178e,rustc_trans: add abi::CastTarget::ChunkedPrefix, ,1,40,   src/librustc_trans/abi.rs--38--2--40,Adaptive,
8237,c7bc41f97aeef3c4f562c0fd2835acd6d6c2b5b0,add test, ,4,42,   src/test/ui/lint/lint-deref-nullptr.stderr--30--0--30   src/test/ui/lint/lint-deref-nullptr.rs--10--0--10   compiler/rustc_lint/src/builtin.rs--1--0--1   src/test/ui/cleanup-shortcircuit.rs--1--0--1,Perfective,
107022,08abf8d37fa549ebc67f80d80530f4aa43d716e4,Support explicit discriminant numbers on tag variants.,"Addresses issue #1393.    For now disallow disr. values unless all variants use nullary  contractors (i.e. ""enum-like"").    Disr. values are now encoded in the crate metadata  but only when it  will differ from the inferred value based on the order.   ",12,94,   src/test/run-pass/tag-variant-disr-val.rs--22--0--22   src/comp/syntax/parse/parser.rs--19--1--20   src/comp/middle/trans.rs--5--8--13   src/comp/metadata/decoder.rs--8--1--9   src/comp/metadata/encoder.rs--6--0--6   src/test/compile-fail/tag-variant-disr-dup.rs--5--0--5   .../compile-fail/tag-variant-disr-non-nullary.rs--5--0--5   src/comp/middle/trans_alt.rs--2--2--4   src/comp/middle/ty.rs--3--1--4   src/comp/metadata/common.rs--2--0--2   src/comp/syntax/ast.rs--1--1--2   src/comp/syntax/fold.rs--1--1--2,Adaptive,
40485,2edfb5ddeb1bb7b90a96a142f0abb22837c767f6,Update cranelift, ,1,20,   Cargo.lock--10--10--20,Perfective,
108282,034408c40a149033c7dd65149914ae311f998986,Convert DPRINT to LOG in rust_cc.cpp and add more logging, ,1,34,   src/rt/rust_cc.cpp--18--16--34,Perfective,
3297,c75aeaac0bb2af593b9819cfeae6d518617d48cc,Fix #88155, ,3,29,   .../rustc_mir/src/transform/check_consts/check.rs--12--10--22   .../ui/rfc-2632-const-trait-impl/issue-88155.rs--4--0--4   .../rfc-2632-const-trait-impl/issue-88155.stderr--3--0--3,Corrective,
9053,d6de60fb322828ec3b828278f05598f2db282142,Make bootstrap be more informative when one does `x.py test` on a beta checkout without other mods.,"To be clear  by default running `x.py test` on a checkout of the beta branch  currently fails  and with this change will continue to fail  because `x.py  tests` runs `x.py test src/tools/tidy` which tries to run `rustfmt` and that  will fail because the `rustfmt` binary is pinned to the current nighlty and we  do not attempt to distribute one for the beta builds.    This change gives a better error message than the current message  which is just  ""./x.py fmt is not supported on this channel"" without providing any hint about  what one might do about that problem.    (update: placated tidy.)   ",1,13,   src/bootstrap/test.rs--13--0--13,Perfective,
57779,faad4ea3b783a6a893797e7f027d35b68323f432,incr.comp.: Sort exported symbols list in order to achieve stable incr. comp. hash., ,1,13,   src/librustc_trans/back/symbol_export.rs--12--1--13,Adaptive,
74063,d908ff1759bf27a8a8a99f113a246b8abc61f425,Don't treat associated types specially in `def_privacy`,Improve trait privacy error message   ,2,20,   src/librustc_privacy/lib.rs--6--12--18   src/test/compile-fail/trait-not-accessible.rs--1--1--2,Perfective,
87896,77cdaf018c98c1a89afcf8382c3f3e90907f49a7,std: Refactor time module a bit,Put `Duration` in `time::duration`  where the two constants can  be called just `MAX` and `MIN`. Reexport from `time`.  This provides more room for the time module to expand.   ,2,45,   src/libstd/{time.rs=>time/duration.rs}--15--15--30   src/libstd/time/mod.rs--15--0--15,Perfective,
59435,a2b3e0889f7bfac7ae4962bc645b082805918a34,Fix nits and refactor creation of StorageLive blocks, ,1,32,   src/librustc_mir/transform/generator.rs--13--19--32,Perfective,
112339,5e0ef2a0f2593e48f47be60f44f2e3c9c6bfd3aa,Port tidy and remainder of pkg/dist rules., ,1,53,   Makefile.in--53--0--53,Adaptive,
70684,871f8dcab3ef4ed2a5e65f531afc7b6bd5762cba,don't run clippy on dependencies when running cargo clippy, ,1,60,   src/main.rs--33--27--60,Corrective,
80592,06b084fc9f327f350fcd7fdcda9e5f7ebb41a0ea,Markdown formatting for error explanations., ,2,9,   src/librustc_resolve/diagnostics.rs--5--0--5   src/librustc/diagnostics.rs--2--2--4,Perfective,
37081,b3480126d4acbd197836089257e9a4c751a78f5b,Incorporated suggested changes, ,5,13,   src/librustc/error_codes.rs--4--5--9   .../associated-types/associated-types-overridden-binding.stderr--1--0--1   .../ui/associated-types/associated-types-unconstrained.stderr--1--0--1   src/test/ui/issues/issue-12028.stderr--1--0--1   src/test/ui/question-mark-type-infer.stderr--1--0--1,Perfective,
3958,62b8a5ef04c1c63401392531663570e58683545b,Reduce verbosity of RUSTC_LOG, ,1,3,   compiler/rustc_driver/src/lib.rs--0--3--3,Perfective,
62641,dab14b4485b95ee36510bdae14c34f9afa81032f,Allow comments after where clause, ,3,30,   src/visitor.rs--10--1--11   tests/target/impl.rs--11--0--11   src/items.rs--6--2--8,Adaptive,
10928,dac354fc32bde196f1ee04b79cacfd6ea78683f0,"Revert ""Simplify unscheduling of drops after moves""",This reverts commit b766abc88f78f36193ddefb1079dbc832346b358.   ,5,64,   compiler/rustc_mir_build/src/build/scope.rs--14--8--22   .../issue_41110.main.ElaborateDrops.after.mir--13--2--15   .../issue_41110.test.ElaborateDrops.after.mir--8--7--15   .../box_expr.main.ElaborateDrops.before.mir--4--2--6   ..._drop_after_call.main.ElaborateDrops.before.mir--5--1--6,Corrective,
109221,db72bd90f5f1405308b823f71ea9b5633860979c,mk: Introduce CFG_DISABLE_OPTIMIZE_CXX, ,1,19,   mk/platform.mk--13--6--19,Adaptive,
85432,65616644af943c6de7879d16799e5fb488055fd5,Path types to associated types with form `T::A`,Closes #18433   ,12,113,   src/librustc_typeck/astconv.rs--27--4--31   src/librustc/middle/resolve.rs--13--5--18   src/test/run-pass/assoc-sugar-path.rs--18--0--18   src/test/compile-fail/assoc-path-2.rs--14--0--14   src/test/compile-fail/assoc-path-1.rs--11--0--11   src/librustc/middle/def.rs--9--1--10   src/librustc_typeck/check/mod.rs--3--0--3   src/librustc/middle/astencode.rs--2--0--2   src/librustc/middle/mem_categorization.rs--1--1--2   src/librustc_trans/trans/callee.rs--1--1--2   src/librustc_trans/save/mod.rs--1--0--1   src/test/compile-fail/assoc-eq-1.rs--0--1--1,Adaptive,
16491,7dec440340040ae377abcf22968a1d850a908f1b,Resolve https://github.com/rust-lang/rust/pull/76673#discussion_r494426303, ,2,5,   compiler/rustc_mir/src/transform/remove_unneeded_drops.rs--1--2--3   compiler/rustc_middle/src/mir/terminator/mod.rs--2--0--2,Corrective,
39113,45c82abf13385f22d10dccecd1e54b28cfbeb5cc,Distinguish depending on error level,Remove unnecessary comment   ,3,21,   src/librustc_errors/emitter.rs--14--3--17   src/test/ui/imports/import-crate-var.stderr--1--1--2   src/test/ui/macros/must-use-in-macro-55516.stderr--1--1--2,Perfective,
72850,54d78a46c506343be3e355447ecd45886b3c444a,Fix test cases to reflect that #32014...went away,Not sure what was the bug. Fixes #32014.   ,2,7,   src/test/incremental/string_constant.rs--2--2--4   src/test/incremental/dirty_clean.rs--1--2--3,Perfective,
705,e444cbe5d67b92e1c0989ec4d36758c2b036014b,New `index_refutable_slice` lint,* Finding pattern slices for `avoidable_slice_indexing`  * `avoidable_slice_indexing` analysing slice usage  * Add configuration to `avoidable_slice_indexing`  * Emitting `avoidable_slice_indexing` with suggestions  * Dogfooding and fixing bugs  * Add ui-toml test for `avoidable_slice_indexing`  * Correctly suggest `ref` keywords for `avoidable_slice_indexing`  * Test and document `mut` for `avoid_slice_indexing`  * Handle macros with `avoidable_slice_indexing` lint  * Ignore slices with sub patterns in `avoidable_slice_indexing`  * Update lint description for `avoidable_slice_indexing`  * Move `avoidable_slice_indexing` to nursery  * Added more tests for `avoidable_slice_indexing`  * Update documentation and message for `avoidable_slice_indexing`  * Teach `avoidable_slice_indexing` about `HirId`s and `Visitors`  * Rename lint to `index_refutable_slice` and connected config   ,18,70,   clippy_lints/src/index_refutable_slice.rs--21--0--21   .../index_refutable_slice/if_let_slice_binding.rs--13--0--13   .../if_let_slice_binding.stderr--12--0--12   .../slice_indexing_in_macro.rs--3--0--3   clippy_lints/src/unwrap.rs--1--1--2   clippy_lints/src/utils/conf.rs--1--1--2   clippy_utils/src/msrvs.rs--1--1--2   .../index_refutable_slice.rs--2--0--2   .../index_refutable_slice.stderr--2--0--2   .../toml_unknown_key/conf_unknown_key.stderr--1--1--2   .../slice_indexing_in_macro.stderr--2--0--2   CHANGELOG.md--1--0--1   clippy_lints/src/lib.register_lints.rs--1--0--1   clippy_lints/src/lib.register_nursery.rs--1--0--1   clippy_lints/src/lib.rs--1--0--1   clippy_utils/src/ty.rs--1--0--1   .../max_suggested_slice_pattern_length/clippy.toml--1--0--1   tests/ui-toml/min_rust_version/min_rust_version.rs--1--0--1,Adaptive,
3680,03ed8c811513a41ad076ae206cbc2a930888bef2,Fold `vtable_trait_upcasting_coercion_new_vptr_slot` logic into obligation processing., ,1,17,   src/unsize.rs--3--14--17,Perfective,
85571,0d39fc01bf2b105abd323a8f8ebd59b60f2790e7,libcollections: use unboxed closures in `TreeMap` methods, ,1,22,   src/libcollections/tree/map.rs--16--6--22,Perfective,
97616,7ac657116343c599806e733c2caf896681ab3bd1,rt: glob  globfree dummy function for android, ,2,38,   src/rt/rust_android_dummy.h--23--0--23   src/rt/rust_android_dummy.cpp--13--2--15,Adaptive,
37658,30317050092cc7a469f0815d40d400a812749564,some more refactor of FnType. Things build now, ,4,61,   src/librustc_codegen_llvm/abi.rs--34--1--35   src/librustc/ty/layout.rs--13--9--22   src/librustc_codegen_llvm/declare.rs--1--1--2   src/librustc_codegen_llvm/type_of.rs--1--1--2,Adaptive,
58370,622d20a85ab234a24ab74ea4afcb4014909754af,Fix typos in librustc/ty/README.md, ,1,10,   src/librustc/ty/README.md--5--5--10,Perfective,
90547,39fce483242c8e3279db882af115808d563be9ac,middle: pat_util: remove dead code, ,1,6,   src/librustc/middle/pat_util.rs--0--6--6,Perfective,
9810,71c9fdf8b136cf9f879d5ca99615043ef6d09e68,Refactor check_for_loop_range into its module, ,2,61,   clippy_lints/src/loops/for_loop_range.rs--31--0--31   clippy_lints/src/loops/mod.rs--1--29--30,Perfective,
97293,390dde571ede57133f249692ab020f83fd5d22ee,core::rt: Rename Task to Coroutine, ,5,83,   src/libcore/rt/sched.rs--23--24--47   src/libcore/rt/test.rs--12--12--24   src/libcore/rt/mod.rs--3--4--7   src/libcore/rt/tube.rs--1--2--3   src/libcore/task/spawn.rs--1--1--2,Perfective,
103206,120773b2a7b6a1ca8ba859528f3e3cd9e574bf3d,Change the interface of placement new to take a tydesc as part of Issue #2831., ,7,62,   src/rustc/middle/trans/base.rs--10--12--22   src/libstd/arena.rs--9--2--11   src/rustc/middle/typeck/check.rs--4--5--9   src/test/run-pass/placement-new-leaky.rs--6--1--7   src/test/run-pass/regions-mock-trans-impls.rs--6--1--7   src/libcore/sys.rs--2--2--4   .../compile-fail/placement-new-bad-method-type.rs--1--1--2,Perfective,
108652,e036c9d8d2d50a16000c05c3a6e235f41c27fabb,rt: Add missing const on the Windows path, ,1,2,   src/rt/rust_abi.cpp--1--1--2,Corrective,
107768,8cf3ca3b55dbab193903a00eb427156365e44c67,Make sure by-copy arguments take last-use into account, ,1,8,   src/comp/middle/trans.rs--7--1--8,Perfective,
111222,dba9caeba9579a17c9cbb9665b9ea160c12004ac,Comments., ,1,8,   src/comp/middle/trans.rs--8--0--8,Perfective,
84875,7ae1c6bc269cd0fddb45590a91d77e39b47a4965,Remove a TODO now that we handle normalization-derived bounds properly., ,1,10,   src/librustc_typeck/check/wf.rs--2--8--10,Perfective,
107146,a16acc0c105c438a5cf1500eb4c4a5c4388c2dca,added preliminary support for per-architecture generation of math constants (for porting), ,4,116,   src/libcore/cmath.rs--49--1--50   src/etc/cmathconsts.c--44--0--44   src/libcore/f32.rs--6--10--16   src/libcore/f64.rs--5--1--6,Adaptive,
11817,c4735063db427b18ffcd8ee51df38a3773ada635,Remove local patch in Cargo.toml for rls-* crates, ,1,4,   Cargo.toml--0--4--4,Perfective,
26725,46f6dad1010be9fc609e706f7452b1df4b0afa45,Fix links to types instead of modules, ,1,4,   src/libstd/lib.rs--2--2--4,Corrective,
89022,11bdeea76734e1c756246373db23d5db29632ce8,rustdoc: add the ability to run tests with --test.,This adds the `test_harness` directive that runs a code block using the  test runner  to allow for `#[test]` items to be demonstrated and still  tested (currently they are just stripped and not even compiled  let  alone run).   ,3,62,   src/librustdoc/html/markdown.rs--20--13--33   src/librustdoc/test.rs--11--6--17   src/doc/rustdoc.md--12--0--12,Adaptive,
19332,c3f5556c30e7af7a9fe139a2393b0fcdd27b9206,private_items_doc_tests -> doc_test_lints, ,2,6,   src/librustdoc/passes/mod.rs--2--2--4   .../passes/{private_items_doc_tests.rs=>doc_test_lints.rs}--1--1--2,Perfective,
15077,21c29b1e954d494026b07241aa8365837d5ecfdb,Check that pthread mutex initialization succeeded,If pthread mutex initialization fails  the failure will go unnoticed unless  debug assertions are enabled. Any subsequent use of mutex will also silently  fail  since return values from lock & unlock operations are similarly checked  only through debug assertions.    In some implementations the mutex initialization requires a memory  allocation and so it does fail in practice.    Check that initialization succeeds to ensure that mutex guarantees  mutual exclusion.   ,3,31,   library/std/src/sys/unix/mutex.rs--13--11--24   library/std/src/sys/unix/process/process_unix.rs--1--3--4   library/std/src/sys/unix/mod.rs--3--0--3,Perfective,
80485,b6e755df66eb5c54055ceef559ff985ddf78c446,fs::walk_dir example without unstable features,The current version of the example won't compile due to unstable features.  This is an attempt to fix that  at the cost of slightly more verbose code.   ,1,11,   src/libstd/fs.rs--5--6--11,Corrective,
77200,9868df2fd5d9364a1a1d8b22847c7b442a77a88b,Non-parametric dropck; instead trust an unsafe attribute (RFC 1238).,Implement cannot-assume-parametricity (CAP) from RFC 1238  and add the  UGEH attribute.    ----    Note that we check for the attribute attached to the dtor method  not  the Drop impl.    (This is just to match the specification of RFC and the tests; I am  not wedded to this approach.)   ,4,60,   src/librustc_typeck/check/dropck.rs--24--13--37   src/librustc/middle/ty/util.rs--10--0--10   src/doc/reference.md--8--0--8   src/libsyntax/feature_gate.rs--5--0--5,Adaptive,
103155,05543fd04dfb3f63b453a331e239ceb1a9a219f9,Make tests pass, ,7,21,   src/test/bench/task-perf-word-count-generic.rs--4--1--5   src/libcore/vec.rs--3--0--3   src/test/bench/core-std.rs--2--1--3   src/test/bench/shootout-k-nucleotide-pipes.rs--2--1--3   src/test/bench/shootout-k-nucleotide.rs--2--1--3   src/test/bench/msgsend-pipes-shared.rs--2--0--2   src/test/bench/msgsend-pipes.rs--2--0--2,Perfective,
64912,371ffa4710e4babfe0f87d4929f15a8f0cb93ebb,Small reformat, ,1,10,   src/items.rs--5--5--10,Perfective,
104601,b12e27595e35bd838b20011ff9fbb84e4680c46f,Error message reformatting  close #2309., ,2,6,   src/rustc/middle/resolve.rs--2--2--4   src/test/compile-fail/issue-1193.rs--1--1--2,Perfective,
40667,4ae4e0501bdf9e6d6be06757b08f92e3553848c6,nll: remove `NllLivenessMap` from `LocalUseMap`,Extend `LocalUseMap`'s `IndexVec`s that track def/use/drop data to store the  original `Local` indexes and not the compacted `LiveVar` ones (favoring speed  and code simplicity over space). Remove the `NllLivenessMap` embedded inside it  since it's no longer needed to perform the `LiveVar`/`Local` conversion.   ,2,24,   .../nll/type_check/liveness/local_use_map.rs--14--8--22   .../borrow_check/nll/type_check/liveness/trace.rs--1--1--2,Perfective,
47969,898950caf1a7bc9b6c41e74bbfac9591724f307c,targets: aarch64: Add bare-metal aarch64 target,A generic AArch64 target that can be used for writing bare-metal code  for 64-bit ARM architectures.   ,2,26,   src/librustc_target/spec/aarch64_unknown_none.rs--24--0--24   src/librustc_target/spec/mod.rs--2--0--2,Adaptive,
32925,20a26055b7afa500e1b00c6e5a3d03a1208c1d00,pacify tidy., ,1,2,   src/test/ui/refutable-pattern-errors.rs--1--1--2,Perfective,
81707,ba402312fed8134a9919bbb79bcd9978b92e4dee,std: Deny most warnings in doctests,Allow a few specific ones but otherwise this helps ensure that our examples are  squeaky clean!    Closes #18199   ,18,67,   src/libstd/collections/mod.rs--20--17--37   src/libstd/fs.rs--1--2--3   src/libstd/num/mod.rs--1--2--3   src/libstd/lib.rs--1--1--2   src/libstd/net/addr.rs--1--1--2   src/libstd/num/f32.rs--1--1--2   src/libstd/old_io/mod.rs--1--1--2   src/libstd/old_io/net/ip.rs--1--1--2   src/libstd/old_io/net/pipe.rs--1--1--2   src/libstd/old_io/process.rs--1--1--2   src/libstd/old_path/mod.rs--1--1--2   src/libstd/process.rs--1--1--2   src/libcore/macros.rs--0--1--1   src/libstd/collections/hash/set.rs--0--1--1   src/libstd/io/prelude.rs--1--0--1   src/libstd/net/tcp.rs--0--1--1   src/libstd/net/udp.rs--0--1--1   src/libstd/thread/mod.rs--1--0--1,Perfective,
55761,21ddc181f9318d9358806b6dd8f3c615c979b0bc,Fixed unsize changing adjusted type,If the final type coming out of an Adjust is a ref  it is deconstructed.  Also made some formatting changes.   ,1,19,   src/librustc_typeck/check/writeback.rs--14--5--19,Corrective,
15070,a619865889f97f0539a22a29502481c379f29b09,Add test for issue-77911, ,1,16,   src/test/ui/mir/issue-77911.rs--16--0--16,Perfective,
87950,5aedcb1e916711bfeb65c26b5c6210a3fb5d72bf,librustc: Don't allow return_address intrinsic in functions that don't use an out pointer., ,5,43,   src/test/compile-fail/intrinsic-return-address.rs--23--0--23   src/librustc/middle/trans/intrinsic.rs--7--3--10   src/libcore/intrinsics.rs--5--0--5   src/librustc/middle/trans/callee.rs--2--1--3   src/test/run-pass/intrinsic-return-address.rs--1--1--2,Corrective,
56240,c06e3aa446aa7f6681bd3ffc2a7078f43bab5ded,Refactor paths to middle::trans to mir::mono, ,10,29,   src/librustc_mir/monomorphize/item.rs--3--4--7   src/librustc_trans/base.rs--2--2--4   src/librustc_trans/partitioning.rs--2--2--4   src/librustc_trans/trans_item.rs--2--2--4   src/librustc/ty/maps/mod.rs--1--1--2   src/librustc_mir/monomorphize/collector.rs--1--1--2   src/librustc_trans/back/symbol_names.rs--1--1--2   src/librustc_trans/context.rs--1--1--2   src/librustc/lib.rs--0--1--1   src/librustc/mir/mod.rs--1--0--1,Perfective,
75510,9945bd82a8273f9c5506e9c26d51b312188d620f,Add better error messages for HashMapLint, ,2,61,   src/hashmap.rs--28--9--37   tests/compile-fail/hashmap.rs--21--3--24,Perfective,
100434,f070e22360e8e7edb65448908a5bff5e2060a7ff,Print copy patterns correctly, ,1,6,   src/libsyntax/print/pprust.rs--4--2--6,Corrective,
59413,ca0f063489d61e14b72cfb46e9d5e0403e361af6,fix rustc_tests build, ,1,4,   rustc_tests/src/main.rs--3--1--4,Corrective,
98553,ee2f3d9673407db3ca5a0eb24e01ef52c7fc676c,Switched over substr and trim functions in str to be non-allocating  temporary renamed them to better track use-sites, ,18,74,   src/libcore/str.rs--20--18--38   src/libcore/to_str.rs--0--3--3   src/libsyntax/parse/comments.rs--2--1--3   doc/tutorial.md--1--1--2   src/compiletest/runtest.rs--1--1--2   src/libcore/core.rc--1--1--2   src/libcore/prelude.rs--1--1--2   src/libcore/unstable/extfmt.rs--1--1--2   src/librustc/driver/driver.rs--1--1--2   src/librustc/middle/trans/expr.rs--1--1--2   src/librustdoc/text_pass.rs--1--1--2   src/librustdoc/trim_pass.rs--1--1--2   src/librustdoc/unindent_pass.rs--1--1--2   src/librusti/rusti.rc--1--1--2   src/libstd/bigint.rs--1--1--2   src/libstd/semver.rs--1--1--2   src/libsyntax/parse/lexer.rs--1--1--2   src/test/bench/sudoku.rs--1--1--2,Perfective,
64016,4d32ff4e498c391d65b44d26cfb453651dc3da7b,Loosen src_is_git to just check exists(), ,1,2,   src/bootstrap/lib.rs--1--1--2,Perfective,
18285,f3585a93fea7b7e82e9a488b364fa6edfc2dd214,Upgrade Emscripten on CI to 1.39.20,This Emscripten version was the first to be cut after the LLVM 11  release branch was created  so it should be the most compatible with  LLVM 11. The old version we were using was incompatible with LLVM 11  because its wasm-ld did not understand all the relocations that LLVM  11 emits.   ,1,4,   src/ci/docker/scripts/emscripten.sh--2--2--4,Perfective,
55406,93debaa306cd968de12c3084d38083c78349054b,add #![feature(convert_id)] to libstd + libcore, ,2,2,   src/libcore/lib.rs--1--0--1   src/libstd/lib.rs--1--0--1,Adaptive,
52785,1c73db172a59ff4e34b3bc636614029401e66a7a,fix other instance of internals docs, ,1,2,   CONTRIBUTING.md--1--1--2,Perfective,
40908,66adf52e7dfd68f04e60744ea9bf130c45befe5e,miri: give non-generic functions a stable address, ,1,31,   src/librustc/mir/interpret/mod.rs--23--8--31,Adaptive,
12212,e5330a4f52fcf9de8112f3dd0abb094640b668e3,Apply suggestions from code review,comment nits    Co-authored-by: Ralf Jung <post@ralfj.de>   ,2,13,   compiler/rustc_mir/src/transform/check_consts/validation.rs--8--3--11   compiler/rustc_mir/src/transform/check_consts/ops.rs--1--1--2,Perfective,
26002,84c024d92f34206d0f02ab814c6e5bd3abb876c3,Clarify mir block merging, ,1,6,   src/librustc_mir/transform/simplify.rs--5--1--6,Perfective,
72246,96d59366fc3bb0b99d9ec39fb651fc3a7334b009,Don't misplace the :: on associated items.,The rewritten location of the :: on global paths for qpaths was wrong.   ,2,8,   src/types.rs--4--1--5   tests/target/associated-items.rs--3--0--3,Corrective,
64470,fc04eaacc5bd5760e98cd3aa390dcc3ae795d12f,Implement ? in catch expressions and add tests, ,16,105,   src/librustc_typeck/check/mod.rs--18--10--28   src/librustc/middle/liveness.rs--8--8--16   src/librustc/cfg/construct.rs--8--3--11   src/librustc/hir/lowering.rs--7--4--11   src/librustc_mir/build/scope.rs--3--3--6   src/test/compile-fail/catch-bad-lifetime.rs--4--0--4   src/test/run-pass/catch-expr.rs--4--0--4   src/librustc/hir/intravisit.rs--2--1--3   src/librustc/hir/mod.rs--2--1--3   src/librustc_mir/build/expr/into.rs--2--1--3   src/librustc_mir/hair/cx/expr.rs--1--2--3   src/librustc_passes/loops.rs--1--2--3   src/test/compile-fail/catch-bad-type.rs--3--0--3   src/test/compile-fail/catch-opt-init.rs--3--0--3   src/librustc_mir/build/expr/stmt.rs--1--1--2   src/librustc_mir/build/mod.rs--1--1--2,Adaptive,
34370,0410e320e28d0d2dfcc99d4d5ffcf7a6e5559b89,Changed tests to check-pass., ,2,4,   src/test/ui/associated-type-bounds/ambiguous-associated-type.rs--1--1--2   src/test/ui/associated-type-bounds/issue-61752.rs--1--1--2,Perfective,
92656,fffbe7a8cdf2378a3c5617d1600cf2d31b7a357f,librustc: De-`@mut` the type interner, ,1,18,   src/librustc/middle/ty.rs--12--6--18,Perfective,
42730,d6969ac2fbc07d646a6c46631c9c96165a1774fe,Fix string for raw pointer deref suggestion, ,5,38,   src/test/ui/parenthesised-deref-suggestion.stderr--12--0--12   src/test/ui/issues/issue-11004.stderr--6--2--8   src/test/ui/parenthesised-deref-suggestion.rs--8--0--8   src/librustc_typeck/check/mod.rs--4--2--6   src/test/ui/unsafe/unsafe-fn-autoderef.stderr--3--1--4,Corrective,
49714,5468e12ca056a6ac46b36e244d235b9a0c987c58,add label to unknown meta item error, ,2,37,   src/libsyntax/attr/builtin.rs--26--9--35   src/test/ui/deprecation-sanity.stderr--1--1--2,Adaptive,
32012,f10d2e2d23e6a47bb7d3df17d4fbe067f8c99ea9,Fix clippy warnings, ,5,33,   src/libserialize/json.rs--10--11--21   src/librustc_apfloat/ieee.rs--2--2--4   .../graph/implementation/mod.rs--2--2--4   src/libarena/lib.rs--1--1--2   src/librustc_index/bit_set.rs--1--1--2,Corrective,
38744,ca5a9ce2a131b117f1d7f70163d96623ab9ca213,Add test and fix dedup, ,3,28,   src/test/ui/issues/issue-59896.stderr--17--0--17   src/test/ui/issues/issue-59896.rs--10--0--10   src/librustc_resolve/resolve_imports.rs--1--0--1,Perfective,
103430,5bfb5cad3a8d5f9c1819472bcd166f8ed8972b6d,Remove create_lock in favor of lock_and_signal() (issue #2780), ,2,14,   src/libcore/sys.rs--5--7--12   src/libcore/arc.rs--1--1--2,Perfective,
79107,0a36ea7db130dfaa6012d76ccf80b9b77e15796b,get into the weeds over GEP and allocations, ,3,76,   src/doc/tarpl/vec-alloc.md--37--7--44   src/doc/tarpl/vec-layout.md--18--9--27   src/doc/tarpl/vec.md--4--1--5,Perfective,
43513,d77edb6458f6eafa61ff7a5c2bef3b613add80a1,resolve: Fix false-positives from lint `absolute_paths_not_starting_with_crate`, ,3,23,   src/test/ui/rust-2018/auxiliary/edition-lint-paths.rs--11--0--11   src/test/ui/rust-2018/edition-lint-paths-2018.rs--10--0--10   src/librustc_resolve/lib.rs--1--1--2,Corrective,
2347,b146525140a8776aec1f7852643ec2abd787a197,remove trailing whitespace, ,1,8,   library/alloc/src/collections/linked_list.rs--4--4--8,Perfective,
27257,19fdc6e091af973a378d53c13bb1ea42862171ad,Document unsafe blocks in core::{cell  str  sync}, ,5,108,   src/libcore/str/mod.rs--35--9--44   src/libcore/sync/atomic.rs--31--2--33   src/libcore/str/pattern.rs--11--2--13   src/libcore/cell.rs--10--2--12   src/libcore/str/lossy.rs--4--2--6,Perfective,
93807,b7b4f7a5e2982c8412fe71a9534f6f62435f9bc3,Add code for older crate map versions  bumped crate map version number, ,2,40,   src/libstd/rt/crate_map.rs--31--7--38   src/librustc/middle/trans/base.rs--1--1--2,Adaptive,
37521,0789091a68cc3624c5ab05a9cd3e9b1ed036624a,Update clippy, ,1,2,   src/tools/clippy--1--1--2,Perfective,
109106,b16a9a984a23ec607ec652286df8bd60ada83047,rt: Don't dereference a null pointer when traversing a function with no environment, ,1,5,   src/rt/rust_shape.h--3--2--5,Corrective,
109033,4c25d810415b01b7c2ed250952b8fe3b039f29bf,Remove some uses of str_buf builtin. Issue #855, ,3,7,   src/test/run-pass/native2.rs--1--2--3   src/lib/str.rs--0--2--2   src/test/run-pass/item-attributes.rs--1--1--2,Perfective,
109825,7a05f1db7cb85ead062d6a7dde566f6e3010f2f2,Fix closures over dynamically-sized polymorphic values., ,1,48,   src/comp/middle/trans.rs--34--14--48,Corrective,
79201,7f0e733f1d8e597faee4bff0fc04838867725fad,rustc_trans: Update LLVMBuildLandingPad signature,The C API of this function changed so it no longer takes a personality function.  A shim was introduced to call the right LLVM function (depending on which  version we're compiled against) to set the personality function on the outer  function.    The compiler only ever sets one personality function for all generated  functions  so this should be equivalent.   ,4,38,   src/rustllvm/RustWrapper.cpp--15--0--15   src/librustc_llvm/lib.rs--7--6--13   src/librustc_trans/trans/builder.rs--5--3--8   src/librustc_trans/trans/build.rs--1--1--2,Perfective,
113044,0565350b5f912978900ba23825ee9893956419b2,Typecheck vec and index exprs., ,1,47,   src/comp/middle/typeck.rs--47--0--47,Adaptive,
6131,38013e708eb6ec5abe9992078857b147ff3b58d5,Use iter::from_fn in String::remove_matches, ,1,12,   library/alloc/src/string.rs--3--9--12,Perfective,
683,1642fdfea0ba60f4e142e5d767491ab7686cd13b,Add `-Zassert-incr-state` to assert state of incremental cache, ,6,47,   compiler/rustc_session/src/config.rs--22--0--22   compiler/rustc_incremental/src/persist/load.rs--15--1--16   compiler/rustc_session/src/options.rs--3--1--4   .../incremental/link_order/auxiliary/my_lib.rs--1--2--3   compiler/rustc_interface/src/tests.rs--1--0--1   src/test/incremental/struct_change_field_name.rs--1--0--1,Adaptive,
53512,ee4a7eba451cc631a8fb7ab4562d37074ec7b048,incr.comp.: Make sanity check in try_mark_green() aware of error conditions., ,1,11,   src/librustc/dep_graph/graph.rs--9--2--11,Perfective,
48388,33067ad2011ce97e80a247c5a1a9bdb15fc4f376,Add #![feature(trim_direction)] to doc comments, ,1,16,   src/libcore/str/mod.rs--14--2--16,Perfective,
19540,3712dfc677bb5dff909cdc29fd2da11772ddba9e,Partially account for case where used method is from trait, ,1,22,   .../nice_region_error/static_impl_trait.rs--17--5--22,Adaptive,
41946,cc19a78ee846b34fae8b1caa19d84cf33d7ff67e,Account for 2 removed lines in src/librustdoc/test.rs, ,1,4,   src/test/rustdoc-ui/failed-doctest-output.stdout--2--2--4,Perfective,
60583,94c90e79e1681cf2ff1b1ef0a641f203ccbd2b9c,rustbuild: Replace create_dir_racy with create_dir_all,`create_dir_all` has since been fixed so no need for `create_dir_racy`.   ,1,21,   src/build_helper/lib.rs--1--20--21,Perfective,
13096,c254a15906d6ad64821659b50c4265c96b113159,Use true ID for def_id., ,5,54,   src/test/rustdoc-json/nested.expected--34--0--34   src/librustdoc/json/types.rs--7--7--14   src/librustdoc/clean/mod.rs--1--1--2   src/librustdoc/json/mod.rs--1--1--2   src/test/rustdoc-json/nested.rs--2--0--2,Adaptive,
91329,06589136167f3a345920260e1dcb00717b6cd68f,rustdoc: Only inject extern crates if not present, ,2,17,   src/librustdoc/test.rs--7--5--12   src/libextra/json.rs--5--0--5,Perfective,
86090,dc0416ebce6b7a0266a4486b2b6eb83a710eaa32,Update the Vim syntax prelude., ,1,45,   src/etc/vim/syntax/rust.vim--21--24--45,Perfective,
33351,6127632c761b9a658b13c122ba0beb73f4542399,Use f{32 64}const insts instead of loading from a global value, ,1,8,   src/constant.rs--8--0--8,Perfective,
82466,1014b22b317b3afbe211dbc0e1b00045a0e9c76f,remove confusing language about casting types,Fixes #17481   ,1,4,   src/doc/reference.md--0--4--4,Perfective,
109833,c7ef6d28660140b60691dc4a72fbef42216e1ae9,Stop using walk.rs in the fuzzer, ,1,10,   src/fuzzer/fuzzer.rs--5--5--10,Corrective,
85891,133266f01ca6bd1a75cdb0887c3c9f6ea500795f,trans: Eliminated redundant allocations., ,1,24,   src/librustc_trans/trans/asm.rs--10--14--24,Perfective,
35744,6cab003fd1d83c55068b7193d91290aef56424df,cleanup formatting of comment and add attribution, ,1,24,   src/librustc/infer/lexical_region_resolve/mod.rs--12--12--24,Perfective,
105358,da91b603431ca84ed262119949899efc4e894e11,Add loop to the vim keyword list., ,1,2,   src/etc/vim/syntax/rust.vim--1--1--2,Perfective,
67150,a79c80d0b0f3fa15111ba88fe7260f86ff6df410,Adds TyCtxt::require_lang_item(LangItem) to simplify lang item requires.,Replaces instances of tcx.lang_items.require(..) with fatal unwrap with  this method.   ,14,68,   src/librustc/ty/mod.rs--4--8--12   src/librustc/middle/lang_items.rs--8--0--8   src/librustc/ty/util.rs--3--5--8   src/librustc/ty/fast_reject.rs--2--4--6   src/librustc_typeck/check/mod.rs--2--4--6   src/librustc_mir/transform/qualify_consts.rs--1--3--4   src/librustc/infer/mod.rs--1--2--3   src/librustc/traits/select.rs--1--2--3   src/librustc/ty/wf.rs--1--2--3   src/librustc_borrowck/borrowck/mir/elaborate_drops.rs--1--2--3   src/librustc_mir/build/scope.rs--1--2--3   src/librustc_typeck/check/cast.rs--1--2--3   src/librustc_typeck/check/wfcheck.rs--1--2--3   src/librustdoc/clean/mod.rs--1--2--3,Perfective,
86112,e0b0c83138236ba1b2d532f79647ee45f7824741,doc: clarifying unsafe code vs undefined behavior, ,1,17,   src/doc/reference.md--8--9--17,Perfective,
112935,aa1d8d07687ef686c214044d11780a13b4b958e2,Move unify_fn logic out-of-line., ,1,50,   src/comp/middle/ty.rs--27--23--50,Perfective,
21364,ea2984ae692d1ab41fd19c275b54bd8f39e5e4f2,Add Kyle Strand to mailmap, ,1,4,   .mailmap--4--0--4,Perfective,
47685,2db2327aafe2de16cb2757c4efe779b644099a28,fix verbose output, ,1,6,   src/formatting.rs--3--3--6,Corrective,
105104,ad21976fbc4776fe09f98cd087fbe4cecf23cd84,core: Add vec::capacity, ,1,19,   src/libcore/vec.rs--19--0--19,Adaptive,
10109,68f41b8328d76e171a17a0ac60351f576b9116b5,Add more links between hash and btree collections,- Link from `core::hash` to `HashMap` and `HashSet`  - Link from HashMap and HashSet to the module-level documentation on    when to use the collection  - Link from several collections to Wikipedia articles on the general    concept   ,4,23,   library/core/src/hash/mod.rs--8--2--10   library/alloc/src/collections/btree/map.rs--4--3--7   library/std/src/collections/hash/map.rs--2--1--3   library/std/src/collections/hash/set.rs--2--1--3,Perfective,
104751,7fa7e56341a222fd0984e8be7569915a8a90ae33,syntax: Move fn spanned into ast_util, ,4,17,   src/librustsyntax/parse/common.rs--1--5--6   src/librustsyntax/ast_util.rs--4--0--4   src/librustsyntax/parse/attr.rs--2--2--4   src/librustsyntax/parse/parser.rs--1--2--3,Perfective,
94088,5a0f7aacedbce2c5b55b6b42dd37ae95f99fc4f8,Add a note about improved rustc perf to 0.8 relnotes, ,1,1,   RELEASES.txt--1--0--1,Perfective,
24371,5baef9695d94f5fa74317f004fc3543bcc148a68,Update RELEASES.md,Co-Authored-By: Mark Rousskov <mark.simulacrum@gmail.com> ,1,2,   RELEASES.md--1--1--2,Perfective,
24327,4f429c074b865e2ae7a4dc52eb6f2e5db9244e48,impl TrustedRandomAccess for Fuse without FusedIterator, ,1,8,   src/libcore/iter/adapters/fuse.rs--6--2--8,Adaptive,
82715,804c071d8b9cfe4d40df9565558db8a9d87d7775,fixing a few bitrig build breakers, ,2,16,   src/libstd/sys/unix/fs.rs--0--15--15   src/libstd/sys/unix/process2.rs--1--0--1,Corrective,
93201,6bd8bb51a0c148c297b2396929149c5e946993c1,lint: _-prefixed variables don't get an unused-mut warning.,Bringing it into line with the unused-variable one         fn main() {          let mut _a = 1;      }    will not warn that `_a` is never used mutably.    Fixes #6911.   ,2,25,   src/librustc/middle/lint.rs--12--10--22   src/test/compile-fail/lint-unused-mut-variables.rs--3--0--3,Corrective,
87380,2f357231709d52ef1ba94ab8883871b838a24fc2,Correct windows install link in guide,This closes #17260. The guide references the old install location for  the windows rust install before it was split into 64bit and 32bit  installers. This adds a link to each binary.   ,1,7,   src/doc/guide.md--5--2--7,Perfective,
50038,7aab3bf863383aa77fd293cf7d26a1b28597d49e,Don't ICE when performing `lower_pattern_unadjusted` on a `TyError`, ,3,50,   src/librustc_mir/hair/pattern/mod.rs--11--11--22   src/test/ui/issue-50577.rs--15--0--15   src/test/ui/issue-50577.stderr--13--0--13,Corrective,
88558,5d1bdc320ba5304854f409ba68060f5739bca044,Revise the `const_nonmatching` flag with more info about author's intent.,In particular  I want authors of deriving modes to understand what  they are opting into (namely quadratic code size or worse) when they  select NonMatchesExplode.   ,14,62,   src/libsyntax/ext/deriving/generic/mod.rs--23--7--30   src/libsyntax/ext/deriving/cmp/ord.rs--2--2--4   src/libsyntax/ext/deriving/primitive.rs--2--2--4   src/libsyntax/ext/deriving/zero.rs--2--2--4   src/libsyntax/ext/deriving/clone.rs--1--1--2   src/libsyntax/ext/deriving/cmp/eq.rs--1--1--2   src/libsyntax/ext/deriving/cmp/totaleq.rs--1--1--2   src/libsyntax/ext/deriving/cmp/totalord.rs--1--1--2   src/libsyntax/ext/deriving/decodable.rs--1--1--2   src/libsyntax/ext/deriving/default.rs--1--1--2   src/libsyntax/ext/deriving/encodable.rs--1--1--2   src/libsyntax/ext/deriving/hash.rs--1--1--2   src/libsyntax/ext/deriving/rand.rs--1--1--2   src/libsyntax/ext/deriving/show.rs--1--1--2,Perfective,
42764,e7e17f9d1b008a1f06ad8b4ef06c443b4b879bc4,static eval: Do not ICE on layout size overflow,Layout size overflow and typeck eval errors are reported. Trigger a bug  only when the eval error is strictly labeled as TooGeneric.   ,3,34,   src/test/ui/issues/issue-56762.rs--18--0--18   src/librustc_mir/const_eval.rs--8--4--12   src/test/ui/issues/issue-56762.stderr--4--0--4,Corrective,
81841,f86318d63c86568b312f39da20bea67e328c1fc5,Test fixes and rebase conflicts  round 2,Conflicts:  	src/libcore/num/mod.rs   ,11,36,   src/libcoretest/fmt/num.rs--8--8--16   src/libcollectionstest/slice.rs--2--2--4   src/liblibc/lib.rs--1--1--2   src/librand/distributions/mod.rs--1--1--2   src/librustc/middle/const_eval.rs--1--1--2   src/libstd/fs.rs--1--1--2   src/libstd/old_io/fs.rs--1--1--2   src/libsyntax/print/pprust.rs--1--1--2   src/test/compile-fail/lint-exceeding-bitshifts.rs--1--1--2   src/test/compile-fail/const-eval-overflow.rs--1--0--1   src/test/compile-fail/lint-type-limits.rs--1--0--1,Corrective,
83947,2cc7feb4f6019b36f84d56f3202361bace1e5503,implement `ExactSizeIterator` for `slice::{Chunks ChunksMut}`, ,2,12,   src/libcollections/slice.rs--7--0--7   src/libcore/slice.rs--5--0--5,Adaptive,
106379,07ac2e1043c3a4e9ba0058f0b67798821d0118ee,rustdoc: Add a sorting pass, ,2,49,   src/rustdoc/sort_pass.rs--48--0--48   src/rustdoc/rustdoc.rc--1--0--1,Perfective,
38770,137ffa10229bfec497a446d24045388ee3c418d6,Improve robustness of nested check.,This commit removes the assumption that the start of a use statement  will always be on one line with a single space - which was silly in the  first place.   ,4,68,   src/librustc_resolve/error_reporting.rs--17--16--33   src/test/ui/issue-59764.stderr--14--3--17   src/test/ui/issue-59764.rs--10--0--10   src/test/ui/issue-59764.fixed--8--0--8,Perfective,
45784,00e0565c383f7487b5f92eeef7389607a82c8e74,LocalWaker and Waker cleanups, ,1,48,   src/libcore/task/wake.rs--24--24--48,Perfective,
111921,ef0fcdd6300e9b5d78d7b86a1bdc2e849f68f935,rustc: Create a unification context, ,1,50,   src/comp/middle/ty.rs--22--28--50,Perfective,
34712,eeb2335401b173e7f7ae84c699b96cbd7a6c3e50,moving remaining variants to UnsupportedInfo, ,1,37,   src/librustc/mir/interpret/error.rs--17--20--37,Perfective,
11102,12b605af88e8935b7417234861ef8fa8e6131fd5,Implement `TrustedLen` for `iter::Fuse<I: TrustedLen>`, ,1,10,   library/core/src/iter/adapters/fuse.rs--9--1--10,Adaptive,
79590,9b6fe6ca368668f3b4950c49546d3d06125b9f01,Add tip to do partial compile., ,1,1,   Makefile.in--1--0--1,Perfective,
222,b16c811f1cbaf4d2e7e61409a0bd39aef5a6b1b4,Prefer TraitPredicate over ConstnessAnd<TraitRef>, ,2,24,   .../rustc_trait_selection/src/traits/select/mod.rs--6--16--22   compiler/rustc_middle/src/traits/select.rs--1--1--2,Perfective,
28596,a528e3730240c6da598fc71954314235fa6a11bb,Fix codegen of ctlz and cttz intrinsics, ,1,6,   src/intrinsics.rs--4--2--6,Corrective,
59295,a9df19b42f86a2c98e4de1c2ae15e02ffe338792,Update miri submodule, ,1,2,   src/tools/miri--1--1--2,Perfective,
85688,20eaf168c5b40c003bd7d28fe4c071b24118410e,Add a proper `Hash` implementation for `VecMap`,Also re-add the previously deleted test with an additional test that would have  failed before  when the hash function depended on the capacity.   ,1,37,   src/libcollections/vec_map.rs--37--0--37,Adaptive,
90220,e36adee3ae498cbf98e463f68372dca8ac8e20ac,Minor changes in std::mem,Fixed a typo in the documentation of std::mem  and refactored a function to use match instead of if.    Also added a FIXME to the benchmarks at the end of the file stating that they should be moved to another place  because they have nothing to do with `mem` (see https://github.com/mozilla/rust/issues/13642)   ,1,10,   src/libstd/mem.rs--6--4--10,Perfective,
83351,d4288717c48c61e13d9bed39717101a1782b8cdf,Forbid undefined names in macro use / macro reexport,Fixes #21062.   ,3,43,   src/librustc/plugin/load.rs--16--11--27   src/test/compile-fail/macro-reexport-undef.rs--8--0--8   src/test/compile-fail/macro-use-undef.rs--8--0--8,Corrective,
29692,bf121a33c4f9c3361e29545c6448e603952e6944,Create sanitizer passes in a separate function, ,1,33,   src/librustc_codegen_llvm/back/write.rs--19--14--33,Adaptive,
111956,6d3a423094c77b25b20afe3a812a67f03080cc3d,add log_err to rustc, ,10,66,   src/comp/middle/trans.rs--9--8--17   src/comp/middle/fold.rs--6--6--12   src/comp/front/parser.rs--9--2--11   src/comp/pretty/pprust.rs--5--2--7   src/comp/middle/typeck.rs--3--3--6   src/comp/middle/typestate_check.rs--3--3--6   src/comp/front/ast.rs--1--1--2   src/comp/front/token.rs--2--0--2   src/comp/middle/ty.rs--1--1--2   src/comp/front/lexer.rs--1--0--1,Adaptive,
33141,6b09477e91ba7cb6b657b87a51ebd0b127e5ca67,Polonius: emit initialization/move tracking facts,- var_starts_path  - parent  - initialized_at  - moved_out_at    This also switches to the intended emission of `var_drop_used` fact emission   where that fact is always emitted on a drop-use of a variable  regardless of its  initialization status  as Polonius now handles that.   ,4,32,   src/librustc_mir/borrow_check/nll/mod.rs--21--1--22   .../nll/type_check/liveness/polonius.rs--3--1--4   src/librustc_mir/dataflow/move_paths/mod.rs--3--1--4   .../borrow_check/nll/type_check/liveness/trace.rs--0--2--2,Adaptive,
2661,6b4b77aa4408d6c297e8270e79c3ad36a07b0f1b,Update test for needless-borrow FP for mutable ref, ,1,24,   tests/ui/needless_borrow.rs--16--8--24,Perfective,
104405,34b42eeb657dfe051ebaf0f95ba5a428441b04af,change list so that it must be used in a purely boxed fashion,The old way was inconsistent---the head was unboxed but the  tail was boxed.  This resulted in numerous needless copies and  also made the borrow check unhappy  because the head tended to be  stored in mutable memory.   ,12,52,   src/rustc/middle/resolve.rs--11--10--21   src/rustc/middle/alias.rs--3--3--6   src/rustc/middle/last_use.rs--2--3--5   src/libstd/list.rs--1--2--3   src/test/run-pass/unchecked-predicates.rs--1--2--3   src/libstd/arena.rs--1--1--2   src/rustc/middle/trans/base.rs--1--1--2   src/rustc/middle/trans/type_use.rs--1--1--2   src/rustc/middle/typeck/check.rs--1--1--2   src/rustdoc/reexport_pass.rs--1--1--2   .../log-knows-the-names-of-variants-in-std.rs--1--1--2   src/test/run-pass/non-boolean-pure-fns.rs--1--1--2,Perfective,
43795,2ff6ffc872645bf6f5bc7dda4a817a1fc7789684,Add tests for unsized-locals functions stability., ,4,28,   src/test/ui/unsized-locals/unsized-exprs3.stderr--14--0--14   src/test/ui/unsized-locals/unsized-exprs3.rs--10--0--10   src/test/ui/unsized-locals/auxiliary/ufuncs.rs--3--0--3   src/test/run-pass/unsized-locals/unsized-exprs.rs--1--0--1,Perfective,
82032,b24a3b82011c3b78573ace4ade3f99d7c4701a11,rustc: Remove support for hyphens in crate names,"This commit removes parser support for `extern crate ""foo"" as bar` as the  renamed crate is now required to be an identifier. Additionally this commit  enables hard errors on crate names that contain hyphens in them  they must now  solely contain alphanumeric characters or underscores.    If the crate name is inferred from the file name  however  the file name  `foo-bar.rs` will have the crate name inferred as `foo_bar`. If a binary is  being emitted it will have the name `foo-bar` and a library will have the name  `libfoo_bar.rlib`.    This commit is a breaking change for a number of reasons:    * Old syntax is being removed. This was previously only issuing warnings.  * The output for the compiler when input is received on stdin is now `rust_out`    instead of `rust-out`.  * The crate name for a crate in the file `foo-bar.rs` is now `foo_bar` which can    affect infrastructure such as logging.    [breaking-change]   ",7,55,   src/libsyntax/parse/parser.rs--5--17--22   src/librustc/metadata/creader.rs--3--6--9   src/librustc_trans/back/link.rs--7--2--9   src/test/compile-fail/bad-crate-id2.rs--0--7--7   src/test/run-make/output-with-hyphens/Makefile--3--0--3   .../output-with-hyphens/foo-bar.rs}--1--2--3   src/librustdoc/test.rs--1--1--2,Perfective,
35274,2ce227dcc6213947b0dab34cc4139b80525670db,Actually call `visit_block_entry` in `DataflowResultsConsumer`,Previously  this callback was never actually called.   ,1,2,   src/librustc_mir/dataflow/mod.rs--2--0--2,Corrective,
61799,3d25238d6d702b4a60b185c08a8f50a4d16e2600,fixed some clippy warnings in compiletest, ,6,58,   src/tools/compiletest/src/runtest.rs--17--18--35   src/tools/compiletest/src/header.rs--4--5--9   src/tools/compiletest/src/main.rs--4--4--8   src/tools/compiletest/src/errors.rs--1--1--2   src/tools/compiletest/src/json.rs--1--1--2   src/tools/compiletest/src/procsrv.rs--1--1--2,Corrective,
32775,8ee77a268f1f90b6e99e31cd3c4d03f893b73a76,Use try_fold instead of manually carrying an accumulator, ,1,9,   src/librustc_mir/interpret/operand.rs--5--4--9,Perfective,
79702,c012d311c42523c674bf5a01ab0871a4ef267b9c,A basic impl of Rewrite for ast::Expr, ,4,64,   src/expr.rs--30--27--57   src/rewrite.rs--3--0--3   src/visitor.rs--2--1--3   src/lib.rs--1--0--1,Adaptive,
100103,11a9918ae747d2146df07c6f76fd359231eb5e6c,Wrap lines, ,1,7,   README.md--4--3--7,Perfective,
82903,64d33d892ad3bda256e174e97e51f603896b6c66,check supertraits, ,3,39,   src/librustc/middle/traits/select.rs--18--4--22   ...typeck-default-trait-impl-trait-where-clause.rs--8--5--13   .../typeck-default-trait-impl-supertrait.rs--2--2--4,Adaptive,
2966,9a3a2a1c3784905eee405becdbd2e5c7ebd5dbce,Clarify what “a container” is in `FromIterator<Option<A>> for Option<V>` doc., ,1,4,   library/core/src/option.rs--2--2--4,Perfective,
2929,6eec72ede8d7a8f6ca3d4cd9125bab268dbd64a9,Update Miri, ,1,2,   src/tools/miri--1--1--2,Perfective,
15266,b221819ff7b2d53b25714635dc72d68d732c491e,Update submodules for link fixes,- [rust-embedded](https://github.com/rust-embedded/book/compare/79ab7776929c66db83203397958fa7037d5d9a30...ca8169e69b479f615855d0eece7e318138fcfc00)  - [cargo](https://github.com/rust-lang/cargo/compare/12db56cdedbc2c26a9aa18f994c0188cdcc67df5...79b397d72c557eb6444a2ba0dc00a211a226a35a)   ,2,4,   src/doc/embedded-book--1--1--2   src/tools/cargo--1--1--2,Perfective,
65022,58a9dd3f7e851193c732a8f850294d91906edb6b,Add missing urls and examples into Barrier structs, ,1,46,   src/libstd/sync/barrier.rs--41--5--46,Perfective,
49575,30063ae2a5316edf1025c25b85d67f91b3533333,Shorten the line,Shorten the line to make tidy happy. ,1,4,   src/librustc_codegen_llvm/back/link.rs--2--2--4,Perfective,
112538,16344a0145555448fc202a2bb8eebd2477dc10b2,rustc: Re-XFAIL rec-extend.rs. The typechecker never assigned the path expr a type., ,1,1,   src/Makefile--1--0--1,Corrective,
103729,2a53640aa13a68e7f9cd92bb7ba59c30dfb4b903,Test for issue 1896 (which appears to be fixed), ,1,8,   src/test/compile-fail/issue-1896.rs--8--0--8,Perfective,
71984,64bc3c266cf97e2050bcf3a8565c48a60ca1a762,trans: Make collector handle the drop_in_place() intrinsic., ,2,39,   src/librustc_trans/collector.rs--20--2--22   .../item-collection/drop_in_place_intrinsic.rs--17--0--17,Adaptive,
108108,2cebef095e61608a3d35710cb5fd3d7de18b68ac,stdlib: Make io failures recoverable by returning a result, ,11,111,   src/test/stdtest/io.rs--32--2--34   src/lib/io.rs--17--12--29   src/comp/driver/rustc.rs--7--4--11   src/comp/syntax/parse/parser.rs--7--2--9   src/comp/syntax/codemap.rs--5--2--7   src/fuzzer/fuzzer.rs--4--3--7   src/compiletest/runtest.rs--4--2--6   src/compiletest/header.rs--1--1--2   src/lib/result.rs--2--0--2   src/test/bench/task-perf-word-count.rs--1--1--2   src/test/compile-fail/missingmod.rc--2--0--2,Adaptive,
19648,30659cd45ee01f5626aeef4bbe29c68536dc833d,older toolchains not valid any more,with the change to llvm 10 the parameter  LLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN do not do any thing as  min and soft error is the same.  see https://github.com/rust-lang/llvm-project/blob/86b120e6f302d39cd6973b6391fb299d7bc22122/llvm/cmake/modules/CheckCompilerVersion.cmake   ,1,17,   README.md--3--14--17,Perfective,
76029,a59cd363cc77bbfb7ba95fb7a063577436fd533a,Fixed make tidy error, ,1,3,   src/libstd/time/mod.rs--2--1--3,Perfective,
20804,890cef635cd62b21bb23f80b9c743137014e483a,Change InternedAdtDef to &'tcx AdtDef, ,3,40,   src/librustc_traits/chalk/db.rs--16--19--35   src/librustc_middle/traits/chalk.rs--1--2--3   src/librustc_traits/chalk/lowering.rs--1--1--2,Perfective,
16406,a61b9638bbbb48f9c2fde0ccbbcf03e64494ea0f,review: fix nits and move panic safety tests to the correct place, ,8,47,   library/alloc/tests/fmt.rs--10--11--21   .../tests/panic_safe.rs=>std/src/panic/tests.rs}--5--5--10   library/alloc/tests/boxed.rs--1--2--3   library/core/src/fmt/mod.rs--2--1--3   library/core/tests/option.rs--1--2--3   library/core/tests/slice.rs--1--2--3   library/std/src/panic.rs--3--0--3   library/core/tests/lib.rs--0--1--1,Perfective,
69525,ef6aab2935a504787d01b1d9165d41b184a6027c,Reduce duplication in std::sys::unix::rand.,There were a bunch of more-of-less the same few lines for doing a  fill_bytes+transmute  and I didn't want to copy-paste it yet again.   ,1,45,   src/libstd/sys/unix/rand.rs--21--24--45,Perfective,
77603,58fee220a9ec3bd904aa7c8e84b6643b51e88f76,fix indentation, ,2,57,   src/utils.rs--25--26--51   src/collapsible_if.rs--3--3--6,Perfective,
6843,97bc0eefe7566955eedff5fb587807224b2387c3,Add a comment for `check_abi()`, ,1,3,   compiler/rustc_mir/src/interpret/terminator.rs--3--0--3,Perfective,
35555,076a5cdc357a3a9e03850a745bee0b3f0db3d54f,format a bit, ,1,6,   src/librustc_codegen_llvm/metadata.rs--4--2--6,Perfective,
20800,e75fbaee45a24816e8e2b27cd9f8896766aee6e3,add second message for livedrop errors, ,3,20,   src/librustc_mir/transform/check_consts/ops.rs--8--5--13   src/librustc_mir/transform/check_consts/validation.rs--4--1--5   .../transform/check_consts/post_drop_elaboration.rs--1--1--2,Adaptive,
98386,63df1e9085c14b80cc86df55b234d16627f09b01,librustc: remove already addressed XXX, ,1,1,   src/librustc/middle/trans/asm.rs--0--1--1,Perfective,
109676,50670eb4267b165441b8cb36739a636887cc683c,Removing trailing whitespace in rust_shape.cpp, ,1,2,   src/rt/rust_shape.cpp--1--1--2,Perfective,
55024,aade0d563e1eb668566872d4c300a734b67f6600,Make lint work on all members of ast::Item_, ,5,51,   tests/ui/empty_line_after_outer_attribute.stderr--23--1--24   tests/ui/empty_line_after_outer_attribute.rs--21--0--21   tests/ui/inline_fn_without_body.stderr--1--2--3   clippy_lints/src/attrs.rs--1--1--2   tests/ui/inline_fn_without_body.rs--0--1--1,Adaptive,
63361,76041b8ffafa93ccd32b4fd8b5912151cbb066f7,Rustup to *rustc 1.19.0-nightly (06fb4d256 2017-04-30)*, ,2,8,   clippy_lints/src/len_zero.rs--3--3--6   clippy_lints/src/lifetimes.rs--1--1--2,Perfective,
4038,2c004a228751aed8a271e16d74c96d8037b6e655,encode `generics_of` of fields and ty params, ,6,74,   .../const-generics/parent_generics_of_encoding.rs--22--0--22   .../const-generics/auxiliary/generics_of_parent.rs--20--0--20   .../parent_generics_of_encoding_impl_trait.stderr--12--0--12   .../parent_generics_of_encoding_impl_trait.rs--10--0--10   .../auxiliary/generics_of_parent_impl_trait.rs--6--0--6   compiler/rustc_metadata/src/rmeta/encoder.rs--2--2--4,Adaptive,
112967,ed1dddc33f2dfb6f9247ae877e64fead5642f360,Null-check on obj box ptr  init to null. Un-XFAIL simple-obj.rs., ,2,35,   src/comp/middle/trans.rs--26--8--34   src/Makefile--1--0--1,Adaptive,
47046,daa4f0ad34f79a91a6ae27fec6d56dd95e6feac2,Implement backwards compatibility changes introduced by rust-lang/rust#53762, ,2,24,   clippy_lints/src/lib.rs--10--10--20   src/driver.rs--2--2--4,Adaptive,
6021,e1aa45b64d29ef03511c4fbd359ee42c6bb342ba,Use explicit drop impl, ,1,21,   compiler/rustc_interface/src/passes.rs--13--8--21,Perfective,
59036,dd0dcdf1acf3e01ad7e0452cb6193c286b1875ee,Fix a budget bug in Arg::rewrite(), ,3,37,   tests/source/impls.rs--13--0--13   tests/target/impls.rs--13--0--13   src/items.rs--6--5--11,Corrective,
14420,6e58b1c3c98446297bfc4dec1041238d599a1bb7,add mipsel_unknown_none target, ,2,23,   .../rustc_target/src/spec/mipsel_unknown_none.rs--22--0--22   compiler/rustc_target/src/spec/mod.rs--1--0--1,Adaptive,
36851,80df64b7d4a7718d4c5ece9c627e95cfd6084bce,ci: retry s3 upload on azure if it fails, ,1,3,   .azure-pipelines/steps/run.yml--2--1--3,Perfective,
7376,91a8611b4426c7da8c72317516626affb812d20b,move misc_early to misc_early/mod.rs, ,1,0,   clippy_lints/src/{misc_early.rs=>misc_early/mod.rs}--0--0--0,Perfective,
25560,0edc90cd1884c945b00512d2dede33c8a725ceb4,clarify alignment requirements in Vec::from_raw_parts, ,1,6,   src/liballoc/vec.rs--5--1--6,Perfective,
98027,53f54dda60a769fa6b3d325f5787134bc9d90c6b,librustc: Remove def_ids from types., ,5,58,   src/librustc/middle/ty.rs--4--19--23   src/librustc/metadata/tyencode.rs--0--13--13   src/librustc/middle/typeck/collect.rs--1--10--11   src/librustc/metadata/decoder.rs--1--6--7   src/librustc/metadata/tydecode.rs--2--2--4,Perfective,
35191,022b9876c2c70ac80174a4c78826113b9a965cbc,UI Test Cleanup: Extract match_ref_pats tests, ,4,105,   tests/ui/matches.stderr--9--32--41   tests/ui/match_ref_pats.stderr--24--0--24   tests/ui/match_ref_pats.rs--21--0--21   tests/ui/matches.rs--1--18--19,Perfective,
101264,f8179b6d4d6c290db57d3cdc8c340655ba5f5619,Hack around llvm 14013, ,1,2,   src/llvm--1--1--2,Perfective,
60287,c7104be1a37daa2f7ec114913247dc93524fd48e,Fix typos & us spellings, ,47,118,   src/librustc_trans/debuginfo/doc.rs--4--4--8   src/libcore/num/dec2flt/rawfp.rs--3--3--6   src/liballoc/allocator.rs--3--3--6   src/libgraphviz/lib.rs--3--3--6   src/librand/isaac.rs--2--2--4   src/liballoc/raw_vec.rs--2--2--4   src/librustc_errors/diagnostic.rs--2--2--4   src/libcore/ops/try.rs--1--1--2   src/libcore/sync/atomic.rs--1--1--2   src/librand/distributions/gamma.rs--1--1--2   src/bootstrap/lib.rs--1--1--2   src/librand/lib.rs--1--1--2   src/librand/reseeding.rs--1--1--2   src/librustc/hir/map/mod.rs--1--1--2   src/librustc/infer/error_reporting/mod.rs--1--1--2   src/librustc/infer/resolve.rs--1--1--2   src/librustc/lint/context.rs--1--1--2   src/librustc/middle/region.rs--1--1--2   src/librustc/mir/traversal.rs--1--1--2   src/librustc/traits/fulfill.rs--1--1--2   src/librustc/ty/context.rs--1--1--2   src/librustc/ty/inhabitedness/def_id_forest.rs--1--1--2   src/librustc/ty/sty.rs--1--1--2   src/librustc_data_structures/accumulate_vec.rs--1--1--2   src/librustc_data_structures/ivar.rs--1--1--2   src/librustc_data_structures/small_vec.rs--1--1--2   src/librustc_driver/driver.rs--1--1--2   src/bootstrap/native.rs--1--1--2   src/librustc_errors/diagnostic_builder.rs--1--1--2   src/librustc_errors/emitter.rs--1--1--2   src/librustc_errors/snippet.rs--1--1--2   src/librustc_incremental/persist/preds/compress/construct.rs--1--1--2   src/librustc_trans/attributes.rs--1--1--2   src/librustc_trans/base.rs--1--1--2   src/liballoc/btree/node.rs--1--1--2   src/librustdoc/html/highlight.rs--1--1--2   src/librustdoc/html/toc.rs--1--1--2   src/librustdoc/lib.rs--1--1--2   src/libstd/ffi/c_str.rs--1--1--2   src/libstd/ffi/os_str.rs--1--1--2   src/libstd/sync/once.rs--1--1--2   src/libstd/sys/redox/args.rs--1--1--2   src/libstd/sys/unix/args.rs--1--1--2   src/libstd/thread/mod.rs--1--1--2   src/libstd/time/mod.rs--1--1--2   src/libsyntax/json.rs--1--1--2   src/libsyntax_ext/deriving/generic/mod.rs--1--1--2,Perfective,
66453,00645e85043b9830118d4c9aecb59cc2c041b437,Add JoinHandle missing examples, ,1,46,   src/libstd/thread/mod.rs--40--6--46,Perfective,
98421,bd77e9433f5a76530c3d2acf0fa82caa5167e263,syntax: pass some values around by reference, ,2,12,   src/libsyntax/ext/quote.rs--4--4--8   src/libsyntax/print/pprust.rs--2--2--4,Perfective,
5249,913c0bc01dbab632d1512f703c026aac7acfa197,Make vtable_allocation always succeed, ,1,5,   src/vtable.rs--1--4--5,Corrective,
113096,e233978891d5b93641e1365e7448d20cdc8b0a12,rustc: Change fn_names and fn_ids to item_names and item_ids in trans  since we're soon to be storing tags in there too, ,1,24,   src/comp/middle/trans.rs--12--12--24,Perfective,
54669,42120141bd8e9684143dd61e6d37da8541a94d0f,Suggestion fixed  simplified lint logic., ,4,47,   clippy_lints/src/redundant_field_names.rs--11--20--31   tests/ui/redundant_field_names.stderr--5--5--10   tests/ui/redundant_field_names.rs--3--1--4   src/driver.rs--1--1--2,Perfective,
57790,7d774c4214e94136eca45df1c81f2baeab15e91e,Update mir-opt tests., ,5,25,   src/test/mir-opt/copy_propagation.rs--4--1--5   src/test/mir-opt/deaggregator_test.rs--4--1--5   src/test/mir-opt/deaggregator_test_enum_2.rs--4--1--5   src/test/mir-opt/deaggregator_test_multiple.rs--4--1--5   src/test/mir-opt/issue-41110.rs--4--1--5,Perfective,
106072,0263039ca0350eb67ce11e985bd7e698de48ca0f,use absolute names when pretty-printing types, ,8,133,   src/comp/util/ppaux.rs--24--19--43   src/comp/middle/ty.rs--14--14--28   src/comp/middle/typeck.rs--17--11--28   src/comp/metadata/decoder.rs--6--4--10   src/comp/metadata/tyencode.rs--4--4--8   Makefile.in--5--2--7   src/comp/metadata/tydecode.rs--2--4--6   src/etc/ctags.rust--3--0--3,Perfective,
1746,d4f3cf03f940607f1e77fc2c1b27d8ae0b804408,Add test for <code> in doc blocks on mobile, ,2,12,   src/test/rustdoc-gui/docblock-big-code-mobile.goml--9--0--9   src/test/rustdoc-gui/src/test_docs/lib.rs--3--0--3,Perfective,
44678,8a61d492a97d829638f60b19ac2196e7b9076720,make inliner remove the fn_entry flag on Retag statements, ,3,65,   src/test/mir-opt/inline-retag.rs--36--0--36   src/librustc/mir/visit.rs--16--6--22   src/librustc_mir/transform/inline.rs--7--0--7,Adaptive,
57356,11c84c6625d5e9374aa4f8a60b67c3c4a6f233b6,Nit: improve comment to explain why we wait until regionck, ,1,22,   src/librustc/infer/outlives/obligations.rs--13--9--22,Perfective,
11051,ce9818f2b7beaed0039f42605e2f547e9e461430,Add a new ABI to support cmse_nonsecure_call,"This commit adds a new ABI to be selected via `extern  ""C-cmse-nonsecure-call""` on function pointers in order for the compiler to  apply the corresponding cmse_nonsecure_call callsite attribute.  For Armv8-M targets supporting TrustZone-M  this will perform a  non-secure function call by saving  clearing and calling a non-secure  function pointer using the BLXNS instruction.    See the page on the unstable book for details.    Signed-off-by: Hugues de Valon <hugues.devalon@arm.com>   ",35,76,   .../language-features/abi-c-cmse-nonsecure-call.md--22--0--22   .../cmse-nonsecure-call/params-on-stack.rs--5--0--5   .../cmse-nonsecure-call/params-on-registers.rs--4--0--4   compiler/rustc_codegen_llvm/src/abi.rs--3--1--4   .../wrong-abi-location-2.stderr--3--0--3   .../wrong-abi-location-1.stderr--3--0--3   compiler/rustc_typeck/src/check/check.rs--3--0--3   .../rustc_error_codes/src/error_codes/E0781.md--3--0--3   .../cmse-nonsecure-call/gate_test.rs--3--0--3   .../cmse-nonsecure-call/gate_test.stderr--3--0--3   compiler/rustc_ast_passes/src/feature_gate.rs--2--0--2   .../cmse-nonsecure-call/params-on-stack.stderr--2--0--2   .../cmse-nonsecure-call/wrong-abi-location-1.rs--2--0--2   .../cmse-nonsecure-call/wrong-abi-location-2.rs--2--0--2   src/test/ui/codemap_tests/unicode.stderr--1--1--2   compiler/rustc_llvm/llvm-wrapper/RustWrapper.cpp--2--0--2   src/test/ui/parser/issue-8537.stderr--1--1--2   compiler/rustc_codegen_cranelift/src/abi/mod.rs--1--0--1   compiler/rustc_codegen_llvm/src/llvm/ffi.rs--1--0--1   compiler/rustc_codegen_llvm/src/llvm/mod.rs--1--0--1   compiler/rustc_error_codes/src/error_codes.rs--1--0--1   compiler/rustc_feature/src/active.rs--1--0--1   compiler/rustc_middle/src/ty/layout.rs--1--0--1   compiler/rustc_span/src/symbol.rs--1--0--1   compiler/rustc_target/src/abi/call/mod.rs--1--0--1   compiler/rustc_target/src/spec/abi.rs--1--0--1   .../cmse-nonsecure-entry/gate_test.rs--0--0--0   .../cmse-nonsecure-entry/gate_test.stderr--0--0--0   .../cmse-nonsecure-entry/params-on-registers.rs--0--0--0   .../cmse-nonsecure-entry/params-on-stack.rs--0--0--0   .../cmse-nonsecure-entry/params-on-stack.stderr--0--0--0   .../cmse-nonsecure-entry/trustzone-only.rs--0--0--0   .../cmse-nonsecure-entry/trustzone-only.stderr--0--0--0   .../cmse-nonsecure-entry/wrong-abi.rs--0--0--0   .../cmse-nonsecure-entry/wrong-abi.stderr--0--0--0,Adaptive,
42387,11b957e18d36c348279295ad056a1a535d8e9780,Reformat random_state tests, ,1,2,   tests/ui/random_state.rs--1--1--2,Perfective,
74443,d755b1ebe2204b93c8ab82c6c04699a9e20921f5,Cleanup, ,3,38,   tests/ice-666.rs--0--24--24   tests/compile-fail/derive.rs--11--0--11   src/derive.rs--0--3--3,Perfective,
102790,2cfe8fb357f8ad7e99dc03b09e0ec5fa1c2c9029,rustc: Check self types in method lookup; allow required trait methods to have self types; write self types into metadata, ,11,122,   src/rustc/metadata/decoder.rs--31--2--33   src/rustc/metadata/encoder.rs--32--1--33   src/rustc/middle/typeck/check/method.rs--18--2--20   src/rustc/middle/resolve3.rs--12--6--18   src/etc/vim/syntax/rust.vim--4--2--6   src/rustc/middle/typeck/coherence.rs--2--2--4   src/libsyntax/ast.rs--1--1--2   src/rustc/metadata/common.rs--2--0--2   src/rustc/middle/typeck/collect.rs--2--0--2   src/libsyntax/parse/parser.rs--1--0--1   src/rustc/middle/ty.rs--1--0--1,Adaptive,
16562,8a59808b24a728a7034bd697206c4921211569ba,Improve readme, ,2,35,   Readme.md--2--16--18   docs/env_vars.md--17--0--17,Perfective,
23252,cf4e35339b1d5a613588b45c53d0e88da5363c65,Add an Option<Span> argument to span_lint_and_help., ,39,165,   clippy_lints/src/utils/internal_lints.rs--22--7--29   clippy_lints/src/utils/diagnostics.rs--15--6--21   clippy_lints/src/methods/mod.rs--11--6--17   tests/ui/collapsible_span_lint_calls.stderr--6--7--13   tests/ui/collapsible_span_lint_calls.fixed--10--3--13   tests/ui/collapsible_span_lint_calls.rs--8--1--9   clippy_lints/src/empty_enum.rs--4--3--7   clippy_lints/src/regex.rs--2--2--4   clippy_lints/src/types.rs--3--1--4   clippy_lints/src/assertions_on_constants.rs--3--0--3   clippy_lints/src/atomic_ordering.rs--3--0--3   clippy_lints/src/let_underscore.rs--3--0--3   clippy_lints/src/indexing_slicing.rs--2--1--3   clippy_lints/src/loops.rs--2--0--2   clippy_lints/src/if_not_else.rs--2--0--2   clippy_lints/src/inherent_to_string.rs--2--0--2   clippy_lints/src/excessive_bools.rs--2--0--2   clippy_lints/src/matches.rs--2--0--2   clippy_lints/src/mem_replace.rs--2--0--2   clippy_lints/src/misc_early.rs--2--0--2   clippy_lints/src/unnamed_address.rs--2--0--2   clippy_lints/src/verbose_file_reads.rs--2--0--2   doc/adding_lints.md--2--0--2   clippy_lints/src/else_if_without_else.rs--1--0--1   clippy_lints/src/needless_continue.rs--1--0--1   clippy_lints/src/option_env_unwrap.rs--1--0--1   clippy_lints/src/enum_variants.rs--1--0--1   clippy_lints/src/trait_bounds.rs--1--0--1   clippy_lints/src/formatting.rs--1--0--1   clippy_lints/src/functions.rs--1--0--1   clippy_lints/src/unused_self.rs--1--0--1   clippy_lints/src/integer_division.rs--1--0--1   clippy_lints/src/large_stack_arrays.rs--1--0--1   clippy_lints/src/as_conversions.rs--1--0--1   clippy_lints/src/zero_div_zero.rs--1--0--1   clippy_lints/src/cognitive_complexity.rs--1--0--1   clippy_lints/src/comparison_chain.rs--1--0--1   clippy_lints/src/dbg_macro.rs--1--0--1   clippy_lints/src/main_recursion.rs--1--0--1,Adaptive,
111870,05587ebdff53def560e04e853fbb3c272fa586d6,rustc: Ignore the return value of native functions that return nil. stage1 can build libstd now  though it leaks., ,1,11,   src/comp/middle/trans.rs--10--1--11,Perfective,
12067,bceb1737ed2ba6dbf8e294519011f0e4e264b7a3,Apply suggestions from code review & other minor nits,Co-authored-by: Joshua Nelson <joshua@yottadb.com>   ,1,17,   src/librustdoc/visit_ast.rs--10--7--17,Perfective,
13242,415394c3fc0e008026b3f2a37fbd57a58449b4d3,Fix false positive in write_literal and print_literal due to numeric literals, ,1,22,   clippy_lints/src/write.rs--17--5--22,Corrective,
26239,97bdd31b0eab51d0a51b8746123f910cd868dff3,"Add ""soft deprecation"" notice to old MIN/MAX docs", ,2,53,   src/libcore/num/uint_macros.rs--28--6--34   src/libcore/num/int_macros.rs--13--6--19,Perfective,
16219,55ba9e4755eb47555417c311b867bce6196da462,Reorder benches const variable,Move LEN so it is is read in order. ,1,4,   library/alloc/benches/vec.rs--2--2--4,Perfective,
113157,1090c5e69cc10f8d7e57c4790461046de068f7aa,Check for structural equality rather than structural-and-cname equality., ,1,2,   src/comp/middle/typeck.rs--1--1--2,Corrective,
3221,33817d2881843bb84a01551813c522891ce0c5c6,Move match tests in match folder, ,6,44,   .../match/match-edge-cases_2.rs--22--0--22   .../{match-edge-cases.rs=>match-edge-cases_1.rs}--0--20--20   ...edge-cases.stderr=>match-edge-cases_2.stderr}--1--1--2   .../{=>match}/issue-87988.rs--0--0--0   .../{=>match}/issue-88331.rs--0--0--0   .../{=>match}/issue-88331.stderr--0--0--0,Perfective,
25864,df11447ca8ccafd14de5d46b885ca73ead121b8d,Update Clippy, ,1,2,   src/tools/clippy--1--1--2,Perfective,
80805,1884c87207369be9bdfc9b765d67c4dbbb08d3d6,doc: Fix remove secret number at final source,Remove printing of secret number at final source. ,1,2,   src/doc/trpl/guessing-game.md--0--2--2,Perfective,
35392,a138e9d625bf83c45d3835b12d7689b730dc4e9a,expand: Get rid of `resolve_macro_path`,It was used to choose whether to apply derive markers like `#[rustc_copy_clone_marker]` or not   but it was called before all the data required for resolution is available  so it could work incorrectly in some corner cases (like user-defined derives name `Copy` or `Eq`).  Delay the decision about markers until the proper resolution results are available instead.   ,3,32,   src/libsyntax/ext/expand.rs--11--11--22   src/librustc_resolve/macros.rs--0--7--7   src/libsyntax/ext/base.rs--0--3--3,Corrective,
3713,9a0ee05c3d7f355d00c365b9589c7924e40b19ab,Split critical edge targeting the start block, ,2,14,   src/test/ui/codegen/issue-88043-bb-does-not-have-terminator.rs--10--0--10   compiler/rustc_mir/src/transform/add_call_guards.rs--3--1--4,Perfective,
78345,8aeaaac6545565345f4df7d24d6421f93f28d698,add a fast-path to resolve_type_vars_if_possible,this avoids needless substituting    before:  577.76user 4.27system 7:36.13elapsed 127%CPU (0avgtext+0avgdata 1141608maxresident)k    after:  573.01user 4.04system 7:33.86elapsed 127%CPU (0avgtext+0avgdata 1141656maxresident)k   ,6,48,   src/librustc/middle/ty.rs--26--0--26   src/librustc/middle/infer/mod.rs--6--2--8   src/librustc/middle/traits/project.rs--6--0--6   src/librustc/middle/ty_relate/mod.rs--2--2--4   src/librustc/middle/infer/higher_ranked/mod.rs--1--1--2   src/librustc/middle/traits/error_reporting.rs--1--1--2,Perfective,
86595,79723a3e304bb74e3c5280b504603c764dc574e1,"Revert ""enable parallel codegen by default""",This reverts commit c245c5bbad10923b47c9f66d5f0da2913ef11a38.    Parallel code generation generates invalid code for librand  which is  caught by recent versions of binutils.   ,3,26,   src/librustc/driver/config.rs--1--14--15   mk/main.mk--0--7--7   mk/tests.mk--0--4--4,Corrective,
28783,c7471ad43a60cbc84f8c3de9ad17401d3e5b4c4c,Compiler internal error codes need no documentation, ,1,3,   src/tools/tidy/src/error_codes_check.rs--3--0--3,Corrective,
8869,2da9856f171f909dd072bd59d190a036dc13fc38,Add internal io::Error::new_const tot avoid allocations., ,1,26,   library/std/src/io/error.rs--26--0--26,Adaptive,
12185,e152582a2b5c214d705c6c60e12dc4d996491081,doc -- list edit for consistency, ,1,2,   library/core/src/iter/adapters/zip.rs--1--1--2,Perfective,
108495,6e654564db85819ef401eeb4e950acf02096796c,Lots of build system cleanup and documentation,This splits mk/stageN.mk into host.mk and target.mk and makes  the build rules somewhat simpler - there's no more building from stageN  into stageN+1; instead we always build from stageN(host) to  stageN(target) then promote from stageN(target) to stageN+1(host).    Add a big honkin explaination right at the top of Makefile.in   ,10,208,   mk/stageN.mk--0--58--58   Makefile.in--38--15--53   mk/target.mk--31--0--31   mk/host.mk--29--0--29   mk/fuzzer.mk--8--4--12   mk/stage0.mk--4--4--8   mk/clean.mk--4--2--6   mk/snap.mk--2--3--5   configure--3--0--3   mk/install.mk--1--2--3,Perfective,
84145,fd603cd2634c59bd7286a8c962279c97e3374075,Clarify function return style.,Suggested here: http://stackoverflow.com/a/27962076/24817   ,1,18,   src/doc/trpl/functions.md--18--0--18,Perfective,
30290,1b8b2ee6f9e9e1fe109f40be4c756619d5c9aa3f,add raw ptr variant of UnsafeCell::get, ,1,30,   src/libcore/cell.rs--30--0--30,Adaptive,
39504,f8bffad4f1f0650ae56e17221d9443f9c2a6ab20,Use `curl` instead of `wget` in install-x86_64-redox.sh, ,1,2,   src/ci/docker/dist-various-1/install-x86_64-redox.sh--1--1--2,Perfective,
4324,cca91024298b92f5bff5fc7353155aff0eef38e5,Change bitmasks to use less opaque type, ,4,31,   crates/core_simd/src/masks/bitmask.rs--6--4--10   crates/core_simd/src/masks/full_masks.rs--5--5--10   crates/core_simd/src/lane_count.rs--6--1--7   crates/core_simd/src/masks.rs--2--2--4,Perfective,
50877,948f77c71ff8fdfda0bec2f335498e8de075799a,tweak debug output some more, ,2,11,   src/librustc_mir/dataflow/impls/borrows.rs--7--2--9   src/librustc_mir/borrow_check/nll/region_infer/mod.rs--1--1--2,Perfective,
106947,bb1e8d2339cfb360c845b7435e97b4f5eb241991,rustc: Some more codemap refactoring, ,1,45,   src/comp/syntax/codemap.rs--21--24--45,Perfective,
58690,29b319b6b20bb8e18b7e3c14528f9933de2f5e92,Change current_pid to just `id`., ,1,7,   src/libstd/process.rs--4--3--7,Perfective,
82340,432011d1437ce046c25dde8a4db67dac63c19ed0,Fallout in testing., ,10,59,   src/libsyntax/test.rs--12--5--17   src/test/compile-fail/privacy1.rs--3--13--16   src/doc/reference.md--5--3--8   ...n-signature-verification-for-explicit-return-type.rs--2--2--4   src/test/run-pass/test-should-fail-good-message.rs--2--2--4   src/test/auxiliary/privacy_reexport.rs--1--1--2   src/test/compile-fail/lint-dead-code-3.rs--1--1--2   src/test/run-pass/issue-16597.rs--1--1--2   src/test/run-pass/issue-20823.rs--1--1--2   src/test/run-pass/issue-5950.rs--1--1--2,Perfective,
66389,b059a80d4c3911a9e59d517930ee6928b329cc35,Support --emit=foo metadata, ,3,40,   src/librustc_trans/back/link.rs--21--11--32   src/librustc/session/config.rs--6--0--6   src/librustc/middle/dependency_format.rs--1--1--2,Adaptive,
101049,2d7d12b902a9f6237994f74888878220cb2ffbed,Make moves explicit in compiletest, ,2,6,   src/compiletest/procsrv.rs--2--2--4   src/compiletest/compiletest.rs--1--1--2,Perfective,
64811,e294fd5ecbd097e343dc31b3df27bbf81dbea6de,convert AdtDef::destructor to on-demand,This removes the Cell from AdtDef. Also  moving destructor validity  checking to on-demand (forced during item-type checking) ensures that  invalid destructors can't cause ICEs.    Fixes #38868.  Fixes #40132.   ,11,106,   src/librustc/ty/mod.rs--13--23--36   src/librustc_typeck/check/mod.rs--9--12--21   src/librustc/ty/util.rs--12--7--19   src/test/compile-fail/issue-38868.rs--9--0--9   src/librustc_typeck/check/dropck.rs--4--4--8   src/librustc_trans/collector.rs--2--2--4   src/librustc/dep_graph/dep_node.rs--1--2--3   src/librustc_metadata/cstore_impl.rs--2--0--2   src/librustc_trans/glue.rs--1--1--2   src/librustc/ty/maps.rs--1--0--1   src/librustc_typeck/lib.rs--0--1--1,Corrective,
46381,a4e1a90705259ebd4fb0f8e476366b07a1d6b669,Fix warnings of compiler_lint_functions, ,1,9,   clippy_lints/src/double_parens.rs--5--4--9,Corrective,
59331,48ed3c058f0e24dab66ce486d0080e96634529c6,Extend MANUAL_MEMCPY lint so that it also detects manual clones between slices, ,2,29,   clippy_lints/src/loops.rs--18--1--19   tests/ui/for_loop.stderr--9--1--10,Adaptive,
69543,e4dd785b591b771882b1c61a541048d57dc86442,Correct formatting docs: fmt::Result != io::Result<()>, ,1,6,   src/libcollections/fmt.rs--3--3--6,Corrective,
100290,2f3d4f61817fcfe48c03990f94175258bdbcc0cb,rewrite uint::to_str_bytes to avoid raw pointers, ,1,44,   src/libcore/uint-template.rs--18--26--44,Perfective,
30817,fb4095df94bf07dc745a0c0e07adc93b52f04673,Update comments re type parameter hack in object safety,To check if a method's receiver type is object safe  we create a new receiver type by substituting in a bogus type parameter (let's call it `U`) for `Self`  and checking that the unmodified receiver type implements `DispatchFromDyn<receiver type with Self = U>`. It would be better to use `dyn Trait` directly  and the only reason we don't is because it triggers another check that `Trait` is object safe  resulting in a query cycle. Once the feature `object_safe_for_dispatch` (tracking issue https://github.com/rust-lang/rust/issues/43561) is stabilized  this will no longer be the case  and we'll be able to use `dyn Trait` as the unsized `Self` type. I've updated the comments in object_safety.rs accordingly. ,1,12,   src/librustc/traits/object_safety.rs--7--5--12,Perfective,
103467,debb7e4641af2ea71cf8733b3f071d614803dcbd,Switch 'native' to 'extern' (or 'foreign' in some descriptions), ,127,328,   src/libcore/libc.rs--11--11--22   src/libstd/uv_ll.rs--6--7--13   src/rustc/middle/trans/foreign.rs--6--7--13   src/rustdoc/markdown_pass.rs--3--3--6   src/libstd/c_vec.rs--2--3--5   src/rustc/metadata/decoder.rs--2--3--5   src/test/run-pass/foreign-src/foreign.rs--5--0--5   src/test/run-pass/{native2.rs=>foreign2.rs}--2--3--5   src/test/run-pass/item-attributes.rs--2--3--5   src/test/run-pass/native-src/native.rs--0--5--5   src/libcore/str.rs--2--2--4   src/libcore/vec.rs--2--2--4   src/test/compile-fail/block-coerce-no.rs--2--2--4   src/test/run-pass/generic-temporary.rs--2--2--4   src/libcore/io.rs--1--2--3   src/libcore/stackwalk.rs--1--2--3   src/libcore/task.rs--1--2--3   src/rustc/back/link.rs--1--2--3   src/rustc/middle/lint.rs--1--2--3   src/rustc/middle/typeck/check.rs--1--2--3   src/rustdoc/markdown_index_pass.rs--1--2--3   src/test/run-pass/conditional-compile.rs--1--2--3   src/fuzzer/fuzzer.rs--1--1--2   src/libcore/arc.rs--1--1--2   src/libcore/cmath.rs--1--1--2   src/libcore/comm.rs--1--1--2   src/libcore/logging.rs--1--1--2   src/libcore/os.rs--1--1--2   src/libcore/priv.rs--1--1--2   src/libcore/ptr.rs--1--1--2   src/libcore/rand.rs--1--1--2   src/libcore/run.rs--1--1--2   src/libcore/sys.rs--1--1--2   src/libcore/unsafe.rs--1--1--2   src/libstd/dbg.rs--1--1--2   src/libstd/net_tcp.rs--1--1--2   src/libstd/test.rs--1--1--2   src/libstd/time.rs--1--1--2   src/libstd/unicode.rs--1--1--2   src/libstd/uv_global_loop.rs--1--1--2   src/libsyntax/ast.rs--1--1--2   src/libsyntax/ast_map.rs--1--1--2   src/rustc/back/rpath.rs--1--1--2   src/rustc/front/intrinsic.rs--1--1--2   src/rustc/lib/llvm.rs--1--1--2   src/rustc/metadata/creader.rs--1--1--2   src/rustc/middle/resolve.rs--1--1--2   src/rustc/middle/trans/base.rs--1--1--2   src/rustc/middle/typeck.rs--1--1--2   src/rustc/middle/typeck/collect.rs--1--1--2   src/rustdoc/attr_pass.rs--1--1--2   src/rustdoc/extract.rs--1--1--2   src/rustdoc/page_pass.rs--1--1--2   src/rustdoc/path_pass.rs--1--1--2   src/rustdoc/reexport_pass.rs--1--1--2   src/rustdoc/sort_item_type_pass.rs--1--1--2   src/rustdoc/tystr_pass.rs--1--1--2   src/test/auxiliary/foreign_lib.rs--1--1--2   src/test/auxiliary/test_comm.rs--1--1--2   src/test/bench/shootout-nbody.rs--1--1--2   src/test/compile-fail/bad-main.rs--1--1--2   .../bad-var-env-capture-in-block-arg.rs--1--1--2   src/test/compile-fail/block-coerce-no-2.rs--1--1--2   src/test/compile-fail/crust-no-call.rs--1--1--2   src/test/compile-fail/empty-linkname.rs--1--1--2   src/test/compile-fail/empty-linkname2.rs--1--1--2   ...fe-fn-called.rs=>foreign-unsafe-fn-called.rs}--1--1--2   .../{native-unsafe-fn.rs=>foreign-unsafe-fn.rs}--1--1--2   src/test/compile-fail/nolink-with-link-args.rs--1--1--2   src/test/compile-fail/redundant-link-args.rs--1--1--2   src/test/compile-fail/unsupported-cast.rs--1--1--2   src/test/compile-fail/warn-ctypes-err-attr.rs--1--1--2   src/test/compile-fail/warn-ctypes.rs--1--1--2   ...tive-int-types.rs=>warn-foreign-int-types.rs}--1--1--2   src/test/run-fail/crust-fail.rs--1--1--2   src/test/run-fail/morestack2.rs--1--1--2   src/test/run-pass/binops.rs--1--1--2   src/test/run-pass/c-stack-as-value.rs--1--1--2   src/test/run-pass/c-stack-returning-int64.rs--1--1--2   src/test/run-pass/class-dtor.rs--1--1--2   src/test/run-pass/crust-call-deep.rs--1--1--2   src/test/run-pass/crust-call-deep2.rs--1--1--2   src/test/run-pass/crust-call-scrub.rs--1--1--2   src/test/run-pass/crust-call.rs--1--1--2   src/test/run-pass/crust-stress.rs--1--1--2   src/test/run-pass/crust-yield.rs--1--1--2   src/test/run-pass/expr-block-fn.rs--1--1--2   src/test/run-pass/fixed-point-bind-box.rs--1--1--2   src/test/run-pass/fixed-point-bind-unique.rs--1--1--2   src/test/run-pass/fn-bare-assign.rs--1--1--2   src/test/run-pass/fn-bare-spawn.rs--1--1--2   src/test/run-pass/fn-lval.rs--1--1--2   .../run-pass/{native-dupe.rs=>foreign-dupe.rs}--1--1--2   ...ative-fn-linkname.rs=>foreign-fn-linkname.rs}--1--1--2   .../{native-lib-path.rs=>foreign-lib-path.rs}--1--1--2   .../{native-no-abi.rs=>foreign-no-abi.rs}--1--1--2   .../{native-struct.rs=>foreign-struct.rs}--1--1--2   src/test/run-pass/fun-indirect-call.rs--1--1--2   src/test/run-pass/hashmap-memory.rs--1--1--2   ...mport-from-native.rs=>import-from-foreign.rs}--1--1--2   src/test/run-pass/import-glob-1.rs--1--1--2   src/test/run-pass/intrinsic-alignment.rs--1--1--2   src/test/run-pass/intrinsic-atomics.rs--1--1--2   src/test/run-pass/intrinsic-frame-address.rs--1--1--2   src/test/run-pass/intrinsic-move-val.rs--1--1--2   src/test/run-pass/issue-1251.rs--1--1--2   src/test/run-pass/issue-1866.rs--1--1--2   src/test/run-pass/issue-2214.rs--1--1--2   src/test/run-pass/issue-506.rs--1--1--2   src/test/run-pass/morestack6.rs--1--1--2   src/test/run-pass/newtype.rs--1--1--2   ...il-decl-in-native.rs=>nil-decl-in-foreign.rs}--1--1--2   src/test/run-pass/rec-align-u32.rs--1--1--2   src/test/run-pass/rec-align-u64.rs--1--1--2   src/test/run-pass/resource-generic.rs--1--1--2   src/test/run-pass/rt-sched-1.rs--1--1--2   src/test/run-pass/sendfn-generic-fn.rs--1--1--2   src/test/run-pass/struct-return.rs--1--1--2   src/test/run-pass/tail-cps.rs--1--1--2   src/test/run-pass/type-param.rs--1--1--2   src/test/run-pass/type-params-in-for-each.rs--1--1--2   src/test/run-pass/warn-ctypes-inhibit.rs--1--1--2   src/test/run-pass/x86stdcall.rs--1--1--2   src/test/run-pass/x86stdcall2.rs--1--1--2   .../{native-mod-src=>foreign-mod-src}/inner.rs--0--0--0   .../run-pass/{native-mod.rc=>foreign-mod.rc}--0--0--0   src/test/run-pass/{native.rc=>foreign.rc}--0--0--0,Perfective,
62191,163d40d1d86d06b6c937ec5a062a134025984b4f,Update test/codegen/drop.rs to reflect inconsequential change in basic block ordering., ,1,2,   src/test/codegen/drop.rs--1--1--2,Perfective,
4767,ede41d1b984d51c6023eb7381930600fa3c143aa,[CI] Update package list before installing packages, ,1,2,   .github/workflows/main.yml--2--0--2,Perfective,
53744,a41947cd7d6ea1786fe699bdb8c51737f9e239f4,Enable doctests,Doctests were disabled globally because up until #2456  they were just  formatting examples which were not supposed to compile. Now that there  is one runnable doctest  I disabled the other ones individually (by  adding the ignore directive).    I also added some empty lines around the code blocks to avoid the  following warning and instead ignore the code blocks cleanly:    WARNING: ... Code block is not currently run as a test  but will in  future versions of rustdoc. Please ensure this code block is a runnable  test  or use the `ignore` directive.    See rust-lang/rust#28712 for further details.   ,3,26,   src/chains.rs--10--4--14   src/macros.rs--6--3--9   Cargo.toml--0--3--3,Perfective,
18190,c5975e9b6c5781b3b7300b7921c14b060086e1c1,Reduce duplicate in liballoc reserve error handling, ,1,28,   library/alloc/src/raw_vec.rs--13--15--28,Perfective,
44861,3db14f182c4dce4d6ace923c291456e7d1249bc9,Check existential types in `use_self`, ,3,24,   tests/ui/use_self.rs--14--0--14   tests/ui/use_self.stderr--7--1--8   clippy_lints/src/use_self.rs--1--1--2,Perfective,
96125,42344af71381b7f45de3570e322eaaee59d83229,Correct handling of if/match  and make explicit computation of common supertypes.,This was breaking with the change to regions because of the  (now incorrect) assumpton that our inference code makes   which is that if a <: b succeeds  there is no need to compute  the LUB/GLB.   ,12,84,   src/librustc/middle/typeck/check/mod.rs--8--13--21   src/librustc/middle/typeck/infer/mod.rs--13--5--18   src/test/compile-fail/lub-if.rs--11--0--11   src/test/compile-fail/lub-match.rs--11--0--11   src/librustc/middle/typeck/check/_match.rs--5--3--8   .../middle/typeck/infer/error_reporting.rs--2--2--4   src/librustc/middle/typeck/infer/combine.rs--1--1--2   src/librustc/middle/typeck/infer/glb.rs--1--1--2   src/librustc/middle/typeck/infer/lub.rs--1--1--2   src/librustc/middle/typeck/infer/sub.rs--1--1--2   src/test/compile-fail/if-branch-types.rs--1--1--2   .../middle/typeck/infer/region_inference.rs--1--0--1,Corrective,
34037,27ddbf4d168875605295c8bdc145c5026188de27,Avoid closures in the default <Zip as ZipImpl>::next, ,1,8,   src/libcore/iter/adapters/zip.rs--3--5--8,Perfective,
57452,9d71bf6d556e116e850c0d9b5f8975889b1ab575,add some more positive tests,It'd be good to have a positive test for each case where it is  allowed  I should think.   ,4,69,   .../impl-trait/universal_in_adt_in_parameters.rs--22--0--22   .../universal_in_trait_defn_parameters.rs--19--0--19   .../run-pass/impl-trait/universal_hrtb_anon.rs--14--0--14   .../run-pass/impl-trait/universal_hrtb_named.rs--14--0--14,Perfective,
12510,d2cc79eaa2785358a4d0343485122e06235f00c2,Bring back a top level heading, ,1,2,   README.md--2--0--2,Perfective,
109309,9c2abb8253190a0bbfd7b6880b2257966fc0484c,rt: Fix the calculation of the location of GC safe points, ,1,2,   src/rt/rust_gc.cpp--1--1--2,Corrective,
25487,b6466273ba3d019433a8665fb337bfedeaf209ef,remove output-format test, ,2,10,   src/test/rustdoc-ui/coverage/output-format-fail-check.stderr--0--6--6   src/test/rustdoc-ui/coverage/output-format-fail-check.rs--0--4--4,Perfective,
39514,b58e19db30906212eafb457243d832eebf4630df,Explicitly prefer dynamic linking in test case, ,1,1,   src/test/run-make-fulldeps/redundant-libs/Makefile--1--0--1,Perfective,
24653,17c94c6746e94a4349a05bbf6326bebe35893acc,fix FIXME comment,Co-Authored-By: varkor <github@varkor.com> ,1,2,   src/librustc_typeck/collect.rs--1--1--2,Perfective,
13645,db8b86b2df5646b00278720187a460a0027b107f,Fix typos, ,1,6,   compiler/rustc_query_system/src/query/job.rs--3--3--6,Perfective,
12400,434e5d142204d9b3019cfedc049d39b0affd08e7,refactor: moving DrainFilter into drain_filter.rs, ,2,68,   library/alloc/src/vec/drain_filter.rs--34--0--34   library/alloc/src/vec/mod.rs--2--32--34,Perfective,
99934,f99d6cab43f787f8887a488b21ba3cd9f8ab9de4,Long lines, ,1,7,   src/libcore/private.rs--5--2--7,Perfective,
88573,b5dd25888496d45f38ccae936fe2baee950c30f9,Document event_loop_factory usage,Add a couple of lines mentioning event_loop_factory - no clear error message is  given if you attempt to perform I/O in tasks created in this fashion.   ,1,11,   src/libgreen/lib.rs--10--1--11,Perfective,
21911,5728c5371dc27aa0572c99c692cede23a019b7ff,Use `HirId` as key for `ResolverOutputs::trait_map` instead of `NodeId`, ,4,30,   src/librustc_resolve/lib.rs--17--2--19   src/librustc_hir/definitions.rs--3--1--4   src/librustc_middle/ty/mod.rs--2--2--4   src/librustc_middle/ty/context.rs--1--2--3,Perfective,
25621,9523c89f18ca62c992e580fc33fe1bf092696d8d,use is_empty() instead of len() == x  to determine if structs are empty., ,54,160,   src/librustc/ty/context.rs--8--8--16   src/librustc_codegen_ssa/back/write.rs--6--6--12   src/librustc_resolve/late/diagnostics.rs--4--8--12   src/librustc_mir/interpret/eval_context.rs--3--3--6   src/librustc_typeck/check/pat.rs--3--3--6   src/librustdoc/html/render.rs--3--3--6   src/libcore/slice/mod.rs--2--2--4   src/librustc_codegen_ssa/back/link.rs--2--2--4   src/librustdoc/clean/mod.rs--2--2--4   src/librustc/mir/mod.rs--1--1--2   src/librustc/ty/instance.rs--1--1--2   src/librustc/ty/layout.rs--1--1--2   src/librustc/ty/mod.rs--1--1--2   src/librustc_ast_lowering/path.rs--1--1--2   src/librustc_ast_pretty/pprust.rs--1--1--2   src/librustc_builtin_macros/concat.rs--1--1--2   src/librustc_builtin_macros/format.rs--1--1--2   src/librustc_codegen_llvm/back/lto.rs--1--1--2   src/librustc_codegen_llvm/llvm_util.rs--1--1--2   src/librustc_data_structures/profiling.rs--1--1--2   src/librustc_errors/emitter.rs--1--1--2   src/librustc_errors/snippet.rs--1--1--2   src/librustc_infer/infer/canonical/query_response.rs--1--1--2   src/librustc_infer/infer/region_constraints/mod.rs--1--1--2   src/librustc_infer/traits/error_reporting/mod.rs--1--1--2   src/librustc_infer/traits/select.rs--1--1--2   src/librustc_lint/levels.rs--1--1--2   src/librustc_metadata/dependency_format.rs--1--1--2   src/librustc/arena.rs--1--1--2   src/librustc_mir/transform/uninhabited_enum_branching.rs--1--1--2   src/librustc_mir/util/elaborate_drops.rs--1--1--2   src/librustc_mir/util/patch.rs--1--1--2   src/librustc_mir_build/build/matches/mod.rs--1--1--2   src/librustc_mir_build/build/matches/test.rs--1--1--2   src/librustc_parse/lexer/tokentrees.rs--1--1--2   src/librustc_parse/lib.rs--1--1--2   src/librustc_parse/parser/path.rs--1--1--2   src/librustc_resolve/check_unused.rs--1--1--2   src/librustc_resolve/imports.rs--1--1--2   src/librustc_resolve/late.rs--1--1--2   src/librustc/dep_graph/graph.rs--1--1--2   src/librustc_session/config.rs--1--1--2   src/librustc_span/lib.rs--1--1--2   src/librustc_traits/dropck_outlives.rs--1--1--2   src/librustc_typeck/astconv.rs--1--1--2   src/librustc_typeck/check/op.rs--1--1--2   src/librustc/ich/hcx.rs--1--1--2   src/librustc_typeck/collect.rs--1--1--2   src/librustc/ich/impls_syntax.rs--1--1--2   src/librustdoc/clean/types.rs--1--1--2   src/librustc/mir/interpret/error.rs--1--1--2   src/librustdoc/theme.rs--1--1--2   src/libstd/backtrace.rs--1--1--2   src/libtest/formatters/json.rs--1--1--2,Perfective,
65859,b9765c085faf0b350ce9056856a0a7e188cc4ea9,trans: Exit earlier from base::trans_crate() when compiling rmeta crates., ,2,38,   src/librustc_trans/base.rs--17--16--33   src/librustc_trans/back/write.rs--3--2--5,Corrective,
107262,5d1cf2a872ec9269be9fffeab3bb913c9616797a,Out-of-order-code typo. Snapshot again., ,1,2,   src/comp/syntax/parse/parser.rs--1--1--2,Perfective,
113895,818fbfb3252687ab6ea8ba358d8d5d199f1e330a,Add more scratch files to .gitignore., ,1,3,   .gitignore--3--0--3,Perfective,
79838,96cce02924b83227b53799c2992f5040340528fc,std: Deprecate the `exit_status` feature,These two functions should be replaceable with the `process::exit` function.   ,1,2,   src/libstd/env.rs--2--0--2,Perfective,
90544,49dc0193bd664da733113f0baa43bfc7c094bf8b,middle: trans: base: remove dead code, ,1,39,   src/librustc/middle/trans/base.rs--1--38--39,Perfective,
62762,04367100cd75d1136445e11e93786e875f38a2de,fix DepNode,Ideally  we'd have the `Ty` inserted directly in the dep-node  but since  we can't do that yet  we extract the characteristic def-id of the type  in question.   ,1,28,   src/librustc/ty/maps.rs--16--12--28,Corrective,
18129,c62f433e46c8f3b122857021acb448e9b8fb7972,remove_unused_stack_addr_and_stack_load: Remove clone(), ,1,5,   src/optimize/stack2reg.rs--2--3--5,Perfective,
30755,e8016c2b13a7e16b6eed9e30b4b6bfe304750566,review comments, ,3,26,   src/libsyntax/parse/parser/diagnostics.rs--11--11--22   src/test/ui/macros/issue-54441.stderr--1--1--2   .../ui/parser/macro/trait-non-item-macros.stderr--1--1--2,Perfective,
114050,e8759934711c70c50b5d616be22104e649abff58,Doubly-link gc chain on alloc., ,1,28,   src/boot/me/trans.ml--23--5--28,Adaptive,
54759,63ee1cd846b92eb3a124ec345d4889bdb5bca8e3,Improve output a bit in case of error, ,2,32,   src/librustdoc/theme.rs--17--4--21   src/librustdoc/lib.rs--7--4--11,Perfective,
101573,f813f519a5cecfd988cf238277021662afaff34a,rt: Remove the cycle collector, ,6,56,   src/rt/rust_cc.cpp--0--49--49   src/rt/rust_cc.h--0--3--3   mk/rt.mk--0--1--1   src/rt/rust_task.cpp--0--1--1   src/rt/rust_task.h--0--1--1   src/rt/rust_upcall.cpp--0--1--1,Perfective,
51047,fe9a19580cd12adc2d0483bb549140fc6566a57e,Add documentation about env! second argument, ,1,17,   src/libstd/macros.rs--15--2--17,Perfective,
52222,11c62de242620d6ed738feff8ee3b2269b913fb7,mention that extern absolute paths should gate on rust 2018, ,1,2,   src/librustc_resolve/lib.rs--2--0--2,Perfective,
70398,27a18b127f4f02dbbdf12eec03b817ed3c3f0f68,macros: Fix bug in statement matchers, ,1,43,   src/libsyntax/parse/parser.rs--17--26--43,Corrective,
2599,97621162996c0746a528edaddb43c984e15a3d51,Move object safety suggestions to the end of the error, ,28,96,   compiler/rustc_infer/src/traits/error_reporting/mod.rs--8--4--12   src/test/ui/traits/test-2.stderr--4--4--8   src/test/ui/traits/item-privacy.stderr--3--3--6   compiler/rustc_middle/src/traits/mod.rs--2--2--4   .../feature-gate-object_safe_for_dispatch.stderr--2--2--4   src/test/ui/generic-associated-types/issue-76535.stderr--2--2--4   src/test/ui/generic-associated-types/issue-79422.stderr--2--2--4   src/test/ui/issues/issue-19538.stderr--2--2--4   src/test/ui/object-safety/object-safety-generics.curr.stderr--2--2--4   .../object-safety-generics.object_safe_for_dispatch.stderr--2--2--4   .../ui/object-safety/object-safety-mentions-Self.curr.stderr--2--2--4   ...ject-safety-mentions-Self.object_safe_for_dispatch.stderr--2--2--4   .../suggestions/object-unsafe-trait-references-self.stderr--2--2--4   .../ui/associated-consts/associated-const-in-trait.stderr--1--1--2   src/test/ui/associated-item/issue-48027.stderr--1--1--2   .../coherence-impl-trait-for-trait-object-safe.stderr--1--1--2   .../generic_const_exprs/object-safety-err-ret.stderr--1--1--2   src/test/ui/error-codes/E0038.stderr--1--1--2   .../ui/generic-associated-types/gat-in-trait-path.stderr--1--1--2   src/test/ui/generic-associated-types/issue-67510-pass.stderr--1--1--2   src/test/ui/generic-associated-types/issue-78671.stderr--1--1--2   src/test/ui/generic-associated-types/trait-objects.stderr--1--1--2   src/test/ui/issues/issue-18959.stderr--1--1--2   .../object-safety-associated-consts.curr.stderr--1--1--2   ...-safety-associated-consts.object_safe_for_dispatch.stderr--1--1--2   .../type-parameter-defaults-referencing-Self-ppaux.stderr--1--1--2   src/test/ui/wf/issue-87495.stderr--1--1--2   src/test/ui/wf/wf-object-safe.stderr--1--1--2,Perfective,
74835,6c907212b446e1c39ddb6db621bb72c6d07255f6,Add note about temporaries, ,1,12,   src/doc/book/patterns.md--10--2--12,Perfective,
68387,58b75f7aa3165d6b412610d3eae210df55182398,loosen assertion against proj in collector,The collector was asserting a total absence of projections  but some  projections are expected  even in trans: in particular  projections  containing higher-ranked regions  which we don't currently normalize.   ,5,49,   src/test/run-pass/issue-36381.rs--34--0--34   src/librustc/ty/flags.rs--5--0--5   src/librustc/ty/mod.rs--4--0--4   src/librustc_trans/collector.rs--3--1--4   src/librustc/ty/fold.rs--1--1--2,Perfective,
60844,0ad9eaa998d597bfa9597c4d6c751cfb66ed2e7e,async-llvm(16): Inject allocator shim into LLVM module immediately if necessary., ,1,39,   src/librustc_trans/base.rs--27--12--39,Adaptive,
89346,3b5d6fd25486b29a70adfda6cb917ced614bc6d2,Add next_permutation and prev_permutation onto MutableOrdVector<T>.,Unlike ImmutableClonableVector::permutations() which returns an iterator   cloning the entire array each iteration  these methods mutate the vector in-place.  For that reason  these methods are much faster; between 35-55 times faster   depending on the benchmark. They also generate permutations in lexicographical order.   ,1,52,   src/libstd/slice.rs--52--0--52,Adaptive,
22643,10e3f9bdb854e3cabbc4fda69ed713388344d524,Move match_on_vec_items to pedantic, ,3,7,   clippy_lints/src/lib.rs--1--2--3   clippy_lints/src/match_on_vec_items.rs--1--1--2   src/lintlist/mod.rs--1--1--2,Perfective,
54573,9332181729a9bcb55262c8f0fffbf1f124595be5,IRC channel is now #rust-dev-tools,Also specifically mention the IRC network (irc.mozilla.org) that the channel is on. ,1,6,   Contributing.md--3--3--6,Perfective,
4517,1b83fedda46d0162952d00f25a60c22028c1e15a,Update std_collections_from_array stability version, ,7,14,   library/alloc/src/collections/binary_heap.rs--1--1--2   library/alloc/src/collections/btree/map.rs--1--1--2   library/alloc/src/collections/btree/set.rs--1--1--2   library/alloc/src/collections/linked_list.rs--1--1--2   library/alloc/src/collections/vec_deque/mod.rs--1--1--2   library/std/src/collections/hash/map.rs--1--1--2   library/std/src/collections/hash/set.rs--1--1--2,Perfective,
101775,43924f1f9ffea44390e178a97bef283cb7efbee1,fix some of the broken tests (the ones that were doing the right thing), ,7,33,   src/test/run-pass/tag-auto-disr-val-shape.rs--0--9--9   src/test/run-pass/tag-disr-val-shape.rs--5--3--8   src/test/run-pass/log-str.rs--5--2--7   src/test/run-pass/log-knows-the-names-of-variants-in-std.rs--2--1--3   src/test/run-pass/fixed_length_vec_glue.rs--1--1--2   src/test/run-pass/rec-align-u32.rs--1--1--2   src/test/run-pass/rec-align-u64.rs--1--1--2,Perfective,
43916,7a99b6db15fb657128a7cccd1f22faae287f0776,std: Add debugging for a failing test on appveyor,I'm not sure why this is failing  so let's hopefully get some more  information to help investigation!   ,1,6,   src/libstd/time.rs--5--1--6,Corrective,
91983,f125b71c0081acebbfcdd60bfe517d7e4dd388d4,Add FIXME comments regarding issue #11526., ,3,22,   src/libstd/num/int_macros.rs--8--0--8   src/libstd/num/f32.rs--7--0--7   src/libstd/num/f64.rs--7--0--7,Perfective,
75055,5a26a52a54ae27e5a64bc17a17aa1eebab136b91,Handle generics in raw pointers, ,1,14,   src/librustdoc/html/format.rs--11--3--14,Perfective,
12268,4158e58d79af7a538944c0acffbc0718551f221a,Enhance some comments, ,3,25,   src/test/ui/consts/std/cell.rs--10--5--15   src/test/ui/consts/std/cell.stderr--4--4--8   .../rustc_mir/src/transform/check_consts/validation.rs--2--0--2,Perfective,
54078,c68440cad49f6d0cda09f8c7d4989ff63f55a26e,Add a potential cause raising `ParseIntError`.,Initially  I wanted to add it directly to the documentation of `str. parse()' method  I finally found that it was more relevant (I hope so?) to directly document the structure in question. I've added a scenario  in which we could all get caught at least once  to make it easier to diagnose the problem when parsing integers. ,1,6,   src/libcore/num/mod.rs--6--0--6,Perfective,
88134,20658f7ec509d5925b731dcc25067ce72a17a913,Fix heading levels in pointer guide, ,1,6,   src/doc/guide-pointers.md--3--3--6,Perfective,
17975,1b6590c9f4104df7d168474edf3c0ab966b44108,forgot to remove a cfg(not(bootstrap)), ,1,2,   library/std/src/lib.rs--1--1--2,Perfective,
5324,fae7a09eea5644567ff7239abc3970d1e9a2d159,match_wildcard_for_single_variants: don't produce bad suggestion,This fixes a bug where match_wildcard_for_single_variants produced a  bad suggestion where besides the missing variant  one or more hidden  variants were left.    This also adds tests to the ui-tests match_wildcard_for_single_variants  and wildcard_enum_match_arm to make sure that the correct suggestion is  produced.   ,6,55,   tests/ui/wildcard_enum_match_arm.fixed--14--0--14   tests/ui/wildcard_enum_match_arm.rs--14--0--14   tests/ui/wildcard_enum_match_arm.stderr--7--1--8   tests/ui/match_wildcard_for_single_variants.fixed--7--0--7   tests/ui/match_wildcard_for_single_variants.rs--7--0--7   clippy_lints/src/matches.rs--3--2--5,Corrective,
40153,8d2cbb94d468bb0e354c9a211b5b1c174d76cdb2,Add the rustc guide to the cheatsheet, ,1,2,   doc/adding_lints.md--2--0--2,Perfective,
108104,da064ef884994df1889d6a083349fb0bf6954400,Add more logging to crate resolution, ,1,13,   src/comp/metadata/creader.rs--12--1--13,Adaptive,
100141,cf768ce1f44abee4e2bedf9827a8714e2c8c0049,Unfortunately  we can't embed cross-crate tests in the tutorial...,...as far as I know  anyway  so I xfailed this tutorial test.   ,1,2,   doc/tutorial.md--1--1--2,Perfective,
82994,b7c0813eb74db4706f7eb1943d0160e6501f6bc1,Round 4 test fixes and rebase conflicts, ,11,37,   src/libstd/sys/windows/process.rs--20--1--21   src/libcollections/lib.rs--1--1--2   src/libcollections/linked_list.rs--1--1--2   src/libcollections/slice.rs--1--1--2   src/libcore/marker.rs--1--1--2   src/libstd/sys/windows/c.rs--1--1--2   src/test/run-pass/trait-impl.rs--1--1--2   src/test/compile-fail/object-safety-phantom-fn.rs--1--0--1   ...-assoc-type-in-supertrait-outlives-container.rs--0--1--1   .../regions-assoc-type-outlives-container-wc.rs--0--1--1   .../regions-assoc-type-outlives-container.rs--0--1--1,Perfective,
61237,f2d0101065c150026ea8f73410f2088ecddba9c6,Also test optimized MIR, ,5,62,   tests/compiletest.rs--22--7--29   src/step.rs--12--8--20   src/bin/miri.rs--1--5--6   tests/run-pass/cast-rfc0401-vtable-kinds.rs--4--0--4   tests/run-pass-fullmir/integer-ops.rs--3--0--3,Perfective,
82277,a7f00cbc0cde133bca5fd308fa1df43fa691e68c,Fix a bug in inline assembly codegen where host clobbers were always used regardless of target, ,1,41,   src/librustc_trans/trans/asm.rs--15--26--41,Corrective,
93611,e779313b0786b5b9d852729005d1552b0b120d61,rustpkg: invoke touch with a portable set of args, ,1,4,   src/librustpkg/tests.rs--3--1--4,Perfective,
111875,e77f5b1561092d9caa3a5423c569c1a2f8e44f99,Speed up calls to get_tydesc and kill cname-redundant glue generation., ,1,45,   src/comp/middle/trans.rs--29--16--45,Perfective,
14452,6f1992a7d60152cd962feb907bfdc03290d9f8a4,Turn 'useless #[deprecated]' error into a lint., ,2,49,   compiler/rustc_lint_defs/src/builtin.rs--27--0--27   compiler/rustc_passes/src/stability.rs--11--11--22,Perfective,
102250,5ccf8175a8ae5f6aaff30bb2330a5f05ec89028d,don't consider use of `@fn` to be region-param'd, ,2,41,   .../compile-fail/regions-infer-at-fn-not-param.rs--22--0--22   src/rustc/middle/region.rs--19--0--19,Corrective,
76776,153c533b27e40daa9037e5160679fc4ad94c9502,Print the codegen worker # when using time-passes, ,1,10,   src/librustc_trans/back/write.rs--7--3--10,Perfective,
90385,a70f8d9cf3619aed475874c1b27595e0c86e627e,Remove an unnecessary file.,Signed-off-by: OGINO Masanori <masanori.ogino@gmail.com>   ,1,0,   src/libnative/io/p--0--0--0,Perfective,
52867,da9e18b3dbf2edee36bdcc274b771493a4d4afc1,Update drop.rs, ,1,2,   src/libcore/ops/drop.rs--1--1--2,Perfective,
5665,dab42cff028b59a157e961433e480431b1c5f13d,Delete spaces, ,6,20,   util/gh-pages/index.html--4--4--8   doc/basics.md--2--2--4   CONTRIBUTING.md--1--1--2   README.md--1--1--2   clippy_utils/src/ast_utils.rs--1--1--2   lintcheck/README.md--1--1--2,Perfective,
8110,256e594b0a75ddc792adb35e3810d29133ee0f79,rustdoc: Add setting for hiding large items, ,2,7,   src/librustdoc/html/static/main.js--5--1--6   src/librustdoc/html/render/mod.rs--1--0--1,Adaptive,
67583,8e9106c531c559bf923de93cccbeb0fa0a47451f,tests: fix fallout in pretty-printing output exact-match tests., ,2,38,   src/test/pretty/issue-4264.pp--17--15--32   src/test/pretty/stmt_expr_attributes.rs--3--3--6,Perfective,
73668,0a665aacebd5b2b4fa579c49fbb16dbb67e9347e,Fixed nitpicks Removed unneeded comment Commented line wrapping conditions Removed prefix param on `rewrite_associated_type` Merged `rewrite_associated_static` into `rewrite_static` Added extra tests, ,4,87,   src/items.rs--24--27--51   src/visitor.rs--8--9--17   tests/target/trait.rs--12--1--13   tests/source/trait.rs--6--0--6,Corrective,
111124,a4663d2845b39f05a969af3cabe60a55dc0ee5fc,rustc: Add fast paths for vars and param folds. 3x typechecking speedup., ,2,49,   src/comp/middle/ty.rs--25--22--47   src/comp/middle/trans.rs--1--1--2,Perfective,
22651,d61debac64af9d9f0c18db55fe66144941aa76c7,Document unsafety for `*const T` and `*mut T`, ,2,12,   src/libcore/ptr/const_ptr.rs--4--2--6   src/libcore/ptr/mut_ptr.rs--4--2--6,Perfective,
75877,2636fed5f3ca01d0b5cf3637d635e4727ae24199,Don't panic on function return type rewrite failure, ,2,18,   src/items.rs--4--6--10   tests/target/fn.rs--8--0--8,Corrective,
82222,b4a72a403a9dfcb3ba906606b3ea0b8363884cdf,Document environment variables,Fixes #16330   ,1,22,   man/rustc.1--22--0--22,Perfective,
103230,801e049617b25c36f048a20f59ec6f461397d265,Added a test case for issue #2834., ,1,21,   src/test/run-pass/issue-2834.rs--21--0--21,Perfective,
19547,7be36a86f7b7798e662d844b33bd744a136b4f60,build: Avoid unnecessary build script reruns in libstd,Add a FIXME to build scripts in profiler_builtins   ,2,3,   src/libprofiler_builtins/build.rs--2--0--2   src/libstd/build.rs--1--0--1,Perfective,
81529,73c2e768d6ba55bdfb8292320ebac00e69ca2e42,Rebased, ,10,47,   src/librustc/middle/expr_use_visitor.rs--7--15--22   src/librustc/middle/ty.rs--4--3--7   src/librustc_typeck/check/coercion.rs--2--2--4   src/librustc_typeck/check/op.rs--3--1--4   src/libcore/iter.rs--1--1--2   src/librustc_typeck/check/regionck.rs--1--1--2   ...ed-type-projection-from-multiple-supertraits.rs--1--1--2   src/test/run-make/save-analysis/foo.rs--1--1--2   src/librustc_typeck/check/vtable.rs--0--1--1   src/test/compile-fail/issue-22560.rs--1--0--1,Perfective,
21960,2722522fac927b9bd7c512f993e63afd3754cf4e,rename `Predicate` to `PredicateKind`  introduce alias, ,4,10,   clippy_lints/src/methods/mod.rs--2--2--4   clippy_lints/src/future_not_send.rs--1--1--2   clippy_lints/src/needless_pass_by_value.rs--1--1--2   clippy_lints/src/utils/mod.rs--1--1--2,Perfective,
109630,1f8e0fa083fe527169019c8aa9c36017fd3ff6ad,rt: Implement comparison of functions  objects  ports  channels  and tasks, ,1,22,   src/rt/rust_shape.cpp--21--1--22,Adaptive,
113983,335053eb68a33061f50e8bd8bfb1e5c2ddaaf763,Improve logging in type., ,1,2,   src/boot/me/type.ml--1--1--2,Perfective,
40735,6bce2b81986a1a8da930c11b9b9d907a792b3f61,Whitelist the ARM v6 target-feature, ,1,1,   src/librustc_codegen_llvm/llvm_util.rs--1--0--1,Perfective,
95472,f68621326ec295de6fd383a5230b807049ec4820,extra: Implement RandomAccessIterator for RingBuf, ,1,41,   src/libextra/ringbuf.rs--26--15--41,Adaptive,
89851,620b4352f28d58801d82d58faa0a71f75ad9087f,doc: Fix some broken links, ,5,27,   src/libstd/lib.rs--6--6--12   src/doc/rust.md--2--3--5   src/librustdoc/html/item_type.rs--2--2--4   src/libstd/result.rs--2--2--4   src/libcore/result.rs--1--1--2,Perfective,
99003,681e6dd40d5882465f74eebf2f1802c76b0df063,Fix using the #[]-style attribute for unused imports, ,2,34,   src/librustc/middle/resolve.rs--11--17--28   src/test/compile-fail/unused-imports-warn.rs--5--1--6,Corrective,
35996,1e6c6976dd12406d2b57de17f1f667527d7977c6,PR comments, ,4,42,   clippy_lints/src/try_err.rs--13--18--31   tests/ui/try_err.stderr--4--4--8   src/lintlist/mod.rs--1--1--2   clippy_lints/src/utils/paths.rs--1--0--1,Perfective,
19826,734afb48300ad840118c2a6d140ec8bfeecf866e,Make spotlight show on hover,This makes the spotlight show on hover instead of click. Clicks can be  used to persist it  which is also what's used on mobile.   ,5,57,   src/librustdoc/html/static/rustdoc.css--11--17--28   src/librustdoc/html/static/themes/dark.css--1--8--9   src/librustdoc/html/static/themes/light.css--1--8--9   src/librustdoc/html/static/main.js--1--5--6   src/librustdoc/html/render.rs--2--3--5,Perfective,
1538,d3fa07c72e079e8a72fcb55a792d2f855e80722b,Use LocalDefId directly in more places in wfcheck, ,1,30,   compiler/rustc_typeck/src/check/wfcheck.rs--12--18--30,Perfective,
44826,fe3a9660eabf68ef9f7b8d827bfbdb4d6a5835b2,Bump cranelift, ,2,71,   Cargo.lock--26--33--59   src/common.rs--6--6--12,Perfective,
84716,7d8d06f86b48520814596bd5363d2b82bc619774,Remove deprecated functionality,This removes a large array of deprecated functionality  regardless of how  recently it was deprecated. The purpose of this commit is to clean out the  standard libraries and compiler for the upcoming alpha release.    Some notable compiler changes were to enable warnings for all now-deprecated  command line arguments (previously the deprecated versions were silently  accepted) as well as removing deriving(Zero) entirely (the trait was removed).    The distribution no longer contains the libtime or libregex_macros crates. Both  of these have been deprecated for some time and are available externally.   ,239,470,   src/libtime/lib.rs--0--20--20   src/libcollections/str.rs--1--6--7   src/libregex_macros/lib.rs--0--7--7   src/libregex/lib.rs--1--3--4   src/libcollections/dlist.rs--1--2--3   src/libcollections/slice.rs--1--2--3   src/libcore/num/mod.rs--1--2--3   src/libregex/re.rs--1--2--3   src/libstd/sync/atomic.rs--0--3--3   mk/crates.mk--1--1--2   mk/grammar.mk--1--1--2   src/compiletest/compiletest.rs--1--1--2   src/doc/reference.md--1--1--2   src/grammar/verify.rs--1--1--2   src/liballoc/arc.rs--1--1--2   src/libcollections/bench.rs--1--1--2   src/libcollections/bit.rs--1--1--2   src/libcollections/btree/map.rs--1--1--2   src/libcollections/lib.rs--1--1--2   src/libcollections/string.rs--1--1--2   src/libcollections/vec.rs--1--1--2   src/libcore/atomic.rs--1--1--2   src/libcore/char.rs--0--2--2   src/libcore/ptr.rs--1--1--2   src/libcore/slice.rs--1--1--2   src/libcore/str/mod.rs--1--1--2   src/libcoretest/char.rs--1--1--2   src/libcoretest/iter.rs--1--1--2   src/libcoretest/nonzero.rs--1--1--2   src/libcoretest/num/int_macros.rs--1--1--2   src/libcoretest/num/mod.rs--1--1--2   src/libcoretest/ptr.rs--1--1--2   src/libcoretest/str.rs--1--1--2   src/libgraphviz/lib.rs--1--1--2   src/libgraphviz/maybe_owned_vec.rs--1--1--2   src/librand/chacha.rs--1--1--2   src/librand/isaac.rs--1--1--2   src/librand/reseeding.rs--1--1--2   src/librbml/io.rs--1--1--2   src/librbml/lib.rs--1--1--2   .../middle/infer/region_inference/graphviz.rs--1--1--2   src/librustc/session/config.rs--1--1--2   src/librustc/util/lev_distance.rs--1--1--2   src/librustdoc/stability_summary.rs--1--1--2   src/libserialize/base64.rs--1--1--2   src/libserialize/json.rs--1--1--2   src/libstd/collections/hash/map.rs--1--1--2   src/libstd/collections/hash/set.rs--1--1--2   src/libstd/io/extensions.rs--1--1--2   src/libstd/io/mem.rs--1--1--2   src/libstd/io/mod.rs--0--2--2   src/libstd/io/net/udp.rs--1--1--2   src/libstd/io/tempfile.rs--1--1--2   src/libstd/io/test.rs--1--1--2   src/libstd/num/mod.rs--1--1--2   src/libstd/num/uint_macros.rs--1--1--2   src/libstd/os.rs--1--1--2   src/libstd/path/mod.rs--1--1--2   src/libstd/rand/mod.rs--1--1--2   src/libstd/rand/os.rs--1--1--2   src/libstd/rt/backtrace.rs--1--1--2   src/libstd/rt/unwind.rs--1--1--2   src/libstd/rt/util.rs--1--1--2   src/libstd/sync/condvar.rs--1--1--2   src/libstd/sync/mod.rs--1--1--2   src/libstd/sync/mpsc/mpsc_queue.rs--1--1--2   src/libstd/sync/mpsc/oneshot.rs--1--1--2   src/libstd/sync/mpsc/shared.rs--1--1--2   src/libstd/sync/mpsc/spsc_queue.rs--1--1--2   src/libstd/sync/mpsc/stream.rs--1--1--2   src/libstd/sync/mpsc/sync.rs--1--1--2   src/libstd/sync/once.rs--1--1--2   src/libstd/sys/common/thread_local.rs--1--1--2   src/libstd/sys/unix/pipe.rs--1--1--2   src/libstd/sys/unix/tcp.rs--1--1--2   src/libstd/sys/unix/timer.rs--1--1--2   src/libstd/sys/windows/mutex.rs--1--1--2   src/libstd/sys/windows/pipe.rs--1--1--2   src/libstd/sys/windows/tcp.rs--1--1--2   src/libsyntax/ext/deriving/zero.rs--0--2--2   src/libsyntax/parse/lexer/mod.rs--1--1--2   src/libtest/lib.rs--1--1--2   src/libtest/stats.rs--1--1--2   src/libunicode/lib.rs--1--1--2   src/libunicode/u_char.rs--0--2--2   src/test/auxiliary/cci_capture_clause.rs--1--1--2   src/test/auxiliary/static-methods-crate.rs--1--1--2   src/test/bench/core-map.rs--1--1--2   src/test/bench/core-set.rs--1--1--2   src/test/bench/core-std.rs--1--1--2   src/test/bench/core-uint-to-str.rs--1--1--2   src/test/bench/msgsend-pipes-shared.rs--1--1--2   src/test/bench/msgsend-ring-mutex-arcs.rs--1--1--2   src/test/bench/rt-messaging-ping-pong.rs--1--1--2   src/test/bench/shootout-ackermann.rs--1--1--2   src/test/bench/shootout-chameneos-redux.rs--1--1--2   src/test/bench/shootout-fasta-redux.rs--1--1--2   src/test/bench/shootout-fasta.rs--1--1--2   src/test/bench/shootout-fibo.rs--1--1--2   src/test/bench/shootout-k-nucleotide-pipes.rs--1--1--2   src/test/bench/shootout-k-nucleotide.rs--1--1--2   src/test/bench/shootout-mandelbrot.rs--1--1--2   src/test/bench/shootout-meteor.rs--1--1--2   src/test/bench/shootout-nbody.rs--1--1--2   src/test/bench/shootout-pfib.rs--1--1--2   src/test/bench/shootout-regex-dna.rs--1--1--2   src/test/bench/shootout-reverse-complement.rs--1--1--2   src/test/bench/shootout-spectralnorm.rs--1--1--2   src/test/bench/shootout-threadring.rs--1--1--2   src/test/bench/std-smallintmap.rs--1--1--2   src/test/bench/sudoku.rs--1--1--2   src/test/bench/task-perf-alloc-unwind.rs--1--1--2   src/test/bench/task-perf-jargon-metal-smoke.rs--1--1--2   src/test/bench/task-perf-spawnalot.rs--1--1--2   .../compile-fail/borrowck-for-loop-head-linkage.rs--1--1--2   .../compile-fail/borrowck-loan-blocks-move-cc.rs--1--1--2   .../compile-fail/borrowck-multiple-captures.rs--1--1--2   src/test/compile-fail/future_not_copyable.rs--1--1--2   src/test/compile-fail/hashmap-lifetimes.rs--1--1--2   src/test/compile-fail/issue-11374.rs--1--1--2   src/test/compile-fail/issue-15783.rs--1--1--2   src/test/compile-fail/issue-17728.rs--1--1--2   .../moves-based-on-type-capture-clause-bad.rs--1--1--2   src/test/compile-fail/no-capture-arc.rs--1--1--2   src/test/compile-fail/no-reuse-move-arc.rs--1--1--2   src/test/compile-fail/no-send-res-ports.rs--1--1--2   src/test/run-fail/rt-set-exit-status-panic2.rs--1--1--2   src/test/run-fail/task-spawn-barefn.rs--1--1--2   src/test/run-make/lto-syntax-extension/main.rs--1--1--2   src/test/run-make/static-unwinding/main.rs--1--1--2   src/test/run-make/unicode-input/span_length.rs--1--1--2   src/test/run-pass/child-outlives-parent.rs--1--1--2   src/test/run-pass/clone-with-exterior.rs--1--1--2   src/test/run-pass/comm.rs--1--1--2   src/test/run-pass/const-str-ptr.rs--1--1--2   src/test/run-pass/drop-trait-enum.rs--1--1--2   src/test/run-pass/extern-call-deep2.rs--1--1--2   src/test/run-pass/extern-call-scrub.rs--1--1--2   src/test/run-pass/extern-stress.rs--1--1--2   src/test/run-pass/extern-yield.rs--1--1--2   src/test/run-pass/hashmap-memory.rs--1--1--2   src/test/run-pass/issue-13323.rs--1--1--2   src/test/run-pass/issue-17718.rs--1--1--2   src/test/run-pass/issue-2383.rs--1--1--2   src/test/run-pass/issue-2718.rs--1--1--2   src/test/run-pass/issue-2804.rs--1--1--2   src/test/run-pass/issue-2989.rs--1--1--2   src/test/run-pass/issue-3563-3.rs--1--1--2   src/test/run-pass/issue-3609.rs--1--1--2   src/test/run-pass/issue-8460.rs--1--1--2   src/test/run-pass/ivec-tag.rs--1--1--2   .../run-pass/kindck-implicit-close-over-mut-var.rs--1--1--2   src/test/run-pass/match-with-ret-arm.rs--1--1--2   src/test/run-pass/mod-view-items.rs--1--1--2   .../run-pass/moves-based-on-type-capture-clause.rs--1--1--2   src/test/run-pass/no-landing-pads.rs--1--1--2   src/test/run-pass/panic-in-dtor-drops-fields.rs--1--1--2   src/test/run-pass/realloc-16687.rs--1--1--2   src/test/run-pass/running-with-no-runtime.rs--1--1--2   src/test/run-pass/send-resource.rs--1--1--2   src/test/run-pass/send_str_hashmap.rs--1--1--2   src/test/run-pass/send_str_treemap.rs--1--1--2   src/test/run-pass/sendfn-spawn-with-fn-arg.rs--1--1--2   src/test/run-pass/sepcomp-unwind.rs--1--1--2   src/test/run-pass/slice-panic-1.rs--1--1--2   src/test/run-pass/slice-panic-2.rs--1--1--2   src/test/run-pass/spawn-fn.rs--1--1--2   src/test/run-pass/spawn-types.rs--1--1--2   src/test/run-pass/spawn.rs--1--1--2   src/test/run-pass/spawn2.rs--1--1--2   src/test/run-pass/task-comm-0.rs--1--1--2   src/test/run-pass/task-comm-1.rs--1--1--2   src/test/run-pass/task-comm-10.rs--1--1--2   src/test/run-pass/task-comm-11.rs--1--1--2   src/test/run-pass/task-comm-13.rs--1--1--2   src/test/run-pass/task-comm-14.rs--1--1--2   src/test/run-pass/task-comm-15.rs--1--1--2   src/test/run-pass/task-comm-17.rs--1--1--2   src/test/run-pass/task-comm-7.rs--1--1--2   src/test/run-pass/task-life-0.rs--1--1--2   src/test/run-pass/task-spawn-move-and-copy.rs--1--1--2   src/test/run-pass/tcp-accept-stress.rs--1--1--2   src/test/run-pass/tcp-connect-timeouts.rs--1--1--2   src/test/run-pass/tempfile.rs--1--1--2   src/test/run-pass/terminate-in-initializer.rs--1--1--2   src/test/run-pass/threads.rs--1--1--2   src/test/run-pass/trait-bounds-in-arc.rs--1--1--2   src/test/run-pass/unique-send-2.rs--1--1--2   src/test/run-pass/unit-like-struct-drop-run.rs--1--1--2   src/test/run-pass/unwind-resource.rs--1--1--2   src/test/run-pass/unwind-unique.rs--1--1--2   src/test/run-pass/utf8_chars.rs--1--1--2   src/test/run-pass/vector-sort-panic-safe.rs--1--1--2   src/test/run-pass/wait-forked-but-failed-child.rs--1--1--2   src/test/run-pass/weak-lang-item.rs--1--1--2   src/test/run-pass/yield2.rs--1--1--2   mk/tests.mk--0--1--1   src/liballoc/lib.rs--0--1--1   src/libcollections/enum_set.rs--0--1--1   src/libcollections/ring_buf.rs--0--1--1   src/libcollections/vec_map.rs--0--1--1   src/libcore/cell.rs--0--1--1   src/libcore/cmp.rs--0--1--1   src/libcore/iter.rs--0--1--1   src/libcore/num/f32.rs--0--1--1   src/libcore/num/f64.rs--0--1--1   src/libcore/tuple.rs--0--1--1   src/libregex/test/mod.rs--0--1--1   src/libstd/ascii.rs--0--1--1   src/libstd/c_str.rs--0--1--1   src/libstd/c_vec.rs--0--1--1   src/libstd/collections/mod.rs--0--1--1   src/libstd/io/buffered.rs--0--1--1   src/libstd/io/util.rs--0--1--1   src/libstd/lib.rs--0--1--1   src/libstd/num/u16.rs--0--1--1   src/libstd/num/u32.rs--0--1--1   src/libstd/num/u64.rs--0--1--1   src/libstd/num/u8.rs--0--1--1   src/libstd/num/uint.rs--0--1--1   src/libstd/sync/future.rs--0--1--1   src/libstd/sys/unix/os.rs--0--1--1   src/libstd/task.rs--0--1--1   src/libstd/thread.rs--0--1--1   src/libstd/tuple.rs--0--1--1   src/libsyntax/ext/deriving/mod.rs--0--1--1   src/libsyntax/parse/parser.rs--0--1--1   src/libsyntax/parse/token.rs--0--1--1   .../syntax-extension-regex-invalid.rs--0--1--1   .../syntax-extension-regex-unused-static.rs--0--1--1   .../syntax-extension-regex-unused.rs--0--1--1   src/test/compile-fail/atomicoption-not-send-ref.rs--0--1--1   src/test/compile-fail/atomicoption-not-send.rs--0--1--1   src/test/compile-fail/deriving-span-Zero-struct.rs--0--1--1   .../deriving-span-Zero-tuple-struct.rs--0--1--1   src/test/compile-fail/spawn-non-nil-fn.rs--0--1--1   src/test/compile-fail/std-uncopyable-atomics.rs--0--1--1   src/test/run-pass/deriving-zero.rs--0--1--1   src/test/run-pass/issue-15149.rs--0--1--1,Perfective,
2931,ebf12529dfa62cf463de4fd5e1355e8ea4fe0559,Add test for braced-macro followed by `.` or `?`., ,1,9,   src/test/ui/parser/macro-braces-dot-question.rs--9--0--9,Perfective,
92601,5b98c66593660cfa4ee4d39aabeaa97bb36eb75f,librustc: De-`@mut` the item variance map in the type context, ,2,18,   src/librustc/middle/typeck/variance.rs--7--4--11   src/librustc/middle/ty.rs--4--3--7,Perfective,
72730,8efbfae6bf3ec3995dca0604d09c839967840b7a,rustbuild: Fix handling of the bootstrap key,Bring the calculation logic in line with the makefiles and also set the  RUSTC_BOOTSTRAP_KEY environment variable to enable the bootstrap on the stable  compiler.   ,5,59,   src/rustc/Cargo.lock--37--3--40   src/bootstrap/build/channel.rs--6--5--11   src/bootstrap/Cargo.lock--6--0--6   src/bootstrap/Cargo.toml--1--0--1   src/bootstrap/main.rs--1--0--1,Corrective,
18103,bc47f70f888afff97ffd7a4161bd45f9054dede6,doc: Fix typo in std::process::Child documentation, ,1,2,   library/std/src/process.rs--1--1--2,Perfective,
44474,4bdc3d833af1229420fce37b245d5cccd1d7cc3f,Extended elaboration for trait aliases to include arbitrary bounds., ,11,89,   src/librustc_typeck/collect.rs--20--9--29   src/librustc_passes/ast_validation.rs--0--14--14   src/librustc/ty/mod.rs--4--5--9   src/librustc/traits/select.rs--4--4--8   src/librustc_typeck/astconv.rs--4--4--8   src/libsyntax/parse/parser.rs--4--4--8   src/test/ui/traits/trait-alias-fail1.rs--2--3--5   src/librustc/traits/util.rs--1--1--2   src/librustc/ty/util.rs--1--1--2   src/test/ui/traits/trait-alias-fail1.stderr--1--1--2   src/test/ui/traits/trait-alias-fail2.rs--1--1--2,Adaptive,
25322,18080e60728401c9bd4d102bbb33a0d6d53740f6,Remove `NO_DEBUG` const, ,1,3,   src/librustc/middle/codegen_fn_attrs.rs--0--3--3,Perfective,
8694,e82e8129e728e9202cfae89daa22987cf49c32af,Use iter::zip in src/tools/clippy/, ,13,61,   .../clippy/clippy_lints/src/unnecessary_sort_by.rs--9--13--22   src/tools/clippy/clippy_utils/src/consts.rs--4--5--9   .../clippy_lints/src/default_numeric_fallback.rs--2--2--4   .../clippy_lints/src/literal_representation.rs--2--1--3   .../clippy_lints/src/loops/needless_range_loop.rs--1--2--3   src/tools/clippy/clippy_lints/src/matches.rs--2--1--3   src/tools/clippy/clippy_lints/src/mut_key.rs--2--1--3   src/tools/clippy/clippy_lints/src/mut_reference.rs--2--1--3   .../clippy_lints/src/pass_by_ref_or_value.rs--2--1--3   .../clippy_lints/src/pattern_type_mismatch.rs--2--1--3   .../clippy/clippy_utils/src/numeric_literal.rs--2--1--3   src/tools/clippy/clippy_lints/src/lib.rs--1--0--1   src/tools/clippy/clippy_utils/src/lib.rs--1--0--1,Perfective,
76753,58c299f81de4f8deb46b3e6ec045298a669c59aa,Fix prefix range expressions being not parsed, ,2,45,   src/libsyntax/parse/parser.rs--20--22--42   src/libsyntax/util/parser.rs--3--0--3,Corrective,
49133,35351591af5108e62127ce9f0beeca84392a06ab,Move some tests around, ,10,0,   .../ui/{impl-trait=>existential_types}/existential-associated-type.rs--0--0--0   src/test/ui/{=>existential_types}/existential_type.nll.stderr--0--0--0   src/test/ui/{=>existential_types}/existential_type.rs--0--0--0   src/test/ui/{=>existential_types}/existential_type.stderr--0--0--0   src/test/ui/{=>existential_types}/existential_type2.rs--0--0--0   src/test/ui/{=>existential_types}/existential_type2.stderr--0--0--0   src/test/ui/{=>existential_types}/existential_type3.rs--0--0--0   src/test/ui/{=>existential_types}/existential_type3.stderr--0--0--0   src/test/ui/{=>existential_types}/existential_type4.rs--0--0--0   src/test/ui/{=>existential_types}/existential_type4.stderr--0--0--0,Perfective,
91151,cdc5729ea2dc98f83c9a88ce7aa0f52ba5a606e6,rustc: Move local native libs back in link-args,With linkers on unix systems  libraries on the right of the command line are  used to resolve symbols in those on the left of the command line. This means  that arguments must have a right-to-left dependency chain (things on the left  depend on things on the right).    This is currently done by ordering the linker arguments as      1. Local object    2. Local native libraries    3. Upstream rust libraries    4. Upstream native libraries    This commit swaps the order of 2 and 3 so upstream rust libraries have access to  local native libraries. It has been seen that some upstream crates don't specify  the library that they link to because the name varies per platform (e.g.  lua/glfw/etc).    This commit enables building these libraries by allowing the upstream rust crate  to have access to local native libraries. I believe that the failure mode for  this scheme is when an upstream rust crate depends on a symbol in an upstream  library which is then redefined in a local library. This failure mode is  incredibly uncommon  and the failure mode also varies per platform (OSX behaves  differently)  so I believe that a change like this is fine to make.    Closes #12446   ,5,76,   src/librustc/back/link.rs--33--1--34   src/test/run-make/issue-12446/foo.rs--18--0--18   src/test/run-make/issue-12446/bar.rs--17--0--17   src/test/run-make/issue-12446/Makefile--6--0--6   src/test/run-make/issue-12446/foo.c--1--0--1,Adaptive,
29926,0219f218db666ed597d279d6258b31fc611ae42a,Remove FIXME, ,1,4,   src/cast.rs--3--1--4,Perfective,
58068,6d060bd49a2a518d44deb36aadf772cc6ae61fb8,Fix spans and error messages., ,2,29,   src/libsyntax/parse/parser.rs--6--13--19   src/test/ui/issue-40782.stderr--5--5--10,Corrective,
109142,d7fa75413f4c109b9ecadf4b9b3e1edd762e3056,Convert rustc::lib::llvm to istr::sbufs. Issue #855, ,10,87,   src/comp/middle/trans_build.rs--28--11--39   src/comp/middle/trans.rs--12--8--20   src/comp/back/link.rs--5--5--10   src/comp/middle/trans_common.rs--4--2--6   src/comp/driver/rustc.rs--1--1--2   src/comp/lib/llvm.rs--1--1--2   src/comp/metadata/creader.rs--1--1--2   src/comp/middle/gc.rs--1--1--2   src/comp/middle/shape.rs--1--1--2   src/comp/middle/trans_objects.rs--1--1--2,Adaptive,
99069,934c938f90662522c4a8a86bd58d7618207f5c2a,libsyntax: De-mut the parser. rs=demuting, ,10,52,   src/libsyntax/parse/parser.rs--17--16--33   src/libsyntax/parse/common.rs--1--2--3   src/libsyntax/ext/base.rs--1--1--2   src/libsyntax/ext/pipes/parse_proto.rs--1--1--2   src/libsyntax/ext/pipes/pipec.rs--1--1--2   src/libsyntax/ext/quote.rs--1--1--2   src/libsyntax/ext/tt/macro_parser.rs--1--1--2   src/libsyntax/parse/attr.rs--1--1--2   src/libsyntax/parse/mod.rs--1--1--2   src/libsyntax/parse/obsolete.rs--1--1--2,Perfective,
86609,d9eb13b2c8397f6eccea0c37967c4010d9aedb0d,Add regression test for lint deprecation, ,1,16,   src/test/compile-fail/lint-renaming.rs--16--0--16,Perfective,
70094,2fd8044ceff8a42b09254ac7d5288e497d9b3778,mk: Only pass -Zorbit=off in stage1/2,The stage0 compiler doesn't understand this option.   ,1,3,   mk/main.mk--2--1--3,Perfective,
76503,42ae1e69182577aa33a378e82362ca78be458bd2,use rustc's eval_const  bail on (negative) infinity, ,2,20,   src/misc.rs--11--5--16   tests/compile-fail/float_cmp.rs--3--1--4,Perfective,
90295,c18c9284b352f3605553343cd78c7a8eb75b5cd2,Test fixes from the rollup,"Closes #13546 (workcache: Don't assume gcc exists on all platforms)  Closes #13545 (std: Remove pub use globs)  Closes #13530 (test: Un-ignore smallest-hello-world.rs)  Closes #13529 (std: Un-ignore some float tests on windows)  Closes #13528 (green: Add a helper macro for booting libgreen)  Closes #13526 (Remove RUST_LOG=""::help"" from the docs)  Closes #13524 (dist: Make Windows installer uninstall first. Closes #9563)  Closes #13521 (Change AUTHORS section in the man pages)  Closes #13519 (Update GitHub's Rust projects page.)  Closes #13518 (mk: Change windows to install from stage2)  Closes #13516 (liburl doc: insert missing hyphen)  Closes #13514 (rustdoc: Better sorting criteria for searching.)  Closes #13512 (native: Fix a race in select())  Closes #13506 (Use the unsigned integer types for bitwise intrinsics.)  Closes #13502 (Add a default impl for Set::is_superset)   ",3,10,   src/libgreen/sched.rs--2--2--4   src/test/run-pass/smallest-hello-world.rs--3--1--4   src/librustuv/lib.rs--1--1--2,Perfective,
27319,33bc9ef513d632825ea600cfb4bb6d89f4a09269,Use 3.6 instead of 3.5 in float fract() documentation,It is not self-explanatory whether the fract() function inverts the fractional part of negative numbers.    Co-Authored-By: Mateusz Mikuła <mati865@users.noreply.github.com>   ,2,16,   src/libstd/f32.rs--4--4--8   src/libstd/f64.rs--4--4--8,Perfective,
49810,cd8ca262570d856d354d4ea28632197ca8be15b9,Point at lifetimes instead of def span for E0195, ,5,57,   .../regions-bound-missing-bound-in-impl.stderr--14--8--22   src/librustc/hir/map/mod.rs--13--1--14   src/librustc_typeck/check/compare_method.rs--7--6--13   .../regions-bound-missing-bound-in-impl.rs--4--0--4   src/test/ui/error-codes/E0195.stderr--2--2--4,Perfective,
103370,9e6b43fb33c47f99385d6a4c5442eac1f74d273c,Rip out a bunch more append code from trans., ,2,55,   src/rustc/middle/trans/tvec.rs--0--42--42   src/rustc/middle/trans/base.rs--0--13--13,Perfective,
21784,b27e649537770ba6631f3347974e3ae7e082adfe,add a lint against references to packed fields, ,5,52,   src/librustc_mir/transform/check_packed_ref.rs--26--0--26   src/test/ui/lint/packed_reference.rs--10--0--10   src/test/ui/lint/packed_reference.stderr--9--0--9   src/librustc_session/lint/builtin.rs--3--1--4   src/librustc_mir/transform/mod.rs--2--1--3,Adaptive,
61937,82ba871c7006b62e51b9036e6f20ae4e5015bd12,Add doc example for `CStr::to_string_lossy`., ,1,25,   src/libstd/ffi/c_str.rs--25--0--25,Perfective,
45281,354a965ede0d63e81964b16276e4a1a6b1bbcdc5,create only one vector when winnowing candidates, ,2,12,   src/librustc/traits/select.rs--4--7--11   src/librustc/lib.rs--1--0--1,Perfective,
84057,f355747a195080c915b68820eeef7bc368b1e19c,Increase docs search box delay,Increases the delay of the search box to 500ms after key up. I tried  adding a three character minimum for setting the delay  but didn't find  it very useful.    Should close #20095   ,1,2,   src/librustdoc/html/static/main.js--1--1--2,Perfective,
39814,d17da3a17eec2608592dc723254028ebe117dfe8,Add NLL test error output, ,1,11,   src/test/ui/issues/issue-26619.nll.stderr--11--0--11,Perfective,
73410,213d57983d1640d22bd69e7351731fd1adcbf9b2,Expose attached attributes to `FnKind` abstraction so that I can look at them in borrowck., ,14,105,   src/librustc/front/map/blocks.rs--20--13--33   src/librustc_front/intravisit.rs--19--7--26   src/librustc/middle/resolve_lifetime.rs--4--5--9   src/librustc_front/util.rs--2--3--5   src/librustc_lint/bad_style.rs--2--3--5   src/librustc_lint/builtin.rs--2--3--5   src/librustc_resolve/lib.rs--2--3--5   src/librustc/middle/const_eval.rs--1--2--3   src/librustc/middle/effect.rs--1--2--3   src/librustc_passes/consts.rs--1--2--3   src/librustc/middle/check_match.rs--1--1--2   src/librustc/middle/intrinsicck.rs--1--1--2   src/librustc_borrowck/borrowck/mod.rs--1--1--2   src/librustc_mir/mir_map.rs--1--1--2,Perfective,
37193,0528954c80631bcf4e816e8254135d1109292f4a,Group common printing code during constant pretty printing, ,1,40,   src/librustc/ty/print/pretty.rs--23--17--40,Corrective,
3699,35fd99c7790d7310fd3c2ddabe02bd7a33a45e55,Add needs-asm-support to more tests,These were found as test failures on s390x for RHEL and Fedora.   ,7,16,   src/test/ui/unsafe/inline_asm.mir.stderr--2--2--4   src/test/ui/unsafe/inline_asm.thir.stderr--2--2--4   src/test/ui/feature-gates/feature-gate-global_asm.rs--2--0--2   src/test/ui/feature-gates/feature-gate-global_asm.stderr--1--1--2   src/test/ui/macros/macro-expanded-include/test.rs--1--1--2   src/test/codegen/naked-noinline.rs--1--0--1   src/test/ui/unsafe/inline_asm.rs--1--0--1,Perfective,
339,062abf3d217788682aefdd2343eafa694af971bb,Move some tests to more reasonable directories, ,29,6,   src/tools/tidy/src/ui_tests.rs--1--5--6   src/test/ui/{parser=>lexer}/lex-bad-binary-literal.rs--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-binary-literal.stderr--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-char-literals-1.rs--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-char-literals-1.stderr--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-char-literals-2.rs--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-char-literals-2.stderr--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-char-literals-3.rs--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-char-literals-3.stderr--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-char-literals-4.rs--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-char-literals-4.stderr--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-char-literals-5.rs--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-char-literals-5.stderr--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-char-literals-6.rs--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-char-literals-6.stderr--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-char-literals-7.rs--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-char-literals-7.stderr--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-numeric-literals.rs--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-numeric-literals.stderr--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-octal-literal.rs--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-octal-literal.stderr--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-token.rs--0--0--0   src/test/ui/{parser=>lexer}/lex-bad-token.stderr--0--0--0   src/test/ui/{parser=>lexer}/lex-bare-cr-nondoc-comment.rs--0--0--0   .../ui/{parser=>lexer}/lex-bare-cr-string-literal-doc-comment.rs--0--0--0   .../{parser=>lexer}/lex-bare-cr-string-literal-doc-comment.stderr--0--0--0   src/test/ui/{parser=>lexer}/lex-stray-backslash.rs--0--0--0   src/test/ui/{parser=>lexer}/lex-stray-backslash.stderr--0--0--0   .../lexer-crlf-line-endings-string-literal-doc-comment.rs--0--0--0,Perfective,
92139,ceea85a148ec3426edfc00b8353a19c1d2df5dbf,Remove ApproxEq and assert_approx_eq!,This trait seems to stray too far from the mandate of a standard library as implementations may vary between use cases.   ,18,67,   src/test/run-pass/const-binops.rs--12--9--21   src/libstd/num/mod.rs--1--6--7   src/test/run-pass/intrinsics-math.rs--3--4--7   src/libsyntax/ext/expand.rs--0--5--5   src/libstd/num/f32.rs--0--3--3   src/libstd/num/f64.rs--0--3--3   doc/guide-testing.md--1--1--2   src/etc/vim/syntax/rust.vim--1--1--2   src/libextra/num/complex.rs--1--1--2   .../num/float_macros.rs}--1--1--2   src/libstd/prelude.rs--1--1--2   src/test/run-fail/assert-approx-eq-macro-fail.rs--0--2--2   .../run-pass/assert-approx-eq-macro-success.rs--0--2--2   src/test/run-pass/trait-inheritance-num.rs--1--1--2   src/test/run-pass/trait-inheritance-num2.rs--1--1--2   src/libextra/stats.rs--1--0--1   src/libstd/cmp.rs--0--1--1   src/libstd/lib.rs--1--0--1,Perfective,
44341,1224e0197a21a048385a663ffc548bcc777099f4,Format BtreeMap::range_mut example, ,1,7,   src/liballoc/collections/btree/map.rs--4--3--7,Perfective,
88210,8876ce44c59bbb20006ae5beccc9f6954e7d1e4f,rustc: encode is_sugared_doc on ast::Attribute, ,3,8,   src/librustc/metadata/decoder.rs--4--1--5   src/librustc/metadata/common.rs--2--0--2   src/librustc/metadata/encoder.rs--1--0--1,Adaptive,
62944,4d5e25f31dd79e01a69ab31c59822c1248ad65a3,Update to rustc 1.19.0-nightly (826d8f385 2017-05-13),fixes #1759  #1758 ,14,95,   clippy_lints/src/utils/mod.rs--14--16--30   tests/ui/booleans.stderr--14--3--17   clippy_lints/src/methods.rs--6--4--10   clippy_lints/src/needless_pass_by_value.rs--5--5--10   clippy_lints/src/booleans.rs--4--3--7   clippy_lints/src/misc_early.rs--2--2--4   clippy_lints/src/derive.rs--2--1--3   clippy_lints/src/new_without_default.rs--2--1--3   clippy_lints/src/drop_forget_ref.rs--1--1--2   clippy_lints/src/loops.rs--1--1--2   clippy_lints/src/vec.rs--1--1--2   tests/ui/literals.stderr--2--0--2   tests/ui/new_without_default.stderr--0--2--2   clippy_lints/src/eq_op.rs--1--0--1,Perfective,
84444,c27133e2ceba52a6f3ff1b9c4bedb901d1bfe251,Preliminary feature staging,This partially implements the feature staging described in the  [release channel RFC][rc]. It does not yet fully conform to the RFC as  written  but does accomplish its goals sufficiently for the 1.0 alpha  release.    It has three primary user-visible effects:    * On the nightly channel  use of unstable APIs generates a warning.  * On the beta channel  use of unstable APIs generates a warning.  * On the beta channel  use of feature gates generates a warning.    Code that does not trigger these warnings is considered 'stable'   modulo pre-1.0 bugs.    Disabling the warnings for unstable APIs continues to be done in the  existing (i.e. old) style  via `#[allow(...)]`  not that specified in  the RFC. I deem this marginally acceptable since any code that must do  this is not using the stable dialect of Rust.    Use of feature gates is itself gated with the new 'unstable_features'  lint  on nightly set to 'allow'  and on beta 'warn'.    The attribute scheme used here corresponds to an older version of the  RFC  with the `#[staged_api]` crate attribute toggling the staging  behavior of the stability attributes  but the user impact is only  in-tree so I'm not concerned about having to make design changes later  (and I may ultimately prefer the scheme here after all  with the  `#[staged_api]` crate attribute).    Since the Rust codebase itself makes use of unstable features the  compiler and build system to a midly elaborate dance to allow it to  bootstrap while disobeying these lints (which would otherwise be  errors because Rust builds with `-D warnings`).    This patch includes one significant hack that causes a  regression. Because the `format_args!` macro emits calls to unstable  APIs it would trigger the lint.  I added a hack to the lint to make it  not trigger  but this in turn causes arguments to `println!` not to be  checked for feature gates. I don't presently understand macro  expansion well enough to fix. This is bug #20661.    Closes #16678    [rc]: https://github.com/rust-lang/rfcs/blob/master/text/0507-release-channels.md   ,43,112,   src/librustc/lint/builtin.rs--19--3--22   src/librustc/lint/context.rs--12--1--13   src/librustc_driver/lib.rs--6--1--7   src/librustc/session/config.rs--5--1--6   src/libsyntax/std_inject.rs--2--4--6   src/librustc/middle/stability.rs--5--0--5   configure--4--0--4   mk/main.mk--4--0--4   src/librustc/metadata/csearch.rs--4--0--4   src/test/compile-fail/feature-gate-feature-gate.rs--4--0--4   .../feature-gated-feature-in-macro-arg.rs--3--0--3   src/librustdoc/core.rs--1--1--2   src/libsyntax/codemap.rs--1--1--2   src/libgraphviz/lib.rs--1--0--1   src/liblibc/lib.rs--1--0--1   src/liblog/lib.rs--1--0--1   src/librand/lib.rs--1--0--1   src/librbml/lib.rs--1--0--1   src/libregex/lib.rs--1--0--1   src/librustc/lib.rs--1--0--1   src/librustc/lint/mod.rs--1--0--1   src/libcore/lib.rs--1--0--1   src/librustc_back/lib.rs--1--0--1   src/librustc_borrowck/lib.rs--1--0--1   src/liballoc/lib.rs--1--0--1   src/librustc_llvm/lib.rs--1--0--1   src/librustc_resolve/lib.rs--1--0--1   src/librustc_trans/lib.rs--1--0--1   src/librustc_typeck/lib.rs--1--0--1   src/libarena/lib.rs--1--0--1   src/librustdoc/lib.rs--1--0--1   src/librustdoc/test.rs--1--0--1   src/libserialize/lib.rs--1--0--1   src/libstd/lib.rs--1--0--1   src/libcollections/lib.rs--1--0--1   src/libsyntax/lib.rs--1--0--1   src/libflate/lib.rs--1--0--1   src/libterm/lib.rs--1--0--1   src/libtest/lib.rs--1--0--1   src/libunicode/lib.rs--1--0--1   src/libfmt_macros/lib.rs--1--0--1   src/libgetopts/lib.rs--1--0--1   src/test/pretty/issue-4264.pp--0--1--1,Adaptive,
13770,c5447eb3c167025fcc1b842fabd7bb43a2eb1e9e,Make lint skip macros, ,3,18,   tests/ui/unnecessary_wrap.rs--7--2--9   tests/ui/unnecessary_wrap.stderr--3--3--6   clippy_lints/src/unnecessary_wrap.rs--2--1--3,Perfective,
114037,dd2716f56c7cf55f2904fbbf4dfabaab1afbcd88,Fix bad register use in GC sweep pass., ,1,14,   src/boot/be/x86.ml--9--5--14,Corrective,
41746,beb0c74950ec51582b58e3f13e5b2a47b14f524d,Combine all builtin early lints and use a separate walk for plugin lints. Add a -Z no-interleave-lints option to allow benchmarking lints, ,10,83,   src/librustc/lint/context.rs--21--12--33   src/librustc/lint/mod.rs--13--6--19   src/librustc_lint/builtin.rs--10--0--10   src/librustc_lint/lib.rs--5--5--10   src/librustc_lint/unused.rs--3--0--3   src/librustc_driver/driver.rs--1--1--2   src/librustc_lint/nonstandard_style.rs--2--0--2   src/librustc_lint/types.rs--2--0--2   src/librustc/lint/builtin.rs--1--0--1   src/librustc/session/config.rs--1--0--1,Adaptive,
40323,3fe454a3bd42ea54fc4c91a4a6b4240469101b3a,Update cranelift, ,1,20,   Cargo.lock--10--10--20,Perfective,
14193,67d0db6b008f98c1a1ba8ed6c267105433250fc9,Fix handling of item names for HIR,- Handle variants  fields  macros in `Node::ident()`  - Handle the crate root in `opt_item_name`  - Factor out `item_name_from_def_id` to reduce duplication  - Look at HIR before the DefId for `opt_item_name`      This gives accurate spans  which are not available from serialized    metadata.    - Don't panic on the crate root in `opt_item_name`  - Add comments   ,3,36,   compiler/rustc_middle/src/ty/mod.rs--22--10--32   compiler/rustc_hir/src/hir.rs--2--0--2   compiler/rustc_middle/src/hir/map/mod.rs--1--1--2,Corrective,
29586,e5816a75cc9951218e6ec06f64a5f07575c36770,Fix some rustdoc error capitalization, ,8,38,   src/test/rustdoc-ui/doc-without-codeblock.rs--4--4--8   src/test/rustdoc-ui/doc-without-codeblock.stderr--4--4--8   src/librustdoc/passes/mod.rs--3--3--6   src/test/rustdoc-ui/lint-group.rs--2--2--4   src/test/rustdoc-ui/lint-group.stderr--2--2--4   src/test/rustdoc-ui/lint-missing-doc-code-example.stderr--2--2--4   src/test/rustdoc-ui/private-item-doc-test.rs--1--1--2   src/test/rustdoc-ui/private-item-doc-test.stderr--1--1--2,Perfective,
31480,a9752596d3d377e34f99512eb6bc256512509610,Add more tests for underscore imports, ,4,76,   src/test/ui/underscore-imports/macro-expanded.rs--24--0--24   src/test/ui/underscore-imports/hygiene.rs--21--0--21   src/test/ui/underscore-imports/hygiene-2.rs--17--0--17   src/test/ui/underscore-imports/hygiene.stderr--14--0--14,Perfective,
52786,a8bb8925cbb8a3374e5a58dc988e7010583a6e91,Fix clippy warning, ,1,2,   src/main.rs--1--1--2,Corrective,
12583,7948f919108b43d69debcf7ed57d8944407463dd,Run the annoying lint separately, ,2,25,   .../src/thir/pattern/deconstruct_pat.rs--9--13--22   .../rustc_mir_build/src/thir/pattern/usefulness.rs--2--1--3,Perfective,
43289,982a9662c51b7746fd8aa1347034520667de2e8a,Mention `alloc` in the name of the interning methods, ,2,14,   src/librustc/mir/interpret/mod.rs--6--6--12   src/librustc_mir/interpret/memory.rs--1--1--2,Perfective,
97584,5e1d6c2c8011f466d2a524231e5386df0b5ed841,libsyntax: add #[deriving(Rand  ToStr)].,"The former fills each field of a struct or enum variant with a random  value (and picks a random enum variant). The latter makes the .to_str  method have the same output as fmt!(""%?""  ..).   ",3,51,   src/libsyntax/ext/deriving/rand.rs--35--0--35   src/libsyntax/ext/deriving/to_str.rs--14--0--14   src/libsyntax/ext/deriving/mod.rs--2--0--2,Adaptive,
68925,848cfe20a01b3d43d4c9838bd7d9b0da32dace42,Link test to compiler builtins and make unstable,This commit fixes a test which now needs to explicitly link to the  `compiler_builtins` crate as well as makes the `compiler_builtins` crate  unstable.   ,4,12,   src/libcompiler_builtins/lib.rs--4--1--5   src/test/run-make/no-duplicate-libs/bar.rs--2--1--3   src/test/run-make/no-duplicate-libs/foo.rs--2--1--3   src/libstd/lib.rs--1--0--1,Perfective,
51776,9680f3b381767010c97b5d3ea0a14fdc19efde0c,Skip NLL compiletest in rustfix mode for now, ,2,9,   src/tools/compiletest/src/runtest.rs--4--1--5   src/tools/compiletest/src/common.rs--2--2--4,Adaptive,
88021,d3202354f5fe3860c429adc4bab6e6dc88ee83bc,AST refactoring: merge PatWild and PatWildMulti into one variant with a flag., ,20,78,   src/libsyntax/ast.rs--12--2--14   src/librustc/middle/check_match.rs--5--8--13   src/libsyntax/parse/parser.rs--3--3--6   src/libsyntax/print/pprust.rs--3--3--6   src/librustc/middle/pat_util.rs--2--2--4   src/librustc/middle/trans/_match.rs--2--2--4   src/librustdoc/clean/mod.rs--2--2--4   src/libsyntax/fold.rs--1--2--3   src/libregex_macros/lib.rs--1--1--2   src/librustc/middle/cfg/construct.rs--1--1--2   src/librustc/middle/kind.rs--1--1--2   src/librustc/middle/mem_categorization.rs--1--1--2   src/librustc/middle/trans/base.rs--1--1--2   src/librustc/middle/trans/debuginfo.rs--1--1--2   src/librustc/middle/typeck/check/_match.rs--1--1--2   src/librustc/middle/typeck/collect.rs--1--1--2   src/libsyntax/ast_util.rs--1--1--2   src/libsyntax/ext/base.rs--1--1--2   src/libsyntax/ext/build.rs--1--1--2   src/libsyntax/visit.rs--1--1--2,Perfective,
35731,0c2c2416bfc312f9d119b6ec13773d9e6a49ee90,address nits, ,6,12,   src/test/ui/async-await/multiple-lifetimes/variance.rs--1--1--2   .../multiple-lifetimes/ordinary-bounds-pick-original-elided.rs--1--1--2   .../multiple-lifetimes/ordinary-bounds-pick-original-existential.rs--1--1--2   .../ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original.rs--1--1--2   src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-other.rs--1--1--2   src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-unsuited.rs--1--1--2,Perfective,
55407,567f040c65808867936f61cfc47d2621a40278bb,fix prelude reexport of convert::id, ,2,8,   src/libcore/prelude/v1.rs--2--2--4   src/libstd/prelude/v1.rs--2--2--4,Corrective,
50967,bbcace5080a73ea36417b1d4f6b846a2a01f9202,Use precomputed DFS of borrows that out of scope at a location., ,1,29,   src/librustc_mir/dataflow/impls/borrows.rs--25--4--29,Adaptive,
87569,e29aa1430bb45d18a5d3fcc5f3b7d20e99a57758,move back::link::write into a separate file, ,7,94,   src/librustc/back/link.rs--1--41--42   src/librustc/back/write.rs--41--0--41   src/librustc/driver/driver.rs--2--2--4   src/librustc/back/lto.rs--1--1--2   src/librustc/driver/config.rs--1--1--2   src/librustdoc/test.rs--1--1--2   src/librustc/lib.rs--1--0--1,Perfective,
65232,fad74c8ac9dcf9cd0f9db5439a30e5cadf5d6542,Support field-init-shorthand (#1308), ,3,60,   src/expr.rs--21--16--37   tests/target/struct_lits.rs--15--0--15   tests/source/struct_lits.rs--8--0--8,Adaptive,
97978,c5baeb1db3d84e1ab0d14a8055db3a7d3cba638d,testsuite: update tests to not use math intrinsics directly, ,2,10,   src/test/bench/shootout-nbody.rs--2--4--6   src/test/bench/shootout-spectralnorm.rs--1--3--4,Perfective,
109101,adec3ecfe0424826b4a55b837dd71fbd8ef4a27c,Remove compiler-bug-workaround that's no longer needed, ,1,18,   src/comp/middle/trans.rs--4--14--18,Perfective,
86724,dbf0167de924a6f2b579267046fe0a07a124442f,debuginfo: Make some path LLDB-related paths in the test runner absolute to help the build bots., ,1,25,   src/compiletest/runtest.rs--21--4--25,Adaptive,
74096,6aa3d0f11a26ff69b4675f780f66010c46169e38,Swap lang item collect order (externals are now collected before locals), ,1,8,   src/librustc/middle/lang_items.rs--4--4--8,Perfective,
104860,3e6943d8201215e60b74df7d3be8f48a52b3c2b7,refactor fixup_self, ,2,37,   src/rustc/middle/typeck.rs--21--15--36   src/test/run-pass/regions-borrow.rs--1--0--1,Perfective,
45792,76625234924bb9dbdd9d4783c227999f7e352c73,Span::def_site() is now at #54724, ,1,2,   src/libproc_macro/lib.rs--1--1--2,Perfective,
37501,3e73ca6e336650eb0cb8429b3932d63d71c2a476,Move run-pass/self/* to ui/self, ,23,6,   src/test/{run-pass=>ui}/self/explicit-self-closures.rs--1--1--2   src/test/{run-pass=>ui}/self/self-in-typedefs.rs--1--1--2   src/test/{run-pass=>ui}/self/self-type-param.rs--1--1--2   src/test/{run-pass=>ui}/self/auxiliary/explicit_self_xcrate.rs--0--0--0   src/test/{run-pass=>ui}/self/builtin-superkinds-self-type.rs--0--0--0   src/test/{run-pass=>ui}/self/by-value-self-in-mut-slot.rs--0--0--0   src/test/{run-pass=>ui}/self/explicit-self-generic.rs--0--0--0   src/test/{run-pass=>ui}/self/explicit-self-objects-uniq.rs--0--0--0   src/test/{run-pass=>ui}/self/explicit-self.rs--0--0--0   src/test/{run-pass=>ui}/self/explicit_self_xcrate_exe.rs--0--0--0   src/test/{run-pass=>ui}/self/move-self.rs--0--0--0   .../{run-pass=>ui}/self/object-safety-sized-self-by-value-self.rs--0--0--0   .../{run-pass=>ui}/self/object-safety-sized-self-generic-method.rs--0--0--0   src/test/{run-pass=>ui}/self/object-safety-sized-self-return-Self.rs--0--0--0   src/test/{run-pass/self/self-impl.rs=>ui/self/self-impl-2.rs}--0--0--0   src/test/{run-pass=>ui}/self/self-in-mut-slot-default-method.rs--0--0--0   src/test/{run-pass=>ui}/self/self-in-mut-slot-immediate-value.rs--0--0--0   src/test/{run-pass=>ui}/self/self-re-assign.rs--0--0--0   src/test/{run-pass=>ui}/self/self-shadowing-import.rs--0--0--0   src/test/{run-pass=>ui}/self/string-self-append.rs--0--0--0   src/test/{run-pass=>ui}/self/ufcs-explicit-self.rs--0--0--0   src/test/{run-pass=>ui}/self/uniq-self-in-mut-slot.rs--0--0--0   src/test/{run-pass=>ui}/self/where-for-self.rs--0--0--0,Perfective,
89103,b5d9e941f52c67b8628f9044da7c24371335a15d,Add a Syntastic plugin for Rust., ,2,49,   src/etc/vim/syntax_checkers/rust/rustc.vim--30--0--30   src/etc/vim/plugin/rust.vim--19--0--19,Adaptive,
62324,9debe91675222782e08fbb15bb6359a05bf85131,Add conversions from File and Child* handles to Stdio,`Stdio` now implements `From<ChildStdin>`  `From<ChildStdout>`   `From<ChildStderr>`  and `From<File>`.    The `Command::stdin`/`stdout`/`stderr` methods now take any type that  implements `Into<Stdio>`.    This makes it much easier to write shell-like command chains  piping to  one another and redirecting to and from files.  Otherwise one would need  to use the unsafe and OS-specific `from_raw_fd` or `from_raw_handle`.   ,6,54,   src/test/run-pass-fulldeps/stdio-from.rs--27--0--27   src/libstd/process.rs--11--2--13   src/libstd/sys/redox/process.rs--4--0--4   src/libstd/sys/unix/process/process_common.rs--4--0--4   src/libstd/sys/windows/process.rs--4--0--4   src/test/run-pass/issue-30490.rs--1--1--2,Adaptive,
12304,8f3cb7d75d0271066a11502d331333dc804e5d14,Make [A]Rc::allocate_for_layout() use try_allocate_for_layout(), ,2,28,   library/alloc/src/rc.rs--3--12--15   library/alloc/src/sync.rs--2--11--13,Perfective,
74290,71f29cd83704b39a2aefd609eab645decd3bce92,CStr::from_bytes_with_nul tests, ,1,27,   src/libstd/ffi/c_str.rs--27--0--27,Perfective,
108902,71297a5e178e3f616f3502ac1a365a33c8f20bb8,Remove redundant line., ,1,1,   doc/rust.texi--0--1--1,Perfective,
87697,ee25b6bdebf3bd079d4129470c31b803c21bdedc,debuginfo: Allow to activate GDB pretty printers in autotests., ,1,46,   src/compiletest/runtest.rs--42--4--46,Adaptive,
65831,61fbdbba41163b6fd327b166338a8feb89133444,Add Debug implementations for libcollection structs, ,10,158,   src/libcollections/btree/map.rs--38--0--38   src/libcollections/btree/set.rs--34--0--34   src/libcollections/linked_list.rs--25--0--25   src/libcollections/vec_deque.rs--20--0--20   src/libcollections/binary_heap.rs--19--0--19   src/libcollections/vec.rs--10--0--10   src/libcollections/enum_set.rs--5--0--5   src/libcollections/str.rs--3--0--3   src/libcollections/string.rs--3--0--3   src/libcollections/lib.rs--1--0--1,Adaptive,
17196,1016deb592cec6d02e963bb3ffbfbb2c4f9309b8,Small cleanups in Windows Mutex.,- Move `held` into the boxed part  since the SRW lock implementation    does not use this. This makes the Mutex 50% smaller.  - Use `Cell` instead of `UnsafeCell` for `held`  such that `.replace()`    can be used.  - Add some comments.   ,1,36,   library/std/src/sys/windows/mutex.rs--18--18--36,Perfective,
9725,e7f340e19be8a4d50214c364aabb5577b6b38e9f,BTree: move blocks around in node.rs, ,1,28,   library/alloc/src/collections/btree/node.rs--14--14--28,Perfective,
11090,c013f2a735989a4407201eaaafcba3844ef1846e,Improve diff display in case the whole key in missing, ,1,4,   src/tools/rustdoc-js/tester.js--4--0--4,Perfective,
84186,2a320f21d0e5f943b9cd02bb7882531bfb7ef0b9,Fix playpen links to not all be the same,Fixes #20732  that all links in some modules point to the same code  examples was reported. The ID's generated for documents in  librustdoc are not all unique  which means the code rendered as  text is not being properly selected.    This change removes the unique id generation and instead changes the  frontend code to grab the correct code sample by it's relative  position in the dom.   ,2,29,   src/librustdoc/html/markdown.rs--8--17--25   src/librustdoc/html/static/playpen.js--1--3--4,Corrective,
33256,5187a3e15723c85cd7ef3418b0c0e61c79709f4c,Harden param_attrs test wrt. usage of proc macro attrs., ,3,28,   .../proc-macro-cannot-be-used.stderr--21--0--21   .../proc-macro-cannot-be-used.rs--6--0--6   .../ui/rfc-2565-param-attrs/auxiliary/ident-mac.rs--1--0--1,Adaptive,
23766,9fc77c0e1575abf98ea2c509278abda0cd5a7b0b,add detailed panic messages for Vec functions, ,1,53,   src/liballoc/vec.rs--47--6--53,Adaptive,
25617,e2738285ea7374bc6423ea6de095ad0e8990975d,Wording improvement, ,1,6,   src/librustc_error_codes/error_codes/E0748.md--4--2--6,Perfective,
1960,6518a0a8b9570b6d347a3c7b2c9b95e66cbbd013,Change `Markdown(...)` to `Markdown { ... }`, ,6,121,   src/librustdoc/html/markdown.rs--23--10--33   src/librustdoc/html/render/mod.rs--14--15--29   src/librustdoc/html/markdown/tests.rs--15--4--19   src/librustdoc/externalfiles.rs--15--2--17   src/tools/error_index_generator/main.rs--7--7--14   src/librustdoc/markdown.rs--8--1--9,Perfective,
69004,62cb7510ac6285c93ec691198a92f910582d31a2,Improve `Eq` deriving, ,7,69,   src/libsyntax_ext/deriving/cmp/eq.rs--17--9--26   src/test/compile-fail/union/union-derive-eq.rs--14--0--14   src/libsyntax/ext/build.rs--9--0--9   src/libsyntax_ext/deriving/clone.rs--1--6--7   src/libcore/cmp.rs--5--1--6   src/test/run-pass/union/union-derive.rs--5--1--6   src/test/compile-fail/union/union-derive.rs--0--1--1,Perfective,
65062,bf21c84629278b862f2df184542aff1e3512a44f,Ensure deref_span is empty for Vec and String, ,1,5,   clippy_lints/src/needless_pass_by_value.rs--4--1--5,Perfective,
51734,d560049ae9b2890d709b0605e59f06859b7bf4ae,Add rustfmt.toml, ,1,2,   rustfmt.toml--2--0--2,Adaptive,
15448,07637db8836b2354241df91470886e228a7af87e,Remove deprecated unstable Vec::resize_default, ,1,44,   library/alloc/src/vec.rs--0--44--44,Perfective,
41712,13b5ea4223480265059356ed80e233e9f1b8a570,Fix automatic suggestion on `use_self`., ,2,18,   clippy_lints/src/use_self.rs--6--6--12   tests/ui/use_self.stderr--3--3--6,Corrective,
78726,6e311e7af44510f048cfcbe27830e1b2cbda190b,Make C_u8 take a u8 instead of a usize value, ,6,16,   src/librustc_trans/trans/adt.rs--2--2--4   src/librustc_trans/trans/base.rs--2--2--4   src/librustc_trans/trans/_match.rs--1--1--2   src/librustc_trans/trans/common.rs--1--1--2   src/librustc_trans/trans/datum.rs--1--1--2   src/librustc_trans/trans/expr.rs--1--1--2,Perfective,
64770,846f59f831a6ec2a9ff7c6cedb6653ae329704f8,import reference submodule, ,2,4,   .gitmodules--3--0--3   src/doc/reference--1--0--1,Perfective,
901,5239a90f70c7e03660c2d9f4eb395de7dc7be37b,Factor in some expr_visitor usages, ,6,103,   clippy_utils/src/visitors.rs--8--28--36   clippy_utils/src/usage.rs--8--18--26   clippy_utils/src/lib.rs--5--12--17   clippy_utils/src/ptr.rs--5--9--14   clippy_lints/src/implicit_return.rs--4--4--8   clippy_lints/src/eta_reduction.rs--1--1--2,Perfective,
56150,594c3865499533860c2d44ee5c01f7802d8e86bb,"dump out causal information for ""free region"" errors",The result is not especially illuminating  but that's ok.   ,3,28,   .../borrow_check/nll/region_infer/mod.rs--20--2--22   .../borrow_check/nll/region_infer/values.rs--4--1--5   src/librustc/session/config.rs--1--0--1,Adaptive,
3963,40136e196992b3861b938a44cbc90780b3f4aca7,Implement sequential execution, ,1,10,   src/tools/rustdoc-gui/tester.js--7--3--10,Adaptive,
40252,7330525e8fa8e873bc7feeb476fa161d20786a43,fixed tests again, ,1,26,   src/libcore/tests/nonzero.rs--12--14--26,Perfective,
30283,09fff5063749662973456a076dd3f9133dc01ecf,resolve: Factor out some common binding creation functionality, ,1,42,   src/librustc_resolve/macros.rs--14--28--42,Perfective,
108395,5b0f79b75a40370625383e4fe81bcec5f68ee18d,Don't allow bind to produce bare functions,Issue #1022   ,2,22,   src/comp/middle/typeck.rs--12--1--13   src/test/compile-fail/fn-bare-bind.rs--9--0--9,Perfective,
78243,14528d433af176f36aab475318691676c3de4464,Simplified reexported ast::* type paths.,Also removed trailing whitespaces.   ,1,59,   src/types.rs--29--30--59,Perfective,
44106,98f61a3195663465bc2f65287fbcbe14761fe6a8,core/benches: Add `char::to_digit()` benchmarks, ,3,48,   src/libcore/benches/char/methods.rs--37--0--37   src/libcore/benches/char/mod.rs--10--0--10   src/libcore/benches/lib.rs--1--0--1,Adaptive,
67965,984e15a0c0bc87b07050bc6f9b7036126cb577ea,Forbid default warnings in dogfood, ,1,2,   tests/dogfood.rs--1--1--2,Perfective,
92889,fdd6750570cf1434264a601fd2b749d7fe01dee8,compiletest: Remove uses of `Cell`., ,1,14,   src/compiletest/compiletest.rs--6--8--14,Perfective,
55302,b8ffc8a3d8c181e958d2ddf4f108f0cd3a108013,Add an unstable `cast<U>() -> NonNull<U>` method to `NonNull<T>`.,This is less verbose than going through raw pointers to cast with `as`.   ,1,8,   src/libcore/ptr.rs--8--0--8,Adaptive,
76890,3ed49ef6f3bcf4cdd4ae3fde4951848f905f02d2,Add example to install git in MSYS2, ,1,5,   README.md--4--1--5,Perfective,
66841,cf56c1f744c3e7c71a1d5a80b8889b9fab8f6de7,Indicate `BTreeSet` in docs is code-like., ,1,10,   src/libcollections/btree/set.rs--5--5--10,Perfective,
24909,b97d4383a4e82b084e9044ea47bad39fbfb91649,Remove `Hir` and `HirBody` dep nodes, ,7,20,   src/librustc/dep_graph/dep_node.rs--0--7--7   src/librustc_incremental/persist/dirty_clean.rs--1--2--3   src/librustc/dep_graph/graph.rs--1--1--2   src/librustc/hir/map/collector.rs--1--1--2   src/librustc/hir/map/hir_id_validator.rs--1--1--2   src/librustc/ty/query/mod.rs--0--2--2   src/librustc_incremental/assert_dep_graph.rs--1--1--2,Perfective,
72064,78caee20c7e15f286147fc1a35fb0682cb046ab9,Add test for size_of_val::<str>., ,1,1,   tests/run-pass/intrinsics.rs--1--0--1,Perfective,
88691,1af8663579c0e0eb08fda29df51d0eefb2e2b6de,librustc: Make sure to run destructors in the right order when matching on moved value., ,3,58,   src/test/run-pass/order-drop-with-match.rs--30--0--30   src/librustc/middle/trans/cleanup.rs--18--2--20   src/librustc/middle/trans/_match.rs--5--3--8,Adaptive,
51182,196b2e0d82d6d687e0b61ebd4db100951c908556,rustc: don't call Kind::from directly  use .into() instead., ,8,66,   src/librustc/ty/subst.rs--4--25--29   src/librustc/infer/canonical.rs--5--5--10   src/librustc_typeck/astconv.rs--4--4--8   src/librustc/traits/select.rs--2--2--4   src/librustc_mir/monomorphize/collector.rs--2--2--4   src/librustc_mir/shim.rs--2--2--4   src/librustc_typeck/check/mod.rs--2--2--4   src/librustc_codegen_llvm/base.rs--1--2--3,Perfective,
85228,8f194de95d00fe540d848cc9a7d3e049ce3684ab,bitv: correct build failures,- Fix typos on Blocks and MutBlocks.  - Use slice_to_mut() for creating blocks_mut().  - Deref the block parameter in get().  - Access nbits separately from mutating set in pop().   ,1,15,   src/libcollections/bit.rs--8--7--15,Corrective,
47782,9730871773ab4f3ff208f79dedd158dfc3bf95e1,Update cargo, ,2,59,   src/Cargo.lock--38--19--57   src/tools/cargo--1--1--2,Perfective,
35820,2b47a085dd418447f1dd79986df94dd051f27c79,Address review remarks in unicode.py, ,1,41,   src/libcore/unicode/unicode.py--22--19--41,Perfective,
20854,e9b0ce8afa5635d3825b5e76e0b3593d9086778a,Add test for overflow when finding auto-trait impls in Rustdoc, ,1,29,   src/test/rustdoc/synthetic_auto/overflow.rs--29--0--29,Perfective,
105586,6f8fe781200e985d4d12d1b0ea4a7b338e6220a5,rustc: Parse the safe address-of operator, ,1,6,   src/rustc/syntax/parse/parser.rs--6--0--6,Adaptive,
5049,1719d4501351eff05299a124dc13846afa2994a0,Inline implementation of lookup_line,to simplify the implementation and avoid unnecessary  conversions from `Option<usize>` to `isize` and back.   ,2,41,   compiler/rustc_span/src/tests.rs--12--9--21   compiler/rustc_span/src/lib.rs--4--16--20,Perfective,
64864,2b5c0267b45edaefa19427b70a7381782b6330fc,kill the code path for E0388,This was specific to the old special-case handling of statics in  borrowck.   ,2,34,   src/librustc_borrowck/diagnostics.rs--1--21--22   src/librustc_borrowck/borrowck/mod.rs--7--5--12,Perfective,
103278,b1af6ac6f1baceffc63d097af6686e11974b6e1a,Make the matcher parser treat `()` in a matchy way  like one would expect., ,1,31,   src/libsyntax/parse/parser.rs--25--6--31,Perfective,
51669,47742807f7c4078d8f78d752b647239b6b136117,Ensure tests pass on the beta compiler,Also add a travis matrix entry for emulating the beta tests   ,2,9,   .travis.yml--5--0--5   src/test/mod.rs--4--0--4,Perfective,
75625,1fe2a77dd8b8bf29bef0a527339a3dbe4d50b254,Fix some links in str docs, ,1,6,   src/libcollections/str.rs--3--3--6,Perfective,
64601,6b7b26228894a88bae0d1168777cc227cf7281da,Updating README.md to point to the correct doc location, ,1,5,   README.md--3--2--5,Perfective,
105017,21be1379d561b6679a8a2ea47dce88f948c5acca,Rename some core::option functions,from_maybe => get_with_default  maybe => with_option  may => with_option_do    I know these names are kind of ridiculous  but it's the best I could think of.  Feel free to bikeshed. Closes #2081   ,31,131,   src/rustc/metadata/astencode.rs--13--13--26   src/libcore/option.rs--7--6--13   src/rustdoc/config.rs--5--3--8   src/libcore/os.rs--4--3--7   src/libcore/result.rs--3--4--7   src/rustc/middle/last_use.rs--3--3--6   src/rustc/middle/trans/base.rs--3--3--6   src/librustsyntax/diagnostic.rs--2--2--4   src/rustc/middle/kind.rs--2--2--4   src/rustc/middle/resolve.rs--2--2--4   src/rustc/middle/trans/type_use.rs--2--2--4   src/rustc/middle/tstate/states.rs--2--2--4   doc/tutorial.md--1--1--2   src/compiletest/header.rs--1--1--2   src/libcore/iter.rs--1--1--2   src/libcore/task.rs--1--1--2   src/librustsyntax/ext/qquote.rs--1--1--2   src/librustsyntax/parse/eval.rs--1--1--2   src/librustsyntax/print/pprust.rs--1--1--2   src/librustsyntax/visit.rs--1--1--2   src/rustc/metadata/cstore.rs--1--1--2   src/rustc/metadata/decoder.rs--1--1--2   src/rustc/middle/check_const.rs--1--1--2   src/rustc/middle/trans/closure.rs--1--1--2   src/rustc/middle/trans/common.rs--1--1--2   src/rustc/middle/trans/reachable.rs--1--1--2   src/rustc/middle/tstate/pre_post_conditions.rs--1--1--2   src/rustc/middle/ty.rs--1--1--2   src/rustc/middle/typeck.rs--1--1--2   src/rustdoc/attr_pass.rs--1--1--2   src/rustdoc/reexport_pass.rs--1--1--2,Perfective,
45229,05f67ca1a27a9e69cd99d540a0241759b83cc1bd,remove the sub/super terminology for universes,"Instead  we talk about:    - creating the ""next"" universe  - universes ""extending"" one another  - and `u1.can_name(u2)`  meaning that `u1` contains all names from `u2`   ",6,45,   src/librustc/ty/mod.rs--12--10--22   src/librustc/infer/mod.rs--3--3--6   .../borrow_check/nll/region_infer/mod.rs--3--3--6   .../borrow_check/nll/type_check/relate_tys.rs--2--3--5   src/librustc/infer/higher_ranked/mod.rs--1--2--3   .../borrow_check/nll/region_infer/values.rs--1--2--3,Perfective,
87489,313cb8acaea05e703441bd5adb92aacce5bf6411,Change ItemModifier and ItemDecorator to traits,For convenience  the traits are implemented for the respective bare  functions. Change code from this:    ```rust  ItemDecorator(some_function)  // or  ItemModifier(some_other_function)  ```  to  ```rust  ItemDecorator(box some_function)  // or  ItemModifier(box some_other_function)  ```    [breaking-change]   ,3,43,   src/libsyntax/ext/base.rs--29--5--34   src/libsyntax/ext/expand.rs--3--4--7   src/test/auxiliary/macro_crate_test.rs--1--1--2,Perfective,
70036,627b1e8ec72dfda6944ff247d50d470f8d1d672b,add test for nested deprecated, ,1,24,   src/test/compile-fail/deprecation-lint-nested.rs--24--0--24,Perfective,
54837,5437188e100d704516dd5803378ee5ccd29edfe1,update mdbook to 0.1.2,and improve printing of errors   ,3,53,   src/Cargo.lock--37--5--42   src/tools/rustbook/src/main.rs--6--3--9   src/tools/rustbook/Cargo.toml--1--1--2,Perfective,
30439,32453ce488909ec12b893ceb9a204718eae724e4,remvoe to_scalar_ptr and use ref_to_mplace everywhere, ,4,75,   src/librustc_mir/interpret/validity.rs--12--22--34   src/librustc_mir/interpret/intern.rs--8--10--18   src/librustc_mir/interpret/operand.rs--0--16--16   src/librustc_mir/interpret/place.rs--5--2--7,Perfective,
48918,814e6e60f9f0922b0cfa720102a23e0b7a5a0828,Compile rustc before building tests for rustdoc, ,1,1,   src/bootstrap/test.rs--1--0--1,Perfective,
40422,e68044f8bcd2b1e90a969fe355b91728d2842d4d,add a section to Configuration.md,- attributes => attribute   ,1,21,   Configurations.md--21--0--21,Perfective,
12900,5833f74a9cd2316dae030155a36c16bcc7805da5,use if let Some(x) = ..  instead of ...map(|x|) to conditionally run fns that return () (clippy::option_map_unit_fn), ,2,25,   .../src/traits/error_reporting/suggestions.rs--11--11--22   compiler/rustc_mir_build/src/build/scope.rs--1--2--3,Perfective,
1857,b6f09a19b2345a6a898d176570496dea44b06aac,comma-related changes,Signed-off-by: Eliza Weisman <eliza@buoyant.io>   ,2,4,   compiler/rustc_codegen_ssa/src/back/link.rs--1--1--2   compiler/rustc_mir_dataflow/src/rustc_peek.rs--1--1--2,Perfective,
63810,7832db8031a9051d377e1da92bbcd56e366354c1,fix long line, ,1,3,   src/librustc/traits/structural_impls.rs--2--1--3,Perfective,
14717,cb8b9012dba9e467c052b3cc047e0c7babfcf724,Address review comments, ,5,17,   src/test/ui/lint/lint-temporary-cstring-as-param.rs--2--2--4   src/test/ui/lint/lint-temporary-cstring-as-param.stderr--2--2--4   src/test/ui/lint/lint-temporary-cstring-as-ptr.rs--2--2--4   src/test/ui/lint/lint-temporary-cstring-as-ptr.stderr--2--2--4   library/std/src/ffi/c_str.rs--0--1--1,Perfective,
3283,e6637284cca42cb497b6b767776136ede71c7119,Remove vestigial rustfix tests., ,20,87,   .../issue-46756-consider-borrowing-cast-or-binexpr.fixed--0--12--12   .../issue-46756-consider-borrowing-cast-or-binexpr.rs--0--12--12   src/test/rustfix/closure-immutable-outer-variable.fixed--0--10--10   src/test/rustfix/closure-immutable-outer-variable.rs--0--10--10   src/test/rustfix/missing-comma-in-match.fixed--0--7--7   src/test/rustfix/missing-comma-in-match.rs--0--7--7   src/test/rustfix/issue-45562.fixed--0--3--3   src/test/rustfix/issue-45562.rs--0--3--3   src/test/rustfix/str-as-char.fixed--0--3--3   src/test/rustfix/str-as-char.rs--0--3--3   src/test/rustfix/tuple-float-index.fixed--0--3--3   src/test/rustfix/tuple-float-index.rs--0--3--3   src/test/rustfix/empty-no-fixes.rs.fixed--0--2--2   ...45799-bad-extern-crate-rename-suggestion-formatting.fixed--0--2--2   ...ue-45799-bad-extern-crate-rename-suggestion-formatting.rs--0--2--2   src/test/rustfix/empty-no-fixes.fixed--0--1--1   src/test/rustfix/empty-no-fixes.rs--0--1--1   src/test/rustfix/main-no-fixes.fixed--0--1--1   src/test/rustfix/main-no-fixes.rs--0--1--1   src/test/rustfix/main-no-fixes.rs.fixed--0--1--1,Perfective,
75389,ea52d9ebdaf0e3f345628152fa387d8a69bef643,[MIR] Fix translation of ConstVal::{Struct  Tuple},Fixes #30772   ,2,47,   src/test/run-pass/mir_constval_adts.rs--32--0--32   src/librustc_trans/trans/mir/constant.rs--5--10--15,Corrective,
40836,6ea159ea7e4d7fb4c4527a60cb80ba5347bcff66,Expose hidden snippet suggestions, ,2,43,   src/librustc_errors/diagnostic.rs--23--0--23   src/librustc_errors/diagnostic_builder.rs--20--0--20,Adaptive,
109310,955bef3f4d7631a9183ed75e19c7b5830a29cadb,rustllvm: Emit frame map labels, ,1,1,   src/rustllvm/RustGCMetadataPrinter.cpp--1--0--1,Perfective,
74060,d78f19ebbdeb597cd15293e5f90dc9c106949048,Use const instead of function, ,1,8,   src/librustdoc/html/render.rs--3--5--8,Perfective,
47695,53837db0019248f947c93164868828debed170bb,"Revert ""Auto merge of #53035 - alexcrichton:debug-travis  r=kennytm""",This reverts commit 579adf8c727861841b4819b4913385c2782977fb  reversing  changes made to c11f2d286c747b44f8e03ce10f6daa36f5d8331c.   ,1,4,   .travis.yml--0--4--4,Corrective,
34575,62166ed9c8cd1b495bddc3fcfb02f48d3fa0e043,Correctly implement atomic_nand_* intrinsics,Fixes #639   ,1,7,   src/intrinsics.rs--6--1--7,Corrective,
97415,e605536648c76b220b583b5525d1fed2750f9ae8,actually fix failing test, ,1,2,   src/test/compile-fail/issue-2937.rs--1--1--2,Perfective,
87589,f3f038c8566560e7367e0615d17ba104b71f6d8a,Allow trailing commas in bitflags! macro, ,1,18,   src/libstd/bitflags.rs--14--4--18,Adaptive,
54453,6af23f977c44fc67d8611b2581c334e795999bcd,add Iterator::flatten and redefine flat_map(f) in terms of map(f).flatten(), ,4,72,   src/libcore/iter/mod.rs--20--24--44   src/libcore/iter/iterator.rs--23--2--25   src/libcore/tests/iter.rs--2--0--2   src/libcore/lib.rs--1--0--1,Adaptive,
14324,232b9ba129b75fdf6b120c44f3696233915be40e,Move range in ui test to ops test in library/core, ,2,87,   library/core/tests/ops.rs--46--1--47   src/test/ui/range.rs--0--40--40,Perfective,
100794,9aadfc3f4b5df00a7f8e9b362385118ae1dba73e,Make std::rl unsafe. #3921, ,2,31,   src/librusti/rusti.rs--9--7--16   src/libstd/rl.rs--9--6--15,Perfective,
42469,e40d7d9643b810b2bc62f279e1d6f4ad68a35bc2,Resolve `$crate`s for pretty-printing at more appropriate time, ,7,83,   src/librustc_resolve/macros.rs--20--2--22   .../ui/proc-macro/dollar-crate-issue-57089.stdout--9--13--22   src/libsyntax/ext/base.rs--12--0--12   src/librustc_resolve/build_reduced_graph.rs--0--10--10   .../ui/proc-macro/dollar-crate-issue-57089.stderr--0--10--10   src/libsyntax/ext/expand.rs--4--0--4   src/test/ui/proc-macro/dollar-crate-issue-57089.rs--2--1--3,Perfective,
93802,e3237493977abb17de584ba5065afaf2699e5b8c,extra: Don't truncate {u64 i64} when converting to BigInts, ,1,45,   src/libextra/num/bigint.rs--39--6--45,Adaptive,
85337,7a6c54c46e6ac28d82f940f1d1bf8d0a5fd7e820,Fix compilation on linux, ,3,17,   src/libstd/rt/args.rs--7--7--14   src/libstd/sys/unix/backtrace.rs--1--1--2   src/libstd/os.rs--0--1--1,Corrective,
71228,065a2649761e00d9a025e1efcf6ff09e291264aa,refactor simplify_cfg and split off simplify_branches, ,4,32,   src/librustc_mir/transform/simplify_cfg.rs--12--12--24   src/librustc_mir/transform/simplify_branches.rs--6--0--6   src/librustc_driver/driver.rs--1--0--1   src/librustc_mir/transform/mod.rs--1--0--1,Perfective,
23992,811d817eaf5d78522773ab9d21543629027e4ecb,"Dropping ""block is empty..."" error message on incorrect closing delimiter #70583", ,1,10,   src/librustc_parse/lexer/tokentrees.rs--3--7--10,Corrective,
45169,c99e5ff9dc0047f0e61fcbf54a4569c260527581,Update Cargo.lock, ,1,60,   Cargo.lock--30--30--60,Perfective,
3643,4130a323b6aa1df5466d3b0d13c0e51039b6827d,bootstrap.py: recognize riscv64 when auto-detect,The architecture auto-detect table has no entry for riscv64 (which rustc  uses riscv64gc for the first part of triplet  assuming it's a generic  Linux distro).    Add it to the table to allow riscv64 systems to bootstrap Rust.    Signed-off-by: Icenowy Zheng <icenowy@aosc.io>   ,1,1,   src/bootstrap/bootstrap.py--1--0--1,Perfective,
93515,d425218395b4a4dd7c6e4f3d680447efd2a3abc6,Bring io::signal up to date with changes to rt::rtio, ,3,76,   src/libstd/rt/io/signal.rs--29--17--46   src/libstd/rt/uv/signal.rs--8--20--28   src/libstd/rt/uv/uvio.rs--1--1--2,Perfective,
30153,139477df640516fc15d884bc895ae9f6823aff9a,Update mdbook., ,3,47,   Cargo.lock--20--21--41   src/tools/rustbook/src/main.rs--1--3--4   src/tools/rustbook/Cargo.toml--1--1--2,Perfective,
13839,88d1f31a904efdb28d504bc6dff5b6671a2f052b,mark raw_vec::ptr with inline, ,1,1,   library/alloc/src/raw_vec.rs--1--0--1,Perfective,
43030,30bc8e7f001c72c194b3f4abd8834313b143294d,Bump cranelift from `5fc828a` to `9d17fc9`,Bumps [cranelift](https://github.com/CraneStation/cranelift) from `5fc828a` to `9d17fc9`.  - [Release notes](https://github.com/CraneStation/cranelift/releases)  - [Commits](https://github.com/CraneStation/cranelift/compare/5fc828ab9b513006f9322ba03645eb5ac4da97ed...9d17fc9ac1bd378c8d62eef491431708f43efdf5)    Signed-off-by: dependabot[bot] <support@dependabot.com> ,1,20,   Cargo.lock--10--10--20,Perfective,
26519,ab6ea2bba771836ebbf8759e718fedd2c6d229d2,add regression test, ,2,42,   src/test/pretty/gat-bounds.pp--25--0--25   src/test/pretty/gat-bounds.rs--17--0--17,Perfective,
83928,9370ae1abf316ed4174abe21cf4ea93f8dec55aa,rustc_typeck: fix fallout of merging ast::ViewItem into ast::Item., ,2,6,   src/librustc_typeck/variance.rs--4--0--4   src/librustc_typeck/collect.rs--2--0--2,Corrective,
93446,01740acd5ab243e7b8c0e1e076ed56edcb9bf4d0,Initial implementation of enum discrimnant sizing.,Allows an enum with a discriminant to use any of the primitive integer  types to store it.  By default the smallest usable type is chosen  but  this can be overridden with an attribute: `#[repr(int)]` etc.  or  `#[repr(C)]` to match the target's C ABI for the equivalent C enum.    This commit breaks a few things  due to transmutes that now no longer  match in size  or u8 enums being passed to C that expects int  or  reflection; later commits on this branch fix them.   ,5,43,   src/librustc/middle/trans/adt.rs--23--6--29   src/librustc/middle/trans/debuginfo.rs--3--3--6   src/test/run-pass/small-enum-range-edge.rs--4--0--4   src/librustc/middle/trans/expr.rs--1--1--2   src/librustc/middle/trans/reflect.rs--1--1--2,Adaptive,
79588,14e3d26b8a19c56c2c2b2b99ee870a9002bb70e0,Add E0110 error explanation, ,2,24,   src/librustc/diagnostics.rs--19--2--21   src/librustc_typeck/diagnostics.rs--3--0--3,Perfective,
102715,ef46314d1e6418b57a1d0a4efb5853dcaf8077d4,std: integrating erickt's url encoding/decoding from github.com/erickt/rust-uri into std::net::url, ,1,50,   src/libstd/net_url.rs--49--1--50,Adaptive,
18280,ccbe94bf77e6a32fc9f31425bc820345be3143c0,Simplify search for bare `\r` in doc comments,Outer `if` is the fast path -- it calls into hyperoptimized memchr.    The inner loop is just the simplest code possible -- it doesn't  generated the tightest code  but that shouldn't matter if we are going  to error anyhow.   ,1,25,   src/librustc_parse/lexer/mod.rs--11--14--25,Perfective,
111558,072305af13585cba340f4f925cd25102abef9fc4,Remove CFG_OCAMLC_OPT, ,1,7,   Makefile.in--0--7--7,Perfective,
2631,0debea1377459e34b39bdbb5095d9e33cced9912,Allow taking an OwningRef of the crate metadata blob., ,2,30,   compiler/rustc_metadata/src/rmeta/decoder.rs--22--6--28   compiler/rustc_metadata/src/rmeta/table.rs--1--1--2,Adaptive,
50835,11c283cdfc536c2d0c984bea47c7ab246d4ed5d3,Prohibit duplicate `macro_export`s, ,8,91,   src/test/ui/issue-38715.stderr--22--0--22   src/librustc_resolve/resolve_imports.rs--13--3--16   src/test/ui/issue-38715.rs--16--0--16   src/librustc/lint/builtin.rs--13--0--13   src/test/run-pass/auxiliary/two_macros_2.rs--13--0--13   src/librustc_lint/lib.rs--5--0--5   src/test/run-pass/mod_dir_path.rs--2--2--4   src/test/run-pass/auxiliary/issue_38715.rs--2--0--2,Adaptive,
28255,0bcddfe23a4b96d970f953b99a2e4f28ece3c0d6,Normalize identifiers in librustc_parse., ,3,26,   src/librustc_parse/lexer/mod.rs--15--2--17   Cargo.lock--6--2--8   src/librustc_parse/Cargo.toml--1--0--1,Perfective,
95125,24d2cd0ef4585743736aa86fb4b94d00ca40f3ab,std: Iterator.take_ -> .take, ,2,51,   src/libstd/iterator.rs--24--25--49   src/libextra/ringbuf.rs--1--1--2,Perfective,
66988,5e51edb0de138d3805db5ca16160c829d3d32291,annotate stricter lifetimes on LateLintPass methods to allow them to forward to a Visitor, ,30,140,   src/libsyntax/visit.rs--11--10--21   src/librustc/lint/mod.rs--11--5--16   src/librustc_lint/builtin.rs--8--6--14   src/librustc_save_analysis/dump_visitor.rs--6--6--12   src/librustc/lint/context.rs--4--5--9   src/librustc_lint/bad_style.rs--4--3--7   src/librustc_passes/hir_stats.rs--3--4--7   src/librustc_lint/unused.rs--2--2--4   src/librustc_resolve/lib.rs--2--2--4   src/libsyntax/feature_gate.rs--2--2--4   src/librustc/hir/map/def_collector.rs--1--2--3   src/libsyntax_ext/proc_macro_registrar.rs--1--2--3   src/librustc/hir/check_attr.rs--1--1--2   src/librustc/hir/lowering.rs--1--1--2   src/librustc_lint/types.rs--1--1--2   src/librustc_passes/ast_validation.rs--1--1--2   src/librustc_passes/no_asm.rs--1--1--2   src/librustc_resolve/build_reduced_graph.rs--1--1--2   src/librustc_resolve/check_unused.rs--1--1--2   src/librustc_save_analysis/lib.rs--1--1--2   src/libsyntax/ext/expand.rs--1--1--2   src/libsyntax/parse/mod.rs--1--1--2   src/libsyntax/show_span.rs--1--1--2   src/libsyntax/util/node_count.rs--1--1--2   src/libsyntax_ext/deriving/custom.rs--1--1--2   src/libsyntax_ext/deriving/generic/mod.rs--1--1--2   .../auxiliary/lint_for_crate.rs--1--1--2   .../auxiliary/lint_group_plugin_test.rs--1--1--2   .../run-pass-fulldeps/auxiliary/lint_for_crate.rs--1--1--2   .../issue-37290/auxiliary/lint.rs--1--1--2,Adaptive,
77160,8afa1762f01be8855db823cdc1b3b1c3c3b3dcf9,use the struct's ctor-id as its variant def-id,this makes the code cleaner  and is a complement to the cleanup on the  HIR side.   ,4,30,   src/librustc_typeck/collect.rs--5--8--13   src/librustc/middle/astencode.rs--5--2--7   src/librustc/metadata/decoder.rs--1--4--5   src/librustc/middle/ty/mod.rs--2--3--5,Perfective,
38099,0df6564d95ff0a29015067f58a0b8a500c49bc48,use clippy-preview instead of clippy in cargo, ,1,2,   tests/dogfood.rs--1--1--2,Perfective,
36696,bcf836567560c2f31dac79aa0379c0f0e2740081,Make sure constructors functions are type checked correctly, ,2,39,   .../nll/user-annotations/adt-tuple-struct-calls.rs--22--0--22   .../user-annotations/adt-tuple-struct-calls.stderr--17--0--17,Adaptive,
89431,dd0d495f50e2d8ba501e6b003cb4c1ef52d95ed5,Move trait impls for primitives near trait definition,Closes #12925   ,20,235,   src/libcore/num/mod.rs--40--1--41   src/libcore/num/int_macros.rs--0--24--24   src/libcore/ops.rs--20--0--20   src/libcore/num/uint_macros.rs--0--18--18   src/libcore/bool.rs--0--16--16   src/libcore/num/f32.rs--1--14--15   src/libcore/num/f64.rs--1--13--14   src/libcore/num/int.rs--0--13--13   src/libcore/cmp.rs--8--1--9   src/libcore/num/uint.rs--0--9--9   src/libcore/num/i16.rs--0--7--7   src/libcore/num/i32.rs--0--7--7   src/libcore/num/i64.rs--0--7--7   src/libcore/num/i8.rs--0--7--7   src/libcore/num/u16.rs--0--5--5   src/libcore/num/u32.rs--0--5--5   src/libcore/num/u64.rs--0--5--5   src/libcore/num/u8.rs--0--5--5   src/libcore/char.rs--0--4--4   src/libcore/default.rs--3--1--4,Perfective,
6331,9077d540da944c41678a7129e04e7fc5d7e38582,Replace h3 and h4 containing invalid DOM, ,28,101,   src/librustdoc/html/static/rustdoc.css--16--6--22   .../rustdoc/trait-impl-items-links-and-anchors.rs--8--8--16   src/librustdoc/html/render/mod.rs--7--3--10   src/test/rustdoc/const-generics/const-impl.rs--1--2--3   src/test/rustdoc/issue-53812.rs--1--2--3   src/test/rustdoc/src-links-auto-impls.rs--1--2--3   src/librustdoc/html/render/print_item.rs--1--1--2   src/librustdoc/html/static/themes/ayu.css--1--1--2   src/librustdoc/html/static/themes/dark.css--1--1--2   src/librustdoc/html/static/themes/light.css--1--1--2   src/test/rustdoc/async-fn.rs--1--1--2   src/test/rustdoc/auto_aliases.rs--1--1--2   src/test/rustdoc/blanket-reexport-item.rs--1--1--2   src/test/rustdoc/const-display.rs--1--1--2   src/test/rustdoc/const-generics/add-impl.rs--1--1--2   .../rustdoc/const-generics/const-generic-slice.rs--1--1--2   .../rustdoc/const-generics/const-generics-docs.rs--1--1--2   src/test/rustdoc/empty-impls.rs--1--1--2   src/test/rustdoc/ensure-src-link.rs--1--1--2   src/test/rustdoc/generic-impl.rs--1--1--2   src/test/rustdoc/issue-29503.rs--1--1--2   src/test/rustdoc/issue-33302.rs--1--1--2   src/test/rustdoc/primitive-generic-impl.rs--1--1--2   src/test/rustdoc/sidebar-links-to-foreign-impl.rs--1--1--2   src/test/rustdoc/sized_trait.rs--1--1--2   src/test/rustdoc/spotlight-from-dependency.rs--1--1--2   src/test/rustdoc/trait-attributes.rs--1--1--2   src/tools/linkchecker/main.rs--1--1--2,Perfective,
15114,c1766c6372e5bebf8e1198172abef0519d62ffe9,fix static_ptr_ty for foreign statics  and more comments in check_unsafety, ,2,6,   compiler/rustc_middle/src/ty/util.rs--3--0--3   compiler/rustc_mir/src/transform/check_unsafety.rs--3--0--3,Corrective,
5733,831759a4438736980574478b29a3e9ab6e837f3f,fix typos, ,1,7,   compiler/rustc_mir/src/borrow_check/type_check/mod.rs--4--3--7,Perfective,
93668,c16d7a439441ecfb8ac53deee070bb616fdc759e,path2: Rename Path::new() to Path::from_vec(), ,2,62,   src/libstd/path2/posix.rs--22--22--44   src/libstd/path2/windows.rs--9--9--18,Perfective,
60718,8c1699d8740c22397a56b3416a365a6083307c4b,Update rls-data dep, ,3,24,   src/Cargo.lock--11--1--12   src/librustc_save_analysis/json_dumper.rs--7--3--10   src/librustc_save_analysis/Cargo.toml--1--1--2,Perfective,
51864,df8f5375a6b246a4ffee3b074ec749ad95a1f430,introduce `UniverseIndex` into `InferCtxt`,Always using root environment for now.   ,2,16,   src/librustc/infer/mod.rs--12--0--12   src/librustc/ty/mod.rs--1--3--4,Adaptive,
48534,69ed6b928cd427669bf7b8694a86b20a8b672fa7,rustc_codegen_llvm: fix ownership of DIBuilder., ,3,37,   src/librustc_codegen_llvm/llvm/ffi.rs--14--14--28   src/librustc_codegen_llvm/debuginfo/mod.rs--4--1--5   src/librustc_codegen_llvm/debuginfo/utils.rs--3--1--4,Corrective,
74222,77c1e11249703904adccdf7d5b52435a45e7f2db,Fix typo in release notes, ,1,4,   RELEASES.md--2--2--4,Perfective,
6924,08c7c61b9d6480f0b79bd7121a3d6e52969545a7,should-skip-this: Check for changes between the master branch  not the previous commit.,The previous commit could be part of the current PR.   ,1,8,   src/ci/scripts/should-skip-this.sh--6--2--8,Perfective,
44653,1e43c3bb9f929695514e8d4854e9471962d2dde4,Register MISTYPED_LITERAL_SUFFIXES lint, ,1,3,   clippy_lints/src/literal_representation.rs--2--1--3,Adaptive,
20693,cb8c94c523d7ff407f9520a6555ea829c1232a50,improve grammar,Co-authored-by: Bastian Kauschke <bastian_kauschke@hotmail.de> ,1,4,   src/libcore/mem/mod.rs--2--2--4,Perfective,
18631,5154b66586c9bfc738ba1976cc36c71784330e06,only set frame location during push after preamble is done, ,1,3,   src/librustc_mir/interpret/eval_context.rs--2--1--3,Perfective,
19709,4adb13c3a4328046688f04d4a15c8c3321ca6bfb,rustbuild: drop tool::should_install,Always install when the build succeeds    Fixes #74431    Signed-off-by: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>   ,1,29,   src/bootstrap/install.rs--5--24--29,Corrective,
11984,eef95871a4a43b7e366c168fc03d316519029c62,fix broken link in PartialEq doc,"PartialEq doc was attempting to link to [`Eq`] but instead we got a link  to `eq`. Disambiguate with ""trait@Eq"".   ",1,2,   library/core/src/cmp.rs--1--1--2,Perfective,
33587,2f790ee5d210f79219dad4ef129285fa2bdd88a4,Update .mailmap, ,1,4,   .mailmap--3--1--4,Perfective,
102081,c0f357924d8c96d2f8510055ecd79ed0f3e1840b,libcore: vec::u8::hash is pure., ,1,2,   src/libcore/vec.rs--1--1--2,Perfective,
36628,26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c,implement nth_back for Range, ,2,30,   src/libcore/tests/iter.rs--17--0--17   src/libcore/iter/range.rs--13--0--13,Adaptive,
69510,bfbdff0e2d894cf1f88e93df864b2c02e940a99a,Updated error message E0388, ,2,7,   src/librustc_borrowck/borrowck/mod.rs--4--2--6   src/test/compile-fail/E0017.rs--1--0--1,Perfective,
45775,a930e778c2325c32bf94a580499b000455081e90,Add dummy clippy crate for publishing, ,5,75,   clippy_dummy/build.rs--42--0--42   clippy_dummy/Cargo.toml--17--0--17   clippy_dummy/crates-readme.md--9--0--9   clippy_dummy/PUBLISH.md--4--0--4   clippy_dummy/src/main.rs--3--0--3,Perfective,
25251,f77afc8f9c63d789519c0b1a733462ca654d894a,Allow ZSTs in `AllocRef`, ,5,136,   src/libcore/alloc.rs--10--33--43   src/libstd/alloc.rs--27--9--36   src/liballoc/raw_vec.rs--14--15--29   src/liballoc/alloc.rs--21--5--26   src/liballoc/raw_vec/tests.rs--1--1--2,Perfective,
41186,18da195bab0d64680d42ae141e09cbde5514a371,libproc_macro => 2018, ,9,118,   src/libproc_macro/bridge/client.rs--21--17--38   src/libproc_macro/quote.rs--11--11--22   src/libproc_macro/lib.rs--10--10--20   src/libproc_macro/bridge/rpc.rs--5--6--11   src/libproc_macro/bridge/server.rs--4--5--9   src/libproc_macro/diagnostic.rs--4--4--8   src/libproc_macro/bridge/mod.rs--2--3--5   src/libproc_macro/bridge/buffer.rs--2--2--4   src/libproc_macro/Cargo.toml--1--0--1,Perfective,
63237,b48f4e03b3889301284fbb6c8605cfe697d91e25,Add tests for issues which can be closed on master, ,10,111,   tests/target/closure.rs--20--0--20   tests/source/closure.rs--16--0--16   tests/source/issue-1350.rs--16--0--16   tests/target/issue-1350.rs--16--0--16   tests/source/structs.rs--8--0--8   tests/target/structs.rs--8--0--8   tests/target/try-conversion.rs--8--0--8   tests/source/try-conversion.rs--7--0--7   tests/source/comment.rs--6--0--6   tests/target/comment.rs--6--0--6,Perfective,
4820,25e74037e8c1fda12cc83833d6e49feccb665e0f,Add regression test for type declaration layout overflow, ,2,15,   src/test/rustdoc-gui/type-declation-overflow.goml--8--0--8   src/test/rustdoc-gui/src/lib2/lib.rs--7--0--7,Perfective,
78035,010b7f36218215af2bc18ab1ea98aa980a34bf20,Remove superfluous line from Nomicon, ,1,1,   src/doc/nomicon/leaking.md--0--1--1,Perfective,
23681,b9f91e52277116d0d3919b34e0511aecf02e0bdb,ignore 429's when linkcheck, ,1,4,   src/tools/rustbook/src/main.rs--3--1--4,Perfective,
2252,46f8aa9c3178baed1833219d7205569df8f84070,Update changelog to 1.56, ,1,60,   CHANGELOG.md--57--3--60,Perfective,
48947,c9482f724f2c6369a56faddd3ba4c1f00545a086,Only run the test on x86_64,Smaller platforms don't merge the loads the same way.   ,1,1,   src/test/codegen/swap-small-types.rs--1--0--1,Perfective,
108941,4bced5e5f2fcf7e1c7725e747ac3110ef0a9c1e4,Use invoke to call (most) rust functions,No landing pads yet.    Issue #236   ,2,33,   src/comp/middle/trans.rs--17--1--18   src/comp/middle/trans_build.rs--15--0--15,Adaptive,
41947,df9df19507ea4573ff141d253b2e95cd5b6cd0ff,Always calculate glob map but only for glob uses,Previously calculating glob map was *opt-in*  however it did record  node id -> ident use for every use directive. This aims to see if we  can unconditionally calculate the glob map and not regress performance.   ,9,52,   src/librustc_resolve/lib.rs--7--16--23   src/librustc_driver/driver.rs--2--13--15   src/librustdoc/core.rs--1--2--3   src/librustc/ty/mod.rs--1--1--2   src/librustc_driver/lib.rs--0--2--2   src/librustc_driver/test.rs--0--2--2   src/librustc_save_analysis/lib.rs--0--2--2   src/librustdoc/test.rs--0--2--2   src/librustc_save_analysis/dump_visitor.rs--0--1--1,Perfective,
65317,12826fb8a3b9f5b296a7cc9a8a30eff781e4f6e9,factor out lvalue field access into its own function, ,1,58,   src/lvalue.rs--31--27--58,Perfective,
39219,3ba7454152e65beb7519580d8f74cf433f20b724,Use track_errors, ,1,10,   src/librustc_mir/const_eval.rs--7--3--10,Corrective,
25688,e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46,check_pat_path: use pattern_cause, ,9,32,   src/librustc_typeck/check/pat.rs--7--2--9   src/test/ui/issues/issue-37026.stderr--3--1--4   src/test/ui/match/match-tag-nullary.stderr--3--1--4   src/test/ui/resolve/name-clash-nullary.stderr--3--1--4   src/test/ui/issues/issue-12552.stderr--3--0--3   src/test/ui/issues/issue-5100.stderr--2--0--2   src/test/ui/issues/issue-7867.stderr--2--0--2   src/test/ui/pattern/pattern-ident-path-generics.stderr--2--0--2   src/test/ui/rfc-2005-default-binding-mode/const.stderr--2--0--2,Adaptive,
16395,bb8e1764bb31bc63a6b61f446e28bb567015de01,Simplify some match statements on `DefPathDataName', ,3,27,   compiler/rustc_codegen_llvm/src/debuginfo/namespace.rs--2--7--9   compiler/rustc_codegen_ssa/src/debuginfo/type_names.rs--1--8--9   compiler/rustc_lint/src/context.rs--2--7--9,Perfective,
1962,f0f449d6edda5a40057fc82ea02cc9abeae4d012,Wrap long array and slice patterns.,Closes #4530.   ,4,29,   src/patterns.rs--11--1--12   tests/target/issue-4530.rs--9--0--9   src/overflow.rs--3--1--4   tests/source/issue-4530.rs--4--0--4,Perfective,
80274,21a0f1b78740eef691f2f65a3aebf370da43fbfa,Clarify indent calcs in `compute_budget_for_args`, ,1,10,   src/items.rs--5--5--10,Perfective,
35526,60a49384f589e5d6fa0b572d3876c4ba7532c230,normalize use of backticks in compiler messages for librustc_typecheck,https://github.com/rust-lang/rust/issues/60532   ,13,52,   src/librustc_typeck/check/writeback.rs--4--4--8   src/librustc_typeck/collect.rs--4--4--8   src/librustc_typeck/check/mod.rs--3--3--6   src/librustc_typeck/check/generator_interior.rs--2--2--4   src/librustc_typeck/check/method/probe.rs--2--2--4   src/test/ui/feature-gates/feature-gate-simd-ffi.stderr--2--2--4   src/test/ui/target-feature-wrong.rs--2--2--4   src/test/ui/target-feature-wrong.stderr--2--2--4   src/librustc_typeck/check/coercion.rs--1--1--2   src/librustc_typeck/check/regionck.rs--1--1--2   src/librustc_typeck/error_codes.rs--1--1--2   src/librustc_typeck/variance/solve.rs--1--1--2   src/test/ui/inference/inference_unstable.stderr--1--1--2,Perfective,
27011,eec023eb8529fac3f1b91d45d82609526ef3452f,Rustup to rustc 1.42.0-nightly (c2d141df5 2020-01-24), ,2,6,   rustup.sh--2--2--4   rust-toolchain--1--1--2,Perfective,
107478,fa9ad984fb2f013baebdbe01a42baa3b9101dd84,Copy first batch of material from libstd to libcore., ,325,695,   src/libcore/str.rs--21--0--21   src/libcore/vec.rs--18--0--18   src/libcore/extfmt.rs--10--0--10   src/libcore/float.rs--8--0--8   src/libcore/task.rs--8--0--8   src/libcore/uint.rs--6--0--6   src/libcore/char.rs--4--0--4   src/libcore/comm.rs--4--0--4   src/libcore/ctypes.rs--4--0--4   src/libcore/int.rs--4--0--4   src/libcore/bool.rs--3--0--3   src/libcore/result.rs--3--0--3   src/cargo/cargo.rs--1--1--2   src/comp/back/link.rs--1--1--2   src/comp/back/rpath.rs--1--1--2   src/comp/driver/rustc.rs--1--1--2   src/comp/driver/session.rs--1--1--2   src/comp/front/attr.rs--1--1--2   src/comp/front/config.rs--1--1--2   src/comp/front/test.rs--1--1--2   src/comp/lib/llvm.rs--1--1--2   src/comp/metadata/common.rs--1--1--2   src/comp/metadata/creader.rs--1--1--2   src/comp/metadata/csearch.rs--1--1--2   src/comp/metadata/cstore.rs--1--1--2   src/comp/metadata/decoder.rs--1--1--2   src/comp/metadata/encoder.rs--1--1--2   src/comp/metadata/tydecode.rs--1--1--2   src/comp/metadata/tyencode.rs--1--1--2   src/comp/middle/alias.rs--1--1--2   src/comp/middle/ast_map.rs--1--1--2   src/comp/middle/check_alt.rs--1--1--2   src/comp/middle/fn_usage.rs--1--1--2   src/comp/middle/freevars.rs--1--1--2   src/comp/middle/gc.rs--1--1--2   src/comp/middle/kind.rs--1--1--2   src/comp/middle/last_use.rs--1--1--2   src/comp/middle/mut.rs--1--1--2   src/comp/middle/resolve.rs--1--1--2   src/comp/middle/shape.rs--1--1--2   src/comp/middle/trans.rs--1--1--2   src/comp/middle/trans_alt.rs--1--1--2   src/comp/middle/trans_build.rs--1--1--2   src/comp/middle/trans_common.rs--1--1--2   src/comp/middle/trans_objects.rs--1--1--2   src/comp/middle/trans_vec.rs--1--1--2   src/comp/middle/tstate/annotate.rs--1--1--2   src/comp/middle/tstate/auxiliary.rs--1--1--2   src/comp/middle/tstate/bitvectors.rs--1--1--2   src/comp/middle/tstate/ck.rs--1--1--2   src/comp/middle/tstate/collect_locals.rs--1--1--2   src/comp/middle/tstate/pre_post_conditions.rs--1--1--2   src/comp/middle/tstate/states.rs--1--1--2   src/comp/middle/ty.rs--1--1--2   src/comp/middle/typeck.rs--1--1--2   src/comp/syntax/ast.rs--1--1--2   src/comp/syntax/ast_util.rs--1--1--2   src/comp/syntax/codemap.rs--1--1--2   src/comp/syntax/ext/base.rs--1--1--2   src/comp/syntax/ext/concat_idents.rs--1--1--2   src/comp/syntax/ext/env.rs--1--1--2   src/comp/syntax/ext/expand.rs--1--1--2   src/comp/syntax/ext/fmt.rs--1--1--2   src/comp/syntax/ext/ident_to_str.rs--1--1--2   src/comp/syntax/ext/log_syntax.rs--1--1--2   src/comp/syntax/ext/simplext.rs--1--1--2   src/comp/syntax/fold.rs--1--1--2   src/comp/syntax/parse/eval.rs--1--1--2   src/comp/syntax/parse/lexer.rs--1--1--2   src/comp/syntax/parse/parser.rs--1--1--2   src/comp/syntax/parse/token.rs--1--1--2   src/comp/syntax/print/pp.rs--1--1--2   src/comp/syntax/print/pprust.rs--1--1--2   src/comp/syntax/util/interner.rs--1--1--2   src/comp/syntax/visit.rs--1--1--2   src/comp/util/common.rs--1--1--2   src/comp/util/filesearch.rs--1--1--2   src/comp/util/ppaux.rs--1--1--2   src/compiletest/common.rs--1--1--2   src/compiletest/compiletest.rs--1--1--2   src/compiletest/header.rs--1--1--2   src/compiletest/procsrv.rs--1--1--2   src/compiletest/runtest.rs--1--1--2   src/compiletest/util.rs--1--1--2   src/fuzzer/ast_match.rs--1--1--2   src/fuzzer/cycles.rs--1--1--2   src/fuzzer/fuzzer.rs--1--1--2   src/fuzzer/ivec_fuzz.rs--1--1--2   src/fuzzer/rand_util.rs--1--1--2   src/libcore/either.rs--2--0--2   src/libcore/option.rs--2--0--2   src/libcore/ptr.rs--2--0--2   src/libcore/sys.rs--2--0--2   src/libcore/u64.rs--2--0--2   src/libcore/u8.rs--2--0--2   src/libstd/json.rs--1--1--2   src/libstd/map.rs--1--1--2   src/libstd/rope.rs--1--1--2   src/libstd/smallintmap.rs--1--1--2   src/libstd/str.rs--1--1--2   src/libstd/task.rs--1--1--2   src/libstd/tempfile.rs--1--1--2   src/test/bench/99bob-iter.rs--1--1--2   src/test/bench/99bob-pattern.rs--1--1--2   src/test/bench/99bob-simple.rs--1--1--2   src/test/bench/99bob-tail.rs--1--1--2   src/test/bench/shootout-binarytrees.rs--1--1--2   src/test/bench/shootout-fannkuchredux.rs--1--1--2   src/test/bench/shootout-fasta.rs--1--1--2   src/test/bench/shootout-pfib.rs--1--1--2   src/test/bench/sudoku.rs--1--1--2   src/test/bench/task-perf-spawnalot.rs--1--1--2   src/test/bench/task-perf-vector-party.rs--1--1--2   src/test/bench/task-perf-word-count-generic.rs--1--1--2   src/test/bench/task-perf-word-count.rs--1--1--2   src/test/compile-fail/bad-module.rs--1--1--2   .../compile-fail/cross-crate-glob-collision.rs--1--1--2   src/test/compile-fail/fn-constraint.rs--1--1--2   src/test/compile-fail/mutable-huh-ptr-assign.rs--1--1--2   src/test/compile-fail/mutable-huh-variance-ptr.rs--1--1--2   src/test/compile-fail/no-constraint-prop.rs--1--1--2   src/test/compile-fail/non-triv-cast-be.rs--1--1--2   src/test/compile-fail/nonsense-constraints.rs--1--1--2   src/test/compile-fail/pattern-tyvar-2.rs--1--1--2   src/test/compile-fail/pattern-tyvar.rs--1--1--2   src/test/compile-fail/spawn-non-nil-fn.rs--1--1--2   .../tag-that-dare-not-speak-its-name.rs--1--1--2   src/test/compile-fail/zip-missing-check.rs--1--1--2   src/test/run-fail/alt-bot-fail.rs--1--1--2   src/test/run-fail/fail-main.rs--1--1--2   src/test/run-fail/fn-constraint-claim.rs--1--1--2   src/test/run-fail/fn-constraint.rs--1--1--2   src/test/run-fail/for-each-loop-fail.rs--1--1--2   src/test/run-fail/linked-failure.rs--1--1--2   src/test/run-fail/linked-failure2.rs--1--1--2   src/test/run-fail/linked-failure3.rs--1--1--2   src/test/run-fail/linked-failure4.rs--1--1--2   src/test/run-fail/morestack2.rs--1--1--2   src/test/run-fail/morestack3.rs--1--1--2   src/test/run-fail/port-type.rs--1--1--2   src/test/run-fail/spawnfail.rs--1--1--2   src/test/run-fail/task-comm-recv-block.rs--1--1--2   src/test/run-fail/unwind-misc-1.rs--1--1--2   src/test/run-fail/zip-different-lengths.rs--1--1--2   src/test/run-pass/acyclic-unwind.rs--1--1--2   src/test/run-pass/alias-uninit-value.rs--1--1--2   src/test/run-pass/alt-bot.rs--1--1--2   src/test/run-pass/alt-join.rs--1--1--2   src/test/run-pass/basic-1.rs--1--1--2   src/test/run-pass/basic-2.rs--1--1--2   src/test/run-pass/basic.rs--1--1--2   src/test/run-pass/bind-native-fn.rs--1--1--2   src/test/run-pass/binops.rs--1--1--2   src/test/run-pass/block-vec-map2.rs--1--1--2   src/test/run-pass/c-stack-returning-int64.rs--1--1--2   src/test/run-pass/chan-leak.rs--1--1--2   src/test/run-pass/check-pattern-bound.rs--1--1--2   src/test/run-pass/child-outlives-parent.rs--1--1--2   src/test/run-pass/claim-nonterm.rs--1--1--2   src/test/run-pass/clone-with-exterior.rs--1--1--2   src/test/run-pass/comm.rs--1--1--2   src/test/run-pass/constraint-prop-expr-move.rs--1--1--2   src/test/run-pass/constraint-prop-move.rs--1--1--2   src/test/run-pass/constraint-prop-swap.rs--1--1--2   src/test/run-pass/constraint-prop.rs--1--1--2   src/test/run-pass/decl-with-recv.rs--1--1--2   src/test/run-pass/float-nan.rs--1--1--2   src/test/run-pass/fn-bare-size.rs--1--1--2   src/test/run-pass/fn-constraint.rs--1--1--2   src/test/run-pass/hashmap-memory.rs--1--1--2   src/test/run-pass/import-glob-crate.rs--1--1--2   src/test/run-pass/import-in-block.rs--1--1--2   src/test/run-pass/infinite-loops.rs--1--1--2   src/test/run-pass/invoke-external-native.rs--1--1--2   src/test/run-pass/issue-1112.rs--1--1--2   src/test/run-pass/issue-506.rs--1--1--2   src/test/run-pass/issue-507.rs--1--1--2   src/test/run-pass/issue-511.rs--1--1--2   src/test/run-pass/issue-687.rs--1--1--2   src/test/run-pass/issue-783.rs--1--1--2   src/test/run-pass/ivec-tag.rs--1--1--2   src/test/run-pass/join.rs--1--1--2   src/test/run-pass/lazychan.rs--1--1--2   src/test/run-pass/linked-failure.rs--1--1--2   src/test/run-pass/lots-a-fail.rs--1--1--2   src/test/run-pass/many.rs--1--1--2   src/test/run-pass/mlist-cycle.rs--1--1--2   src/test/run-pass/mod-view-items.rs--1--1--2   src/test/run-pass/morestack5.rs--1--1--2   src/test/run-pass/morestack6.rs--1--1--2   src/test/run-pass/move-3-unique.rs--1--1--2   src/test/run-pass/move-3.rs--1--1--2   src/test/run-pass/move-4-unique.rs--1--1--2   src/test/run-pass/move-4.rs--1--1--2   src/test/run-pass/mutable-alias-vec.rs--1--1--2   src/test/run-pass/native-fn-linkname.rs--1--1--2   src/test/run-pass/nested-alts.rs--1--1--2   src/test/run-pass/nested-pattern.rs--1--1--2   src/test/run-pass/obj-docs.rs--1--1--2   src/test/run-pass/pattern-bound-var-in-for-each.rs--1--1--2   src/test/run-pass/rt-circular-buffer.rs--1--1--2   src/test/run-pass/send-iloop.rs--1--1--2   src/test/run-pass/send-type-inference.rs--1--1--2   src/test/run-pass/shape_intrinsic_tag_then_rec.rs--1--1--2   src/test/run-pass/spawn-fn.rs--1--1--2   src/test/run-pass/spawn-module-qualified.rs--1--1--2   src/test/run-pass/spawn-types.rs--1--1--2   src/test/run-pass/spawn.rs--1--1--2   src/test/run-pass/spawn2.rs--1--1--2   src/test/run-pass/str-append.rs--1--1--2   src/test/run-pass/str-multiline.rs--1--1--2   src/test/run-pass/string-self-append.rs--1--1--2   src/test/run-pass/syntax-extension-fmt.rs--1--1--2   src/test/run-pass/task-comm-0.rs--1--1--2   src/test/run-pass/task-comm-1.rs--1--1--2   src/test/run-pass/task-comm-10.rs--1--1--2   src/test/run-pass/task-comm-11.rs--1--1--2   src/test/run-pass/task-comm-12.rs--1--1--2   src/test/run-pass/task-comm-13.rs--1--1--2   src/test/run-pass/task-comm-14.rs--1--1--2   src/test/run-pass/task-comm-15.rs--1--1--2   src/test/run-pass/task-comm-16.rs--1--1--2   src/test/run-pass/task-comm-17.rs--1--1--2   src/test/run-pass/task-comm-2.rs--1--1--2   src/test/run-pass/task-comm-3.rs--1--1--2   src/test/run-pass/task-comm-4.rs--1--1--2   src/test/run-pass/task-comm-5.rs--1--1--2   src/test/run-pass/task-comm-6.rs--1--1--2   src/test/run-pass/task-comm-7.rs--1--1--2   src/test/run-pass/task-comm-8.rs--1--1--2   src/test/run-pass/task-comm-9.rs--1--1--2   src/test/run-pass/task-comm-chan-cleanup.rs--1--1--2   src/test/run-pass/task-comm-chan-cleanup2.rs--1--1--2   src/test/run-pass/task-comm-chan-cleanup3.rs--1--1--2   src/test/run-pass/task-comm-chan-cleanup4.rs--1--1--2   src/test/run-pass/task-comm-chan-nil.rs--1--1--2   src/test/run-pass/task-comm.rs--1--1--2   src/test/run-pass/task-compare.rs--1--1--2   src/test/run-pass/task-killjoin.rs--1--1--2   src/test/run-pass/task-life-0.rs--1--1--2   src/test/run-pass/task-pin.rs--1--1--2   src/test/run-pass/terminate-in-initializer.rs--1--1--2   src/test/run-pass/test-ignore-cfg.rs--1--1--2   src/test/run-pass/threads.rs--1--1--2   src/test/run-pass/triv-cast-be.rs--1--1--2   src/test/run-pass/triv-cast-const.rs--1--1--2   src/test/run-pass/trivial-message.rs--1--1--2   src/test/run-pass/type-sizes.rs--1--1--2   src/test/run-pass/unify-return-ty.rs--1--1--2   src/test/run-pass/unique-copy-box.rs--1--1--2   src/test/run-pass/unique-send-2.rs--1--1--2   src/test/run-pass/unique-send.rs--1--1--2   src/test/run-pass/unwind-box.rs--1--1--2   src/test/run-pass/unwind-resource.rs--1--1--2   src/test/run-pass/unwind-resource2.rs--1--1--2   src/test/run-pass/unwind-unique.rs--1--1--2   src/test/run-pass/use.rs--1--1--2   src/test/run-pass/user.rs--1--1--2   src/test/run-pass/utf8_chars.rs--1--1--2   src/test/run-pass/vec-self-append.rs--1--1--2   src/test/run-pass/yield.rs--1--1--2   src/test/run-pass/yield1.rs--1--1--2   src/test/run-pass/yield2.rs--1--1--2   src/test/run-pass/zip-same-length.rs--1--1--2   src/test/stdtest/bitv.rs--1--1--2   src/test/stdtest/bool.rs--1--1--2   src/test/stdtest/box.rs--1--1--2   src/test/stdtest/c_vec.rs--1--1--2   src/test/stdtest/char.rs--1--1--2   src/test/stdtest/comm.rs--1--1--2   src/test/stdtest/deque.rs--1--1--2   src/test/stdtest/either.rs--1--1--2   src/test/stdtest/float.rs--1--1--2   src/test/stdtest/fs.rs--1--1--2   src/test/stdtest/int.rs--1--1--2   src/test/stdtest/io.rs--1--1--2   src/test/stdtest/json.rs--1--1--2   src/test/stdtest/list.rs--1--1--2   src/test/stdtest/map.rs--1--1--2   src/test/stdtest/math.rs--1--1--2   src/test/stdtest/option.rs--1--1--2   src/test/stdtest/os.rs--1--1--2   src/test/stdtest/ptr.rs--1--1--2   src/test/stdtest/qsort.rs--1--1--2   src/test/stdtest/qsort3.rs--1--1--2   src/test/stdtest/rand.rs--1--1--2   src/test/stdtest/result.rs--1--1--2   src/test/stdtest/rope.rs--1--1--2   src/test/stdtest/run.rs--1--1--2   src/test/stdtest/sha1.rs--1--1--2   src/test/stdtest/sort.rs--1--1--2   src/test/stdtest/str.rs--1--1--2   src/test/stdtest/sys.rs--1--1--2   src/test/stdtest/task.rs--1--1--2   src/test/stdtest/tempfile.rs--1--1--2   src/test/stdtest/test.rs--1--1--2   src/test/stdtest/treemap.rs--1--1--2   src/test/stdtest/uint.rs--1--1--2   src/test/stdtest/unsafe.rs--1--1--2   src/test/stdtest/uv.rs--1--1--2   src/test/stdtest/vec.rs--1--1--2   src/libcore/box.rs--1--0--1   src/libcore/core.rc--1--0--1   src/libcore/u32.rs--1--0--1   src/libcore/unsafe.rs--1--0--1   src/libstd/ebml.rs--1--0--1   src/libstd/fs.rs--1--0--1   src/libstd/generic_os.rs--1--0--1   src/libstd/getopts.rs--1--0--1   src/libstd/io.rs--1--0--1   src/libstd/linux_os.rs--1--0--1   src/libstd/list.rs--1--0--1   src/libstd/macos_os.rs--1--0--1   src/libstd/run_program.rs--1--0--1   src/libstd/term.rs--1--0--1   src/libstd/test.rs--1--0--1   src/libstd/treemap.rs--1--0--1   src/libstd/ufind.rs--1--0--1   src/libstd/vec.rs--1--0--1   src/libstd/win32_os.rs--1--0--1   src/test/stdtest/four.rs--1--0--1   src/test/stdtest/getopts.rs--1--0--1   src/test/stdtest/net.rs--1--0--1   src/test/stdtest/path.rs--1--0--1   src/test/stdtest/tri.rs--1--0--1,Adaptive,
100617,451463ab39083e6aba5fc215a6f349236dff9872,rustdoc: Use more explicit self, ,1,51,   src/librustdoc/doc.rs--25--26--51,Perfective,
8020,a245642cabda4bc0fbb8139e383294b2796ad35f,Change root_path to static_root_path,Co-authored-by: Guillaume Gomez <guillaume1.gomez@gmail.com> ,1,2,   src/librustdoc/html/layout.rs--1--1--2,Perfective,
77110,a62a529eea3e00b3ce9e659daa4235add2cb8551,review comments, ,8,49,   src/librustc_front/lowering.rs--21--2--23   mk/crates.mk--4--4--8   src/librustc_driver/pretty.rs--2--3--5   src/test/compile-fail/placement-expr-unsafe.rs--4--0--4   src/test/compile-fail/placement-expr-unstable.rs--4--0--4   src/librustc/middle/astencode.rs--1--1--2   src/librustc_front/hir.rs--1--1--2   src/librustdoc/test.rs--0--1--1,Perfective,
78487,45b95537574182be0b7ef6301cdbafe11891ec95,added follow flag, ,1,59,   src/const.rs--43--16--59,Adaptive,
80696,60ec4ab220385be1ad2aef237733d7f38c2196b3,Add error explanation for E0260., ,1,35,   src/librustc_resolve/diagnostics.rs--34--1--35,Perfective,
17864,3b0f3a0a1e25e2ac207c99492fd2a0f6fc356f35,Optimize SwitchInt for bools, ,3,73,   src/optimize/peephole.rs--48--0--48   src/base.rs--20--4--24   src/optimize/mod.rs--1--0--1,Adaptive,
75245,b976d9e6660c16f4a1d5a28b11afa7ccb4f75da6,Implement JSON error emission,[breaking-change]    syntax::errors::Handler::new has been renamed to with_tty_emitter    Many functions which used to take a syntax::errors::ColorConfig  now take a rustc::session::config::ErrorOutputType. If you previously used ColorConfig::Auto as a default  you should now use ErrorOutputType::default().   ,4,52,   src/libsyntax/errors/json.rs--38--3--41   src/libsyntax/errors/mod.rs--4--3--7   src/librustc/session/config.rs--1--1--2   src/libsyntax/parse/mod.rs--1--1--2,Adaptive,
8962,ea15fb2177b0c33352363c130bc296a0dd1a794a,wrong_self_convention: `to_` respects `Copy` types,More details here:  https://rust-lang.github.io/api-guidelines/naming.html#ad-hoc-conversions-follow-as_-to_-into_-conventions-c-conv   ,8,74,   clippy_lints/src/methods/wrong_self_convention.rs--13--10--23   tests/ui/use_self.stderr--7--7--14   clippy_lints/src/methods/mod.rs--7--5--12   tests/ui/wrong_self_convention.stderr--5--6--11   tests/ui/wrong_self_convention.rs--10--0--10   tests/ui/wrong_self_conventions_mut.stderr--1--1--2   tests/ui/use_self.fixed--1--0--1   tests/ui/use_self.rs--1--0--1,Perfective,
68584,73e5a98e71f1f4fa948f0f2111b4c5688c0ee6dc,doc: Fix minor typo in book/variable-bindings.md, ,1,2,   src/doc/book/variable-bindings.md--1--1--2,Perfective,
17036,eede953c283c7bbe903a0e8abb44c923baf5cfac,Only get ImplKind::Impl once, ,1,41,   src/librustdoc/clean/inline.rs--22--19--41,Perfective,
22498,3471bc8306e206ed7d5cc86b1eeadc9a8bb8bc76,Fix unused_parens false positive when using binary operations, ,2,33,   src/test/ui/lint/issue-71290-unused-paren-binop.rs--17--0--17   src/librustc_lint/unused.rs--12--4--16,Corrective,
29501,2083e2a6473ea9d2fc65097844c9e0fec899b225,Stabilize nested self receivers,Previously  only Self  &Self  &mut Self  Arc<Self>  Rc<Self>   and Box<Self> were available as stable method receivers.    This commit stabilizes nested uses of all the above types.  However  nested receivers remain non-object-safe.   ,58,121,   src/test/ui/self/elision/ref-self-async.nll.stderr--2--19--21   src/librustc_typeck/check/wfcheck.rs--7--5--12   src/test/ui/self/arbitrary_self_types_nested.rs--6--0--6   .../ui/self/elision/lt-ref-self-async.nll.stderr--2--2--4   .../ui/self/elision/ref-mut-self-async.nll.stderr--2--2--4   .../self/elision/ref-mut-struct-async.nll.stderr--1--2--3   src/test/ui/self/elision/ref-self-async.stderr--1--2--3   .../ui/self/elision/ref-struct-async.nll.stderr--1--2--3   ...rbitrary-self-types-not-object-safe.curr.stderr--1--1--2   ...not-object-safe.object_safe_for_dispatch.stderr--1--1--2   src/test/ui/self/elision/lt-ref-self.stderr--1--1--2   .../arbitrary-self-types-not-object-safe.stderr--1--1--2   src/test/ui/self/elision/lt-ref-self-async.stderr--1--1--2   src/test/ui/self/elision/ref-mut-self.nll.stderr--1--1--2   src/test/ui/self/elision/lt-ref-self.nll.stderr--1--1--2   src/test/ui/self/elision/ref-mut-self-async.stderr--1--1--2   src/test/ui/self/elision/ref-mut-self.stderr--1--1--2   .../ui/self/elision/ref-mut-struct-async.stderr--1--1--2   src/test/ui/self/elision/ref-mut-struct.nll.stderr--1--1--2   src/test/ui/self/elision/ref-struct-async.stderr--1--1--2   src/test/ui/self/elision/ref-mut-struct.stderr--1--1--2   src/test/ui/self/elision/ref-struct.nll.stderr--1--1--2   src/test/ui/self/elision/ref-struct.stderr--1--1--2   src/test/ui/self/elision/lt-self-async.rs--0--1--1   src/test/ui/self/elision/lt-self.rs--0--1--1   src/test/ui/self/elision/lt-struct-async.rs--0--1--1   src/test/ui/self/elision/lt-struct.rs--0--1--1   src/test/ui/self/elision/ref-alias-async.rs--0--1--1   src/test/ui/self/elision/ref-alias.rs--0--1--1   src/test/ui/self/arbitrary_self_types_trait.rs--0--1--1   src/test/ui/self/elision/ref-assoc.rs--0--1--1   src/test/ui/self/elision/ref-mut-alias-async.rs--0--1--1   src/test/ui/self/elision/ref-mut-alias.rs--0--1--1   .../self/arbitrary-self-types-not-object-safe.rs--0--1--1   src/test/ui/self/elision/ref-mut-self-async.rs--0--1--1   src/test/ui/self/arbitrary_self_types_struct.rs--0--1--1   src/test/ui/self/elision/ref-assoc-async.rs--0--1--1   src/test/ui/self/elision/ref-mut-self.rs--0--1--1   .../ui/self/arbitrary_self_types_unsized_struct.rs--0--1--1   src/test/ui/self/elision/alias-async.rs--0--1--1   src/test/ui/self/elision/ref-mut-struct-async.rs--0--1--1   src/test/ui/self/elision/alias.rs--0--1--1   src/test/ui/self/elision/assoc-async.rs--0--1--1   src/test/ui/self/elision/assoc.rs--0--1--1   src/test/ui/self/elision/lt-alias-async.rs--0--1--1   src/test/ui/self/elision/lt-alias.rs--0--1--1   src/test/ui/self/elision/ref-self-async.rs--0--1--1   src/test/ui/self/elision/lt-assoc-async.rs--0--1--1   src/test/ui/self/elision/lt-assoc.rs--0--1--1   src/test/ui/self/elision/ref-struct-async.rs--0--1--1   src/test/ui/self/elision/ref-mut-struct.rs--0--1--1   src/test/ui/self/elision/lt-ref-self-async.rs--0--1--1   src/test/ui/self/elision/ref-struct.rs--0--1--1   src/test/ui/self/elision/lt-ref-self.rs--0--1--1   src/test/ui/self/elision/self-async.rs--0--1--1   src/test/ui/self/elision/self.rs--0--1--1   src/test/ui/self/elision/struct-async.rs--0--1--1   src/test/ui/self/elision/struct.rs--0--1--1,Adaptive,
38678,1db76c1bff60584e46f75fad99a78dd9ad7e9fd6,rustdoc: Remove default keyword from re-exported trait methods, ,5,70,   src/test/rustdoc/default-trait-method.rs--22--0--22   .../rustdoc/inline_cross/default-trait-method.rs--17--0--17   src/test/rustdoc/default_trait_method.rs--0--13--13   .../inline_cross/auxiliary/default-trait-method.rs--13--0--13   src/librustdoc/clean/mod.rs--4--1--5,Perfective,
113469,9f0eaa65817303b8768c80454734144c176fda43,More work on lexer.rs: start using keyword hashtable  handle more lexemes., ,3,55,   src/comp/fe/lexer.rs--44--4--48   src/comp/util/common.rs--2--2--4   src/comp/fe/token.rs--2--1--3,Perfective,
58089,dde61f38557335870a2d53bfa4099466fb71bd60,add basic region subtyping inference, ,4,37,   src/librustc_mir/transform/nll/subtype.rs--22--0--22   src/test/mir-opt/nll/region-subtyping-basic.rs--11--0--11   .../transform/nll/constraint_generation.rs--3--0--3   src/librustc_mir/transform/nll/mod.rs--1--0--1,Adaptive,
33691,96c3ec12f64042633dfbad9758c961b8ee1cbc2f,Update Cargo.lock, ,1,62,   Cargo.lock--40--22--62,Perfective,
30776,cc575a6ad50c3b15f4073b3ac210ed6e5423230d,rustc: use IndexVec<DefIndex  T> instead of Vec<T>., ,3,40,   src/librustc/hir/map/definitions.rs--9--9--18   src/librustc/hir/map/mod.rs--6--8--14   src/librustc/hir/map/collector.rs--2--6--8,Perfective,
99643,05b6df49b86024eb4f41fb94478ad9cd80dc172c,Refactor to make inference code around unification more readable,r=brson   ,9,96,   src/librustc/middle/typeck/infer/unify.rs--18--7--25   src/librustc/middle/typeck/infer/combine.rs--10--8--18   src/librustc/middle/ty.rs--6--8--14   src/librustc/middle/typeck/infer/lattice.rs--5--5--10   src/librustc/middle/typeck/infer/mod.rs--4--4--8   src/librustc/middle/typeck/infer/sub.rs--4--4--8   src/librustc/middle/typeck/infer/to_str.rs--4--4--8   src/librustc/middle/typeck/infer/resolve.rs--2--1--3   src/librustc/middle/typeck/infer/assignment.rs--1--1--2,Perfective,
37156,dbf8c6df9dc7f8ac0fe9b16f14f007d2f5bc4a5c,docs: fix typo #61197, ,1,2,   src/doc/rustdoc/src/the-doc-attribute.md--1--1--2,Perfective,
36880,d3dbf358ae37a3a285e4def6f5621f74fe4ca2b5,Rustup to rustc 1.37.0-nightly (03ee55bb1 2019-06-01), ,1,10,   src/constant.rs--5--5--10,Perfective,
33921,6e8639a41827a50d1c479d07263a53570aad6e7e,Remove uses of `mem::uninitialized()` from cloudabi, ,5,32,   src/libstd/sys/cloudabi/rwlock.rs--9--6--15   src/libstd/sys/cloudabi/mutex.rs--4--3--7   src/libstd/sys/cloudabi/thread.rs--4--3--7   src/libstd/sys/cloudabi/mod.rs--0--2--2   src/libstd/sys/cloudabi/abi/cloudabi.rs--1--0--1,Perfective,
11469,e94cf57c3eb9dd54b14dcd40419a2f35cd83db57,Make functional record update/struct update syntax works inside closures when feature capture_disjoint_fields is enabled, ,4,42,   .../2229_closure_analysis/run_pass/fru_syntax.rs--22--0--22   compiler/rustc_mir_build/src/build/expr/into.rs--7--3--10   .../run_pass/fru_syntax.stderr--8--0--8   .../rustc_mir_build/src/build/expr/as_place.rs--1--1--2,Adaptive,
58894,ff99111f482096248e7b37eeaf46ee8174d05b00,address some `FIXME`s whose associated issues were marked as closed,remove FIXME(#13101) since `assert_receiver_is_total_eq` stays.  remove FIXME(#19649) now that stability markers render.  remove FIXME(#13642) now the benchmarks were moved.  remove FIXME(#6220) now that floating points can be formatted.  remove FIXME(#18248) and write tests for `Rc<str>` and `Rc<[u8]>`  remove reference to irelevent issues in FIXME(#1697  #2178...)  update FIXME(#5516) to point to getopts issue 7  update FIXME(#7771) to point to RFC 628  update FIXME(#19839) to point to issue 26925   ,16,60,   src/libgetopts/lib.rs--8--3--11   src/libcore/tests/hash/mod.rs--5--2--7   src/libcore/slice/mod.rs--3--3--6   src/libstd/collections/hash/map.rs--3--3--6   src/libcore/cmp.rs--2--2--4   src/libstd/collections/hash/table.rs--2--2--4   src/librand/isaac.rs--2--1--3   src/librand/lib.rs--2--1--3   src/librustc/hir/mod.rs--1--2--3   src/libsyntax/ast.rs--1--2--3   src/liballoc/binary_heap.rs--1--1--2   src/liballoc/linked_list.rs--1--1--2   src/liballoc/vec_deque.rs--1--1--2   src/libcore/ptr.rs--0--2--2   src/libcore/benches/mem.rs--0--1--1   src/libcore/fmt/num.rs--0--1--1,Perfective,
49550,31ed5c7a01d9826c10bdd166ffcd23efd95b1efe,in the second copy lld is already named rust-lld, ,1,7,   src/bootstrap/dist.rs--3--4--7,Perfective,
66483,93333f0d7b62df382913885ccf7e7c79702d090a,support impl trait for needless lifetimes, ,2,29,   tests/run-pass/needless_lifetimes_impl_trait.rs--22--0--22   clippy_lints/src/lifetimes.rs--7--0--7,Adaptive,
60101,7b6e9b4b8424e8ef722a3fa6388fe3bc8414bab0,correct comment re feature-checking tooling,The featureck.py that this comment referred to was removed in 9dd3c54a (March  2016).   ,1,4,   src/libsyntax/feature_gate.rs--2--2--4,Perfective,
57453,6f9fb9103393fc5f5e11d4875c0c2a93b92bc714,rename `equality-universal` to a more extensible naming scheme, ,1,0,   .../{equality-universal.rs=>universal_in_impl_trait_in_parameters.rs}--0--0--0,Perfective,
9607,27886cd6b6a52d5bf3d0a9ea667e04c5e8c59705,Merge commit '9a0c32934ebe376128230aa8da3275697b2053e7' into sync_cg_clif-2021-03-05, ,73,339,   src/intrinsics/mod.rs--11--10--21   src/base.rs--6--14--20   src/value_and_place.rs--4--10--14   src/atomic_shim.rs--0--14--14   src/debuginfo/mod.rs--2--10--12   src/abi/mod.rs--3--8--11   Cargo.lock--3--7--10   .../alloc_system/lib.rs=>example/alloc_system.rs--1--9--10   src/common.rs--2--7--9   src/constant.rs--3--6--9   src/driver/aot.rs--2--7--9   src/driver/jit.rs--4--5--9   src/pointer.rs--2--7--9   src/abi/pass_mode.rs--2--6--8   .../0027-Disable-128bit-atomic-operations.patch--8--0--8   src/abi/returning.rs--2--5--7   src/codegen_i128.rs--2--5--7   src/debuginfo/line_info.rs--2--4--6   src/num.rs--2--4--6   src/pretty_clif.rs--2--4--6   src/unsize.rs--2--4--6   src/backend.rs--1--4--5   src/inline_asm.rs--1--4--5   src/abi/comments.rs--2--3--5   src/archive.rs--1--3--4   scripts/test_bootstrap.sh--2--2--4   ...builtins-Disable-128bit-atomic-operations.patch--4--0--4   src/discriminant.rs--1--3--4   src/intrinsics/cpuid.rs--1--3--4   src/lib.rs--2--2--4   src/optimize/stack2reg.rs--1--3--4   src/allocator.rs--1--2--3   .../arbitrary_self_types_pointers_and_wrappers.rs--1--2--3   src/cast.rs--1--2--3   src/driver/mod.rs--1--2--3   src/main_shim.rs--1--2--3   build_sysroot/build_sysroot.sh--1--1--2   src/bin/cg_clif.rs--1--1--2   src/bin/cg_clif_build_sysroot.rs--1--1--2   .cirrus.yml--2--0--2   src/debuginfo/emit.rs--1--1--2   scripts/tests.sh--1--1--2   .github/workflows/main.yml--1--1--2   src/debuginfo/unwind.rs--1--1--2   .vscode/settings.json--1--1--2   Cargo.toml--1--1--2   build.sh--1--1--2   build_sysroot/Cargo.lock--1--1--2   build_sysroot/prepare_sysroot_src.sh--1--1--2   clean_all.sh--1--1--2   src/intrinsics/llvm.rs--1--1--2   example/alloc_example.rs--1--1--2   src/intrinsics/simd.rs--1--1--2   example/mini_core.rs--2--0--2   .../0022-core-Disable-not-compiling-tests.patch--0--2--2   src/metadata.rs--1--1--2   prepare.sh--1--1--2   src/optimize/code_layout.rs--1--1--2   src/optimize/mod.rs--1--1--2   src/optimize/peephole.rs--1--1--2   rust-toolchain--1--1--2   scripts/cargo.sh--1--1--2   scripts/config.sh--1--1--2   src/toolchain.rs--1--1--2   src/trap.rs--1--1--2   scripts/rustup.sh--1--1--2   src/analyze.rs--1--1--2   src/vtable.rs--1--1--2   test.sh--1--1--2   build_sysroot/alloc_system/Cargo.toml--0--1--1   build_sysroot/Cargo.toml--0--1--1   rustfmt.toml--1--0--1   example/mini_core_hello_world.rs--1--0--1,Adaptive,
53707,182b46e0ed29621f4cd29f39b8dd82f5a9b63e3f,Simplify join_bounds(), ,2,31,   src/types.rs--10--18--28   tests/target/trait.rs--1--2--3,Perfective,
13047,d2de69da2e99d43e14a80219b835aaf513c2f0d9,Dogfood 'str_split_once()` in the std lib, ,4,30,   library/test/src/time.rs--9--15--24   library/std/src/sys_common/net.rs--1--3--4   library/std/src/lib.rs--1--0--1   library/test/src/lib.rs--1--0--1,Perfective,
16453,55fa8afe94019cb1da29d5fab7fd7ad5795b2c39,BTreeMap: various tweaks, ,1,28,   library/alloc/src/collections/btree/node.rs--13--15--28,Perfective,
92514,19ca9e188474058c066212e103d4addb9630fbbf,librustc: De-`@mut` `Module::children`, ,1,41,   src/librustc/middle/resolve.rs--25--16--41,Perfective,
63576,ece6c8434bc4eba1d3addfa4d5900264e55395fc,cache attributes of items from foreign crates,this avoids parsing item attributes on each call to `item_attrs`  which takes  off 33% (!) of translation time and 50% (!) of trans-item collection time.   ,11,108,   src/liballoc/rc.rs--33--2--35   src/librustc/ty/mod.rs--20--4--24   src/librustc_metadata/decoder.rs--18--3--21   src/liballoc/heap.rs--2--4--6   src/librustc_metadata/cstore_impl.rs--3--3--6   src/librustc/ty/instance.rs--1--4--5   src/librustc/middle/cstore.rs--2--2--4   src/librustc_metadata/cstore.rs--2--1--3   src/librustc_driver/driver.rs--2--0--2   src/liballoc/lib.rs--1--0--1   src/librustc_metadata/creader.rs--1--0--1,Adaptive,
17887,81650f485c8cafbb6f06d43e90236f34c53175cf,Make to_immediate/from_immediate configurable by backends,librustc_codegen_ssa has the concept of an immediate vs. memory type   and librustc_codegen_llvm uses this distinction to implement bools being  i8 in memory  and i1 in immediate contexts. However  some of that  implementation leaked into codegen_ssa when converting to/from immediate  values. So  move those methods into builder traits  so that behavior can  be configured by backends.    This is useful if a backend is able to keep bools as bools  or  needs to  do more trickery than just bools to bytes.   ,7,78,   src/librustc_codegen_ssa/mir/operand.rs--13--17--30   src/librustc_codegen_ssa/base.rs--2--18--20   src/librustc_codegen_llvm/builder.rs--10--2--12   src/librustc_codegen_ssa/traits/builder.rs--7--2--9   src/librustc_codegen_llvm/intrinsic.rs--1--2--3   src/librustc_codegen_ssa/mir/block.rs--1--1--2   src/librustc_codegen_ssa/mir/rvalue.rs--1--1--2,Adaptive,
54964,51ef7393ef3e55e22cd385bd89dfa2c1b95a659b,Fix typo in error message + update tests, ,4,24,   src/test/compile-fail/macro-at-most-once-rep-ambig.rs--12--2--14   src/test/run-pass/macro-at-most-once-rep.rs--6--0--6   src/libsyntax/ext/tt/quoted.rs--1--1--2   src/test/compile-fail/issue-39388.rs--1--1--2,Perfective,
76947,853368c1d3c92fa699ba5d1bd1cca2cd2703d4d1,Make is_from_for_desugar sound (rust/28973 got fixed), ,1,6,   src/utils.rs--1--5--6,Corrective,
17717,a43dd4f4014af0f70c032eb23c5cbf4c2829b7c8,Change implementation of `Ipv6Addr::is_unspecified` and `is_loopback` from `matches!` to `u128` comparison,Done because `matches!` doesn't optimize well with array comparisons   ,1,4,   library/std/src/net/ip.rs--2--2--4,Perfective,
91551,073b655187916e9155d285efc496cfd89104796c,std: Move byteswap functions to mem, ,8,84,   src/libstd/mem.rs--31--0--31   src/libstd/unstable/intrinsics.rs--0--27--27   src/libstd/io/extensions.rs--3--3--6   src/libnative/io/net.rs--2--3--5   src/librustuv/net.rs--2--3--5   src/librustc/util/sha2.rs--2--2--4   src/libuuid/lib.rs--2--2--4   src/libserialize/ebml.rs--1--1--2,Perfective,
92626,02bdda27763bcb5d3038d6abd7b1c50d2c394a1c,librustc: De-`@mut` `CrateContext::all_llvm_symbols`, ,2,9,   src/librustc/middle/trans/base.rs--3--2--5   src/librustc/middle/trans/context.rs--2--2--4,Perfective,
100345,efb9b747185f8cb15a0f5b7deb8db633f0a420c3,librustc: Fix explicit self for objects in more cases. r=nmatsakis, ,7,74,   src/librustc/middle/typeck/check/method.rs--11--13--24   src/test/run-pass/explicit-self-objects-ext-1.rs--11--0--11   src/test/run-pass/explicit-self-objects-ext-2.rs--11--0--11   src/test/run-pass/explicit-self-objects-ext-3.rs--11--0--11   src/test/run-pass/explicit-self-objects-ext-4.rs--11--0--11   src/librustc/middle/trans/meth.rs--2--1--3   src/librustc/middle/typeck/check/mod.rs--2--1--3,Corrective,
88341,4357da356071e34278c5ef29aa1480360d0659b5,doc: Fill vec documentation with examples.,Add more useful functions to main example.   ,1,47,   src/libcollections/vec.rs--46--1--47,Perfective,
11180,6d7ef10b4662fcd76cac9ca81568fcd26136b4db,Fix docblock short code missing end whitespaces, ,1,3,   src/librustdoc/html/static/rustdoc.css--3--0--3,Corrective,
10665,19806e451476d9a97175d2ca0c095545e8894421,Tweak stability attribute diagnostic output, ,5,58,   compiler/rustc_passes/src/stability.rs--12--10--22   compiler/rustc_attr/src/builtin.rs--9--7--16   .../stability-attribute-sanity.stderr--6--3--9   compiler/rustc_expand/src/base.rs--4--2--6   .../stability-attribute-sanity.rs--2--3--5,Perfective,
96700,37489a67e597d6b5f85ce407f8075ee7ae7f3fec,Iterator documentation fixes,Fixes two typos and one incorrect description.   ,1,6,   src/libstd/iterator.rs--3--3--6,Perfective,
48706,7b37776ade019d8aa6cf86c5bcb2d9f39c0121a5,Modify the rule for reordering impl items,1. If two items have the same kind  then reorder them based on its ident.  2. Handle existential type.   ,1,14,   src/items.rs--11--3--14,Perfective,
105629,ee991cae81c644a5f536acb49fff59ec769e61c7,rt: Add a hack to fix a port detach bug, ,4,13,   src/rt/rust_builtin.cpp--5--1--6   src/rt/rust_port.cpp--4--0--4   src/libcore/comm.rs--2--0--2   src/rt/rustrt.def.in--1--0--1,Corrective,
42114,6a790d3786f4a4d499991ad4bc52f9eba1771728,Improve the wording, ,28,92,   src/test/ui/coherence/coherence-impls-copy.old.stderr--4--4--8   src/test/ui/coherence/coherence-impls-copy.re.stderr--4--4--8   src/test/ui/coherence/coherence-impls-send.old.stderr--3--3--6   src/test/ui/coherence/coherence-impls-send.re.stderr--3--3--6   src/test/ui/coherence/coherence-impls-sized.old.stderr--3--3--6   src/test/ui/coherence/coherence-impls-sized.re.stderr--3--3--6   .../typeck/typeck-default-trait-impl-cross-crate-coherence.stderr--3--3--6   src/test/ui/coherence/coherence-orphan.old.stderr--2--2--4   src/test/ui/coherence/coherence-orphan.re.stderr--2--2--4   src/librustc_typeck/coherence/orphan.rs--1--1--2   src/test/ui/coherence/coherence-cow.re_a.stderr--1--1--2   src/test/ui/coherence/coherence-cow.re_b.stderr--1--1--2   src/test/ui/coherence/coherence-cow.re_c.stderr--1--1--2   .../ui/coherence/coherence-fundamental-trait-objects.old.stderr--1--1--2   .../ui/coherence/coherence-fundamental-trait-objects.re.stderr--1--1--2   src/test/ui/coherence/coherence-overlapping-pairs.re.stderr--1--1--2   .../ui/coherence/coherence-pair-covered-uncovered-1.re.stderr--1--1--2   src/test/ui/coherence/coherence-pair-covered-uncovered.re.stderr--1--1--2   src/test/ui/coherence/coherence-vec-local-2.re.stderr--1--1--2   src/test/ui/coherence/coherence-vec-local.old.stderr--1--1--2   src/test/ui/coherence/coherence-vec-local.re.stderr--1--1--2   src/test/ui/coherence/coherence_local_err_struct.old.stderr--1--1--2   src/test/ui/coherence/coherence_local_err_struct.re.stderr--1--1--2   src/test/ui/coherence/coherence_local_err_tuple.old.stderr--1--1--2   src/test/ui/coherence/coherence_local_err_tuple.re.stderr--1--1--2   src/test/ui/dropck/drop-on-non-struct.stderr--1--1--2   src/test/ui/error-codes/E0117.stderr--1--1--2   src/test/ui/error-codes/E0206.stderr--1--1--2,Perfective,
22473,f7f62452e47bab1a8e649da77a0ab0f8505d7035,refactor: Replace probe_fudge by an explict call for the lengths, ,3,34,   src/librustc_infer/infer/fudge.rs--8--14--22   src/librustc_infer/infer/type_variable.rs--1--7--8   src/librustc_infer/infer/region_constraints/mod.rs--2--2--4,Perfective,
62808,2e0043ad61cd7b18341cef436fa7b8130a1b7410,"Fix: ""warning: redundant linker flag specified for library `ole32`""","llvm-config seems to output this library name correctly now  removing  the need for the hack in ""librustc_llvm/build.rs"".   ",1,5,   src/librustc_llvm/build.rs--1--4--5,Corrective,
29776,6ab28b50daa160da875a3a1cdcba3b56e21ff4e3,Ignore run-make reproducible-build-2 on Mac (we already ignore it on Windows).,Until we can dedicate resources to fixing this properly  I think we are  best off just ignoring this test on platforms/contexts where it does not  matter as much.   ,1,1,   src/test/run-make-fulldeps/reproducible-build-2/Makefile--1--0--1,Perfective,
65467,9b0e6af11026ea2e4bd9464d83382ac0b5fe0bba,Delete swaths of the configure script,This commit deletes swaths of the configure script related to the old build  system which are now no longer needed when using rustbuild.   ,1,62,   configure--1--61--62,Perfective,
94702,5118ef6ff02c650e54fc89318e7183e4e1cd3fa3,rt: Remove leading underscore on Win64,Win64 convention does not use underscore.   ,3,9,   src/rt/arch/x86_64/ccall.S--4--1--5   src/rt/arch/x86_64/_context.S--1--1--2   src/rt/arch/x86_64/morestack.S--1--1--2,Perfective,
103574,e9b4336bfd5e60486e79cfe0faaf59c4fa28ee27,Register snapshots., ,1,7,   src/snapshots.txt--7--0--7,Adaptive,
41421,938a814e87878e2ff718935f5c7a12f120758c05,Update stdsimd, ,5,56,   src/libstd/tests/run-time-detect.rs--36--0--36   src/libstd/lib.rs--5--6--11   src/libcore/lib.rs--3--3--6   src/stdsimd--1--1--2   src/tools/tidy/src/pal.rs--1--0--1,Perfective,
63349,b393d6436065ecba0ffb366e1ae67def664b7f26,kill regr test using ad-hoc lint,This was a pretty narrow test to start with  and it's kind of a pain to  update it. Not worth the trouble IMO.   ,2,32,   .../issue-37290/auxiliary/lint.rs--0--22--22   src/test/run-pass-fulldeps/issue-37290/main.rs--0--10--10,Perfective,
92373,cbe8c61fed3ccff0a34a9ff79105ad5b7a7de5b3,Add a --no-analysis command line switch, ,2,17,   src/librustc/driver/driver.rs--15--0--15   src/librustc/driver/session.rs--2--0--2,Adaptive,
112534,e62424944b197e24025b149e2d4ba2347b76c8d8,rustc: Have trans get the type parameters from the annotation instead of trying to deduce them itself. Un-XFAIL generic-fn-twice.rs., ,2,48,   src/comp/middle/trans.rs--36--11--47   src/Makefile--0--1--1,Adaptive,
76068,1a2d1b8d36536bec7b9b668d92aef0aac6ae1f91,Re-enable testing the book,In #29932  I moved the location of TRPL  but I missed making the changes  in mk/tests.mk. This led to #30088 landing with a broken example.    As such  #30113 will need to land before this.   ,1,4,   mk/tests.mk--2--2--4,Perfective,
17140,50e8f2218e94d15892a78f0b780ba103bf21647a,Rustup to rustc 1.48.0-nightly (7402a3944 2020-09-13), ,2,21,   build_sysroot/Cargo.lock--6--13--19   rust-toolchain--1--1--2,Perfective,
18560,08d951768f6f9b98ca5ffe3385adfb3f1935af22,self-profile: Cache more query key strings when doing self-profiling., ,1,23,   src/librustc_middle/ty/query/profiling_support.rs--22--1--23,Adaptive,
58591,d5d449421398fe4005f3b3ded551a6274e3d856e,ci: Fix installing the Android SDK,Apparently the https urls are broken due to some certificate validation  whatnots  and so far the least intrusive solution I've found is to just disable  that.   ,1,2,   src/ci/docker/scripts/android-sdk.sh--1--1--2,Corrective,
91970,99cde8482efaed4757422d24cd46de8fa64c92cb,Ignore all newline characters in Base64 decoder,Ignore all newline characters in Base64 decoder to make it compatible  with other Base64 decoders.   ,1,7,   src/libextra/base64.rs--5--2--7,Adaptive,
81393,e47fb489c10f2d86216c3a75ad6cbde3742e9f0c,Address nits, ,1,2,   src/librustc_data_structures/unify/mod.rs--1--1--2,Perfective,
52400,d171e8987e7c4c6900f8593c9bb3c5b7eb420e85,Fix clippy error, ,1,7,   clippy_lints/src/temporary_assignment.rs--3--4--7,Corrective,
70143,65e3ff4df44effdfa60971cd7b66e4ce8a4c5bb9,add extended information for E0529  slice pattern expects array or slice, ,1,32,   src/librustc_typeck/diagnostics.rs--31--1--32,Adaptive,
59544,8fbed5bc428f006d677c784e6f4d9d29120fbc29,Rotate Travis/AppVeyor S3 keys,Haven't done this in awhile so seems like a good idea!   ,2,28,   .travis.yml--8--8--16   appveyor.yml--6--6--12,Perfective,
19004,77d0d152cce8c26935c3e0ac449982f24471a6f5,Made formatting consistent with surrounding code, ,1,6,   library/core/src/str/mod.rs--1--5--6,Perfective,
27402,19b9b26986246b92e1f686a9a7b29da42a79ed9f,Early abort validation of arrays of zsts because there is no data to be checked, ,1,11,   src/librustc_mir/interpret/validity.rs--8--3--11,Adaptive,
99008,5328f3c1ee50a6140638a705551d5bb232921c4d,Remove space from the middle of path, ,1,2,   src/librustdoc/extract.rs--1--1--2,Perfective,
59236,76eac36e36e1bb4ce744c2ddd098c2a57b8f05a3,promote maps into its own directory, ,1,0,   src/librustc/ty/{maps.rs=>maps/mod.rs}--0--0--0,Perfective,
106259,33f4a9838887f03cf5c76e5b470efecaff233636,correct to use enum keyword, ,1,2,   src/etc/ctags.rust--1--1--2,Corrective,
6841,83459081bacfe30a593fc3cc95c029b11ed67468,Remove legacy for trait object mangling test and replace crate hash, ,3,43,   .../ui/symbol-names/trait-objects.legacy.stderr--0--22--22   src/test/ui/symbol-names/trait-objects.v0.stderr--6--6--12   src/test/ui/symbol-names/trait-objects.rs--3--6--9,Perfective,
75827,bb21b6738a90b232b0e9864c7b2e753d0507f6c0,Fix expansion tests, ,1,17,   src/libsyntax/ext/expand.rs--13--4--17,Corrective,
90247,fa64965d6920700c0770dd76cb32aad382cc9d4e,Fix a couple places in docs where try_send wasn't changed to send_opt, ,1,4,   src/libstd/comm/mod.rs--2--2--4,Perfective,
103556,511873afe3e00ed776244478edfec406bdff7e75,rt: add remaining ip string parser/formatter helpers from uv, ,2,24,   src/rt/rust_uv.cpp--20--0--20   src/rt/rustrt.def.in--4--0--4,Adaptive,
66423,88df0e391842f89dbd95fb8e375e11d8263ae156,Fix arguments on Redox, ,1,14,   src/libstd/sys/redox/args.rs--5--9--14,Corrective,
11337,0959f0f912c1029f0dfd3de431786433211a1f2d,Tweak suggestion for missing field in patterns,Account for parser recovered struct and tuple patterns to avoid invalid  suggestion.    Follow up to #81103.   ,4,44,   compiler/rustc_typeck/src/check/pat.rs--6--16--22   src/test/ui/error-codes/E0027.stderr--5--6--11   .../struct_destructure_fail.stderr--3--4--7   .../ui/structs/struct-pat-derived-error.stderr--2--2--4,Perfective,
19273,5b2e2b25e41afbbd0ad803f7986d8559ef649a7e,Moved structs/enums with repr(C) to LLVM types into ffi.rs crates,Some were in librustc_codegen_llvm  but others are not tied to LLVM  so  I put them in a new crate: librustc_codegen_ssa/coverageinfo/ffi.rs   ,6,67,   src/librustc_codegen_llvm/llvm/ffi.rs--22--1--23   src/librustc_codegen_llvm/coverageinfo/mod.rs--1--20--21   src/librustc_codegen_ssa/coverageinfo/ffi.rs--10--0--10   src/librustc_codegen_ssa/coverageinfo/map.rs--1--9--10   src/librustc_codegen_llvm/coverageinfo/mapgen.rs--1--1--2   src/librustc_codegen_ssa/coverageinfo/mod.rs--1--0--1,Perfective,
31110,d4b365429ddaeb18b42ff47456bd9865fd1d732e,points the user away from the Allocation type and towards the Memory type, ,1,12,   src/librustc/mir/interpret/allocation.rs--12--0--12,Perfective,
1787,de0d2b15008f0333e432aab9a7b7045ab0157897,Add testcases, ,3,82,   tests/ui/uninit_vec.stderr--39--6--45   clippy_utils/src/higher.rs--10--10--20   tests/ui/uninit_vec.rs--17--0--17,Perfective,
22472,3f85338f3f2a8e03b90e65fafd0bbe998baae98e,Restore the snapshot/rollback optimization for region constraints, ,3,32,   src/librustc_infer/infer/mod.rs--17--5--22   src/librustc_infer/infer/region_constraints/mod.rs--4--4--8   .../infer/region_constraints/leak_check.rs--1--1--2,Adaptive,
52324,05275dafaaa602fe4a5d275ef724ced39d30465f,Remove unwanted auto-linking and update, ,9,27,   src/libstd/ffi/os_str.rs--3--2--5   src/libstd/macros.rs--2--2--4   src/libsyntax_pos/hygiene.rs--2--2--4   src/libunwind/macros.rs--2--2--4   src/libcore/iter/iterator.rs--1--1--2   src/libcore/str/pattern.rs--1--1--2   src/librustc/ty/sty.rs--1--1--2   src/test/run-pass/issue-16819.rs--1--1--2   src/test/rustdoc-ui/intra-links-warning.rs--1--1--2,Perfective,
4178,e3389befe1655875ab2bfd83a9c44e507ec0ee5f,Bless test, ,1,6,   .../explicit-generic-args-for-impl.stderr--3--3--6,Perfective,
47970,4aced68e1835d79c01c739c1bf731d840f6f5c51,[nll] librustdoc: enable feature(nll) for bootstrap, ,1,1,   src/librustdoc/lib.rs--1--0--1,Perfective,
98202,48e7bda8269861df43763b4fb42e68af0eb09b20,path -> Path, ,21,184,   src/libsyntax/ext/pipes/ast_builder.rs--15--15--30   src/libsyntax/ast.rs--12--12--24   src/libsyntax/ext/auto_encode.rs--10--10--20   src/libsyntax/ext/build.rs--8--8--16   src/libsyntax/parse/parser.rs--8--8--16   src/librustc/middle/resolve.rs--5--5--10   src/librustc/middle/typeck/astconv.rs--5--5--10   src/libsyntax/fold.rs--5--5--10   src/librustc/front/test.rs--4--4--8   src/librustc/middle/typeck/check/_match.rs--4--4--8   src/libsyntax/ast_util.rs--3--3--6   src/librustc/metadata/tydecode.rs--2--2--4   src/librustc/middle/privacy.rs--2--2--4   src/libsyntax/print/pprust.rs--2--2--4   src/librustc/front/core_inject.rs--1--1--2   src/librustc/middle/pat_util.rs--1--1--2   src/librustc/middle/typeck/check/mod.rs--1--1--2   src/libsyntax/ext/concat_idents.rs--1--1--2   src/libsyntax/ext/deriving/mod.rs--1--1--2   src/libsyntax/parse/token.rs--1--1--2   src/libsyntax/visit.rs--1--1--2,Perfective,
54893,30a28a262cd4f0cfd1e4c71792d657bc0fc8624c,Make `is_mod_decl` more accommodating,Fixes #2403 (I think)   ,4,13,   src/visitor.rs--1--4--5   src/codemap.rs--2--2--4   Cargo.lock--1--1--2   Cargo.toml--1--1--2,Perfective,
97603,6cb273ed4efb6724b1c713c3ac35d14e52999fb1,Address all FIXMEs from #5562, ,6,34,   src/librustc/middle/astencode.rs--3--5--8   src/librustc/middle/kind.rs--2--6--8   src/librustc/middle/trans/callee.rs--1--5--6   src/librustc/middle/trans/type_of.rs--2--4--6   src/librustc/middle/trans/type_use.rs--2--2--4   src/librustc/middle/trans/base.rs--1--1--2,Perfective,
31098,0a7ba6b9fcad16f0894fffdb1e8f86dcaffbdb06,add hermit-abi to the whitelist, ,1,1,   src/tools/tidy/src/deps.rs--1--0--1,Perfective,
81432,521ae488db40b6b136bc38b468fcdaf48033c8a4,rustc: Add long diagnostics for E0152, ,1,15,   src/librustc/diagnostics.rs--14--1--15,Adaptive,
53634,a9fc3901b07d0494bd3eb9c37b10e63b429714b0,stabilise feature(never_type),Replace feature(never_type) with feature(exhaustive_patterns).  feature(exhaustive_patterns) only covers the pattern-exhaustives checks  that used to be covered by feature(never_type)   ,77,229,   src/test/ui/feature-gate-never_type.rs--0--22--22   .../feature-gate-exhaustive-patterns.rs}--5--10--15   src/libstd/primitive_docs.rs--4--5--9   src/libcore/cmp.rs--3--4--7   .../ui/feature-gate-exhaustive-patterns.stderr--7--0--7   src/test/ui/reachable/expr_struct.stderr--3--4--7   src/libsyntax/feature_gate.rs--2--5--7   src/librustc_mir/hair/pattern/_match.rs--2--3--5   src/test/ui/reachable/expr_unary.stderr--2--3--5   src/test/ui/reachable/expr_while.stderr--2--3--5   src/test/ui/reachable/expr_match.stderr--2--3--5   src/test/ui/reachable/expr_loop.stderr--2--3--5   src/test/ui/reachable/expr_assign.stderr--2--3--5   src/libcore/fmt/mod.rs--2--2--4   src/test/ui/reachable/expr_add.stderr--2--2--4   src/test/ui/reachable/expr_tup.stderr--2--2--4   src/test/ui/reachable/expr_method.stderr--2--2--4   src/test/ui/reachable/expr_call.stderr--2--2--4   src/test/ui/reachable/expr_block.stderr--2--2--4   src/test/ui/reachable/expr_array.stderr--2--2--4   src/libcore/lib.rs--2--1--3   src/librustc_mir/lib.rs--2--1--3   src/test/ui/reachable/expr_array.rs--1--2--3   src/libstd/lib.rs--2--1--3   src/librustc_typeck/lib.rs--2--1--3   src/librustc/lib.rs--1--1--2   src/test/run-fail/cast-never.rs--0--2--2   src/librustc_mir/build/matches/simplify.rs--1--1--2   src/librustc_mir/hair/pattern/check_match.rs--1--1--2   src/libstd/error.rs--1--1--2   .../compile-fail/call-fn-never-arg-wrong-type.rs--0--2--2   src/test/compile-fail/coerce-to-bang-cast.rs--0--2--2   src/test/run-fail/adjust_never.rs--0--2--2   .../compile-fail/inhabitedness-infinite-loop.rs--1--1--2   src/test/compile-fail/loop-break-value.rs--0--2--2   src/test/compile-fail/match-privately-empty.rs--1--1--2   src/test/compile-fail/never-assign-dead-code.rs--1--1--2   src/test/ui/reachable/expr_repeat.stderr--1--1--2   .../recursive-types-are-not-uninhabited.rs--0--2--2   src/test/compile-fail/uninhabited-irrefutable.rs--1--1--2   src/test/run-pass/loop-break-value.rs--0--2--2   src/test/run-pass/issue-44402.rs--1--1--2   src/test/ui/reachable/expr_return.stderr--1--1--2   src/test/run-pass/never-result.rs--0--2--2   src/test/run-pass/impl-for-never.rs--0--2--2   src/test/compile-fail/unreachable-try-pattern.rs--1--1--2   src/test/run-pass/empty-types-in-patterns.rs--1--1--2   src/test/ui/reachable/expr_type.stderr--1--1--2   .../run-pass/diverging-fallback-control-flow.rs--0--2--2   src/test/compile-fail/uninhabited-patterns.rs--1--1--2   src/test/run-fail/never-type-arg.rs--0--2--2   src/test/compile-fail/unreachable-loop-patterns.rs--1--1--2   src/test/run-fail/never-associated-type.rs--0--2--2   src/test/ui/reachable/expr_cast.stderr--1--1--2   src/test/ui/reachable/expr_if.stderr--1--1--2   src/librustc_lint/lib.rs--1--0--1   src/test/compile-fail/coerce-to-bang.rs--0--1--1   src/test/compile-fail/never-assign-wrong-type.rs--0--1--1   src/test/ui/print_type_sizes/uninhabited.rs--0--1--1   src/test/ui/reachable/expr_add.rs--0--1--1   src/test/run-pass/mir_calls_to_shims.rs--0--1--1   src/test/ui/reachable/expr_assign.rs--0--1--1   src/test/ui/reachable/expr_block.rs--0--1--1   src/test/ui/reachable/expr_repeat.rs--0--1--1   src/test/ui/reachable/expr_loop.rs--0--1--1   src/test/ui/reachable/expr_return.rs--0--1--1   src/test/ui/reachable/expr_if.rs--0--1--1   src/test/ui/reachable/expr_match.rs--0--1--1   src/test/run-fail/call-fn-never-arg.rs--0--1--1   src/test/ui/reachable/expr_tup.rs--0--1--1   src/test/ui/reachable/expr_call.rs--0--1--1   src/test/ui/reachable/expr_type.rs--0--1--1   src/test/ui/reachable/expr_method.rs--0--1--1   src/test/ui/reachable/expr_unary.rs--0--1--1   src/test/ui/reachable/expr_cast.rs--0--1--1   src/test/ui/reachable/expr_while.rs--0--1--1   src/test/ui/reachable/expr_struct.rs--0--1--1,Perfective,
5792,872839eb494e2ed6b2e7c9ba28ec3450c399d935,Early return from `inject_profiler_runtime`, ,1,34,   compiler/rustc_metadata/src/creader.rs--17--17--34,Perfective,
32113,2883c258f1a6dd82f6acd174b71d74e04e645f6d,Remove an out-of-date sentence in a comment., ,1,5,   src/librustc_data_structures/obligation_forest/mod.rs--2--3--5,Perfective,
63665,e46a8bde3c2ef7b1281f3d01e31febc687be2d12,std: Back out backtrace pruning logic,It was discovered #40264 that this backtrace pruning logic is a little too  aggressive  so while we figure how out to handle #40264 this commit backs out  the changes to prune frames. Note that other cosmetic changes  such as better  path printing and such remain.   ,1,38,   src/libstd/sys_common/backtrace.rs--2--36--38,Perfective,
45034,820c2657f2584501d5e062351306780d29385421,add useful debug log, ,1,1,   src/librustc_mir/borrow_check/nll/type_check/constraint_conversion.rs--1--0--1,Perfective,
67337,61ab06a92eae355ed6447d85d3c416fb65e96bdb,v0.6.3, ,2,4,   Cargo.lock--1--1--2   Cargo.toml--1--1--2,Perfective,
106305,31166438063236e6d2ad021cf2169fce2b3839b4,"Revert ""make boxes self-describing (fixes #1493)"" until a new snapshot is prepared.", ,26,145,   src/comp/middle/trans/closure.rs--21--17--38   src/rt/rust_cc.cpp--12--9--21   src/comp/middle/trans/base.rs--6--7--13   src/rt/rust_shape.h--8--3--11   src/rt/boxed_region.cpp--0--7--7   src/rt/rust_upcall.cpp--2--5--7   src/comp/middle/trans/common.rs--2--4--6   src/rt/rust_task.cpp--4--1--5   src/rt/boxed_region.h--0--4--4   src/rt/rust_internal.h--2--2--4   mk/target.mk--1--1--2   src/comp/back/abi.rs--1--1--2   src/comp/back/upcall.rs--1--1--2   src/comp/middle/trans/alt.rs--1--1--2   src/comp/middle/trans/build.rs--1--1--2   src/comp/middle/trans/impl.rs--1--1--2   src/rt/memory_region.h--1--1--2   src/rt/rust_builtin.cpp--2--0--2   src/rt/rust_shape.cpp--1--1--2   src/rt/rust_task.h--1--1--2   src/rt/rust_upcall.h--1--1--2   src/rt/rustrt.def.in--1--1--2   src/rt/test/rust_test_runtime.cpp--1--1--2   mk/rt.mk--0--1--1   src/comp/syntax/parse/parser.rs--0--1--1   src/libcore/task.rs--1--0--1,Corrective,
23708,89e14d201db8c8dc49fab4c1d17d6546b00817ae,use_self: switch to hir_ty_to_ty., ,1,44,   clippy_lints/src/use_self.rs--20--24--44,Perfective,
96955,2616581863ea71ecc23f1f126cb409e047139b6c,Refactor helper routines to be less tied to match syntax, ,1,36,   src/librustc/middle/trans/_match.rs--20--16--36,Perfective,
24609,4d30b92e3e57cf606a25c807a9e4ab2b7a4d1064,recover on `for<'a> |...| body` closures., ,5,55,   src/librustc_parse/parser/expr.rs--20--2--22   src/librustc_parse/parser/generics.rs--6--7--13   .../ui/parser/recover-quantified-closure.stderr--11--0--11   src/test/ui/parser/recover-quantified-closure.rs--7--0--7   src/librustc_parse/parser/item.rs--1--1--2,Adaptive,
48431,c02c00b8455d6ec6eff50ae94bebb4a424c95e02,Fix bug in test pointed out during review., ,1,4,   src/test/ui/issue-45696-no-variant-box-recur.rs--2--2--4,Corrective,
42593,2820dc868a35c02adb9225492d575c7d5e72338c,Remove dead code, ,1,6,   src/librustc_typeck/check/coercion.rs--1--5--6,Perfective,
84295,4c78d2834446426b2dd3cc467f1324dacdc9042e,Remove range function, ,1,2,   src/etc/vim/syntax/rust.vim--0--2--2,Perfective,
26923,9bb2a50e04460fff646830502d575b82dbf17055,Document that write_all will not call write if given an empty buffer,Some types of Write instances have a semantic meaning associated with  writing an empty buffer  such as sending an empty packet. This works  when calling `write` directly  and supplying an empty buffer. However   calling `write_all` on an empty buffer will simply never call `write`   because `write_all` assumes it has no work to do.    Document this behavior  to help prospective users of  datagram-packet-style Write instances.   ,1,2,   src/libstd/io/mod.rs--2--0--2,Perfective,
108575,e42f3b8481049fd3626c24b95297282b68df1436,Safeguard against self-assignment for unique types, ,1,10,   src/comp/middle/trans.rs--6--4--10,Adaptive,
49694,865320f6a49ac10aca6c6e6d6f4e3358596dd64a,remove the `ins` set altogether, ,3,50,   src/librustc_mir/util/liveness.rs--8--22--30   src/librustc_mir/borrow_check/nll/mod.rs--8--8--16   src/librustc_mir/util/pretty.rs--4--0--4,Perfective,
19912,14a8707cde48c7914af307f4687056d829ad2de9,Add `rustdoc` tests from #72088, ,2,16,   src/test/rustdoc/macro-in-async-block.rs--9--0--9   src/test/rustdoc/macro-in-closure.rs--7--0--7,Perfective,
98121,59e69aa0e79302887abcb4b6bf3613c84b48e5d7,test: remove unnecessary unsafe blocks/functions, ,2,63,   src/compiletest/errors.rs--23--24--47   src/compiletest/header.rs--8--8--16,Perfective,
41855,8aee796013d94a81d71274cdda349e265368de07,Update Cargo.lock and use emit_small_memcpy, ,2,72,   Cargo.lock--34--24--58   src/common.rs--3--11--14,Perfective,
57850,d66161c6a3cbc1d3d2c34d63df8c7b4d4a71a211,Prefer &[T] to &Vec<T>, ,1,8,   src/imports.rs--4--4--8,Perfective,
38276,8234ac32bd9002a02d7c70a989a04c2278acf78d,Add saturating_abs() and saturating_neg() functions to signed integer types,Similar to wrapping_abs() / wrapping_neg() functions but saturating at  the numeric bounds instead of wrapping around. Complements the existing  set of functions with saturation mechanics.   ,1,50,   src/libcore/num/mod.rs--50--0--50,Adaptive,
18020,05a040f406009a22600a9e0c37738ad0643cf811,Remove unused `ns` parameter, ,1,15,   src/librustdoc/passes/collect_intra_doc_links.rs--6--9--15,Perfective,
19509,49b1971263971db49e821f81bb54991b7de5ab43,add const generics, ,1,11,   src/test/ui/const-generics/coerce_unsized_array.rs--11--0--11,Adaptive,
47240,458f5a21e22225953e62212827dbdc8d553d8297,Properly prevent the promotion of unstable const fns, ,2,7,   src/librustc_mir/transform/qualify_consts.rs--1--3--4   src/librustc_passes/rvalue_promotion.rs--0--3--3,Corrective,
15102,13a5067061c14875bf1deda44a4740c08e872eb9,Unignore test, ,1,2,   src/test/run-make-fulldeps/issue-36710/Makefile--0--2--2,Perfective,
39650,7c66ae2fc5eb15a5f9b3c7a0b2e18528c54e88a6,use `!` in macro disambiguation suggestion, ,2,9,   src/test/rustdoc-ui/intra-links-ambiguity.stderr--3--3--6   src/librustdoc/passes/collect_intra_doc_links.rs--3--0--3,Perfective,
50590,451fd5feb9d68c0c9a130b5d36ae73bae06c4200,Extracting arguments to format to pass directly to panic when appropriate, ,2,44,   clippy_lints/src/methods.rs--39--1--40   tests/ui/methods.stderr--2--2--4,Adaptive,
80047,ec078a033bdd2a4d076f78f2e655b8c3e5e4bf6a,change some statics to constants, ,13,40,   src/libcollections/bit.rs--4--4--8   src/librustc/lint/mod.rs--2--3--5   src/librand/distributions/ziggurat_tables.rs--2--2--4   src/libstd/net/tcp.rs--2--2--4   src/libcore/num/flt2dec/strategy/grisu.rs--1--2--3   src/libsyntax/diagnostics/plugin.rs--1--2--3   src/liballoc/boxed.rs--1--1--2   src/libcollections/vec.rs--1--1--2   src/libcore/num/flt2dec/strategy/dragon.rs--0--2--2   src/liblog/directive.rs--1--1--2   src/librustdoc/clean/mod.rs--1--1--2   src/libstd/sys/common/remutex.rs--1--1--2   src/libsyntax/ext/format.rs--1--0--1,Perfective,
67756,222349931eec0b0b68b31b2b8b01e162cee23b85,apply review feedback nits,- correct indentation  - rename `from_cause` to `from_obligation_cause`  - break up `compare_impl_method` into fns  - delete some blank lines and correct comment   ,4,34,   src/librustc_typeck/check/compare_method.rs--15--13--28   src/librustc/infer/mod.rs--1--1--2   src/librustc/traits/util.rs--1--1--2   src/librustc_typeck/check/regionck.rs--1--1--2,Perfective,
63771,537eb45b9d8f547046ae060d4c115e408fd66fdf,Update various bookshelf repositories.,The book and the reference have both had changes lately; this integrates  them upstream.   ,2,4,   src/doc/book--1--1--2   src/doc/reference--1--1--2,Perfective,
24333,7400955e941a3958b1560f2cb0b7648535d2f9d0,add usize methods for Size getters, ,3,31,   src/librustc_mir/interpret/memory.rs--6--7--13   src/librustc_target/abi/mod.rs--10--0--10   src/librustc/mir/interpret/allocation.rs--4--4--8,Adaptive,
98097,68583a25a0b31bc113cf1f4ec479339cbf876e4d,core::rt: Restructure context switches to take ownership of the Scheduler,In order to do a context switch you have to give up ownership of the scheduler   effectively passing it to the next execution context. This could help avoid  some situations here tasks retain unsafe pointers to schedulers between context  switches  across which they may have changed threads.    There are still a number of uses of unsafe scheduler pointers.   ,2,60,   src/libcore/rt/sched/mod.rs--27--17--44   src/libcore/rt/uvio.rs--9--7--16,Perfective,
103180,1c62f5ff74e8c6d434001d4571e5f28ae2705ed9,Get rid of all of the remaining /~s in the code base., ,17,138,   src/libstd/net_tcp.rs--12--12--24   src/libsyntax/ext/pipes/pipec.rs--10--10--20   src/libsyntax/parse/attr.rs--6--6--12   src/test/bench/msgsend-ring-pipes.rs--6--6--12   src/test/run-pass/reflect-visit-data.rs--6--6--12   src/libstd/net_ip.rs--5--5--10   src/libsyntax/parse/comments.rs--5--5--10   src/libstd/getopts.rs--4--4--8   src/libstd/uv_ll.rs--4--4--8   src/libcore/float.rs--2--2--4   src/libcore/result.rs--2--2--4   src/libcore/vec.rs--2--2--4   src/etc/combine-tests.py--0--2--2   src/libcore/dvec.rs--1--1--2   src/libcore/unsafe.rs--1--1--2   src/libstd/sort.rs--1--1--2   src/libstd/term.rs--1--1--2,Perfective,
52113,256096da9ee680366b839f912e8d3ecccc0da033,Make Vec::new const, ,4,38,   src/liballoc/raw_vec.rs--16--0--16   src/test/run-pass/vec-const-new.rs--15--0--15   src/libcore/ptr.rs--2--3--5   src/liballoc/vec.rs--1--1--2,Adaptive,
112144,19a949c15eb0a6179e62c6ac1a540ff15ede1a25,Un-XFAIL expr-block-box.rs, ,1,1,   src/test/run-pass/expr-block-box.rs--0--1--1,Perfective,
56583,ab1c1bc6bc18b70818206e7f07ac5133239607ff,mir-borrowck returns closure requirements  mir-typeck enforces, ,14,51,   .../borrow_check/nll/universal_regions.rs--19--2--21   .../borrow_check/nll/region_infer/mod.rs--7--2--9   src/librustc/mir/mod.rs--2--0--2   src/librustc/ty/maps/mod.rs--1--1--2   src/librustc/ty/sty.rs--2--0--2   src/librustc_driver/driver.rs--1--1--2   src/librustc_mir/borrow_check/mod.rs--1--1--2   src/librustc_mir/borrow_check/nll/mod.rs--1--1--2   src/librustc_mir/borrow_check/nll/renumber.rs--1--1--2   .../nll/subtype_constraint_generation.rs--1--1--2   src/librustc_mir/transform/type_check.rs--1--1--2   src/librustc/ich/impls_mir.rs--1--0--1   src/librustc/ich/impls_ty.rs--1--0--1   src/librustc/infer/mod.rs--1--0--1,Adaptive,
60112,12ceed013cdbd5d431a6908d49b2b6cb6fe1d032,Introduce target feature crt_static_allows_dylibs,Most UNIX-like platforms do not allow shared libraries to statically  link their own libc  as libc expects to have consistent process-global  state. On those platforms  when we do not have a shared libc available   we must not attempt to link dylibs or cdylibs. On Windows  however  it  is expected to statically link the CRT into dynamic libraries.    This feature is only relevant for targets that support both fully-static  and fully-dynamic linkage  such as musl on Linux.   ,3,13,   src/librustc_trans_utils/link.rs--5--2--7   src/librustc_back/target/mod.rs--5--0--5   src/librustc_back/target/windows_msvc_base.rs--1--0--1,Adaptive,
42884,985eba08a558bae9a9042b65df59340d227d7673,Line length fix, ,1,3,   clippy_lints/src/types.rs--2--1--3,Perfective,
11419,2beea2c0bfde5acb681a368f82d8ce9c4e9568cd,add test for lazy norm err, ,3,10,   .../ui/const-generics/const-argument-cross-crate-mismatch.full.stderr--2--2--4   .../ui/const-generics/const-argument-cross-crate-mismatch.min.stderr--2--2--4   src/test/ui/const-generics/const-argument-cross-crate-mismatch.rs--2--0--2,Perfective,
68805,2e6a91812c64a507e3d2ab727824ff9cda8449fc,librustc: Add a new nop statement to the MIR.,This is useful when passes want to remove statements without affecting  `Location`s.   ,9,38,   src/librustc/mir/repr.rs--20--0--20   src/librustc_borrowck/borrowck/mir/dataflow/impls.rs--2--1--3   .../borrowck/mir/dataflow/sanity_check.rs--2--1--3   src/librustc_borrowck/borrowck/mir/mod.rs--2--1--3   src/librustc_mir/transform/qualify_consts.rs--2--1--3   src/librustc_trans/mir/constant.rs--2--1--3   src/librustc/mir/visit.rs--1--0--1   src/librustc_mir/transform/type_check.rs--1--0--1   src/librustc_trans/mir/statement.rs--1--0--1,Adaptive,
22697,6a681f5ca1ad6b37a90996353db276c8e0708285,remove obsolete comments,Referenced was removed in 8770d0f34a9bee2691517ab95803a277c453dfda   ,1,6,   src/librustc_infer/infer/region_constraints/mod.rs--0--6--6,Perfective,
41995,65a8d7b1d8e5acb494c0313829f173657fd0d5b8,fix tests, ,2,5,   src/test/ui/parser/issue-14303-fncall.rs--2--2--4   src/test/ui/parser/issue-14303-path.rs--1--0--1,Perfective,
62401,397972f5b032b848dd8ba2d13e851be0bf9c1ffa,Separate suggestion in a `help` and a `note`, ,6,35,   .../impl-trait/no-method-suggested-traits.stderr--14--8--22   src/librustc_typeck/check/method/suggest.rs--2--3--5   src/test/ui/span/issue-7575.stderr--2--1--3   .../issue-21659-show-relevant-trait-impls-3.stderr--1--1--2   .../method-suggestion-no-duplication.stderr--1--1--2   src/test/compile-fail/method-call-err-msg.rs--1--0--1,Perfective,
45197,8362aa2178959186c09899ca173ffb296fb3445e,Extract localStorage tests out into a helper method; use in getCurrentValue(),1. Extract the tests for whether or not we have workable localStorage out into     a helper method  so it can be more easily reused  2. Use it in getCurrentValue() too  for the same reasons  as suggested in code     review   ,1,28,   src/librustdoc/html/static/storage.js--20--8--28,Perfective,
94786,8d997fba1a035b20d208c588cb267385dea74f6c,std: put FileMode/Access->whence-mask in uvio  open/unlink as fns in file::, ,4,71,   src/libstd/rt/io/file.rs--17--30--47   src/libstd/rt/uv/uvio.rs--10--4--14   src/libstd/rt/io/mod.rs--8--0--8   src/libstd/rt/rtio.rs--1--1--2,Perfective,
23119,c3c5c4b731588fa289fb3e4959b9b896b95149a9,Use DWARF version 4 for now, ,1,4,   src/debuginfo/mod.rs--3--1--4,Perfective,
24548,1661a0a99ba09ff0b2cce8ad99c4f18150165b80,convert a couple more errors, ,5,35,   src/librustc_lint/builtin.rs--6--13--19   src/test/ui/lint/lint-missing-doc.rs--3--3--6   src/test/ui/lint/lint-missing-doc.stderr--3--3--6   .../ui/privacy/private-in-public-non-principal.rs--1--1--2   .../ui/privacy/private-in-public-non-principal.stderr--1--1--2,Corrective,
13700,a2f938ac52d8d1b3ee1cf94f18705e95f28ca0b8,Document that heap allocations are not guaranteed to happen  even if explicitly performed in the code, ,2,25,   library/core/src/alloc/global.rs--13--0--13   library/core/src/alloc/mod.rs--12--0--12,Perfective,
42021,beb6495862942903d71e39e328b62b58cd6d2bb2,note that FromStr does not work for borrowed types,Fixes #47757   ,1,8,   src/libcore/str/mod.rs--6--2--8,Corrective,
57743,d2d5ebe4dae780bcd2db30b1dcb5f70e5962a56a,Add a test for #2126, ,2,38,   tests/target/chains.rs--22--0--22   tests/source/chains.rs--16--0--16,Perfective,
49919,0e775a3b865605dfa761995b8f3a8fb248971836,Don't visit the `impl Trait` item twice, ,1,3,   src/librustc/hir/intravisit.rs--1--2--3,Corrective,
37849,606bb6f6fe4cfb6e3054e90cc400553f280ad94a,avoid extra copy, ,1,25,   src/libsyntax/ext/tt/transcribe.rs--12--13--25,Perfective,
22840,a2fdc9468600797762cf7cb7ad4fe32e05c3373e,Emit basic block ids for statements and terminators in MIR only in -Zverbose mode, ,127,419,   ...dress_of_reborrow.SimplifyCfg-initial.after.mir--10--11--21   ...complicated_match.SimplifyCfg-initial.after.mir--6--6--12   ...ustc.main.SimplifyCfg-elaborate-drops.after.mir--6--6--12   .../rustc.XXX.mir_map.0.mir--6--6--12   ...ustc.complicated_match.ElaborateDrops.after.mir--5--6--11   .../rustc.main.PromoteTemps.before.mir--4--4--8   .../rustc.main.ElaborateDrops.after.mir--3--4--7   ...ustc.main-{{closure}}.StateTransform.before.mir--3--3--6   .../rustc.full_tested_match.PromoteTemps.after.mir--3--3--6   ...ustc.full_tested_match2.PromoteTemps.before.mir--3--3--6   .../32bit/rustc.norm2.InstCombine.diff--2--3--5   .../64bit/rustc.norm2.InstCombine.diff--2--3--5   .../inline/inline-retag/rustc.bar.Inline.after.mir--2--3--5   .../rustc.test.ElaborateDrops.after.mir--2--3--5   .../rustc.test.ElaborateDrops.before.mir--2--3--5   .../rustc.main.SimplifyCfg-initial.after.mir--2--3--5   .../rustc.main.SimplifyLocals.diff--2--3--5   .../rustc.move_out_by_subslice.mir_map.0.mir--2--3--5   .../rustc.move_out_from_end.mir_map.0.mir--2--3--5   .../rustc.main.UninhabitedEnumBranching.diff--2--3--5   ...ustc.main.SimplifyCfg-elaborate-drops.after.mir--2--2--4   .../rustc.main.SimplifyCfg-initial.after.mir--2--2--4   .../32bit/rustc.main.ConstProp.diff--2--2--4   .../64bit/rustc.main.ConstProp.diff--2--2--4   ...rustc.match_tuple.SimplifyCfg-initial.after.mir--2--2--4   .../rustc.foo.Inline.after.mir--2--2--4   .../mir-opt/issue-49232/rustc.main.mir_map.0.mir--2--2--4   ...tc.match_guard.CleanupNonCodegenStatements.diff--2--2--4   .../rustc.foo.SimplifyLocals.diff--2--2--4   .../rustc.main.SimplifyCfg-initial.diff--2--2--4   ...ring__String].AddMovesForPackedDrops.before.mir--2--2--4   .../rustc.main.UnreachablePropagation.diff--2--2--4   ...c.borrow_and_cast.SimplifyCfg-initial.after.mir--1--2--3   .../box_expr/rustc.main.ElaborateDrops.before.mir--1--2--3   .../rustc.BAR.PromoteTemps.diff--1--2--3   .../rustc.FOO.PromoteTemps.diff--1--2--3   .../discriminant/32bit/rustc.main.ConstProp.diff--1--2--3   .../discriminant/64bit/rustc.main.ConstProp.diff--1--2--3   .../rustc.main.ConstProp.diff--1--2--3   .../ref_deref_project/rustc.main.PromoteTemps.diff--1--2--3   .../repeat/32bit/rustc.main.ConstProp.diff--1--2--3   .../repeat/64bit/rustc.main.ConstProp.diff--1--2--3   .../slice_len/32bit/rustc.main.ConstProp.diff--1--2--3   .../slice_len/64bit/rustc.main.ConstProp.diff--1--2--3   .../rustc.test1.Deaggregator.diff--2--1--3   .../rustc.test.Deaggregator.diff--2--1--3   .../rustc.main-{{closure}}.generator_drop.0.mir--1--2--3   .../rustc.main-{{closure}}.generator_resume.0.mir--1--2--3   .../rustc.foo.Inline.after.mir--1--2--3   .../inline-closure/rustc.foo.Inline.after.mir--1--2--3   .../32bit/rustc.main.Inline.diff--2--1--3   .../64bit/rustc.main.Inline.diff--2--1--3   .../rustc.main.SimplifyCfg-initial.after.mir--1--2--3   .../rustc.main.ElaborateDrops.after.mir--1--2--3   ...rustc.main.SimplifyCfg-qualify-consts.after.mir--1--2--3   ...ustc.main.SimplifyCfg-elaborate-drops.after.mir--1--2--3   .../rustc.main.SimplifyArmIdentity.diff--1--2--3   .../rustc.main.SimplifyCfg-early-opt.diff--1--2--3   .../mir-opt/storage_ranges/rustc.main.nll.0.mir--1--2--3   ...yCfg-after-uninhabited-enum-branching.after.mir--1--2--3   .../rustc.main.UnreachablePropagation.diff--1--2--3   .../rustc.while_loop.PreCodegen.after.mir--1--2--3   src/librustc_mir/util/pretty.rs--1--1--2   ...ustc.main.SimplifyCfg-elaborate-drops.after.mir--1--1--2   .../rustc.BAR-promoted[0].ConstProp.after.mir--1--1--2   .../rustc.FOO-promoted[0].ConstProp.after.mir--1--1--2   .../32bit/rustc.main.ConstProp.after.mir--1--1--2   .../64bit/rustc.main.ConstProp.after.mir--1--1--2   .../const_prop/aggregate/rustc.main.ConstProp.diff--1--1--2   .../array_index/32bit/rustc.main.ConstProp.diff--1--1--2   .../array_index/64bit/rustc.main.ConstProp.diff--1--1--2   .../const_prop/boxes/rustc.main.ConstProp.diff--1--1--2   .../const_prop/cast/rustc.main.ConstProp.diff--1--1--2   .../checked_add/rustc.main.ConstProp.diff--1--1--2   .../rustc.main.ConstProp.diff--1--1--2   .../rustc.hello.ConstProp.diff--1--1--2   .../rustc.hello.PreCodegen.before.mir--1--1--2   .../const_prop/indirect/rustc.main.ConstProp.diff--1--1--2   .../issue-66971/rustc.main.ConstProp.diff--1--1--2   .../issue-67019/rustc.main.ConstProp.diff--1--1--2   .../32bit/rustc.main.SimplifyLocals.after.mir--1--1--2   .../64bit/rustc.main.SimplifyLocals.after.mir--1--1--2   .../const_prop/ref_deref/rustc.main.ConstProp.diff--1--1--2   .../ref_deref/rustc.main.PromoteTemps.diff--1--1--2   .../ref_deref_project/rustc.main.ConstProp.diff--1--1--2   .../reify_fn_ptr/rustc.main.ConstProp.diff--1--1--2   .../return_place/rustc.add.ConstProp.diff--1--1--2   .../return_place/rustc.add.PreCodegen.before.mir--1--1--2   .../switch_int/rustc.main.ConstProp.diff--1--1--2   ...stc.main.SimplifyBranches-after-const-prop.diff--1--1--2   .../rustc.test.CopyPropagation.diff--1--1--2   .../rustc.arg_src.CopyPropagation.diff--1--1--2   .../rustc.bar.CopyPropagation.diff--1--1--2   .../rustc.baz.CopyPropagation.diff--1--1--2   .../rustc.foo.CopyPropagation.diff--1--1--2   .../deaggregator_test/rustc.bar.Deaggregator.diff--1--1--2   .../rustc.bar.Deaggregator.diff--1--1--2   .../inline-any-operand/rustc.bar.Inline.after.mir--1--1--2   .../inline-specialization/rustc.main.Inline.diff--1--1--2   .../rustc.test.Inline.after.mir--1--1--2   .../rustc.test2.Inline.after.mir--1--1--2   .../rustc.a.Inline.after.mir--1--1--2   .../rustc.b.Inline.after.mir--1--1--2   .../rustc.c.Inline.after.mir--1--1--2   .../rustc.d.Inline.after.mir--1--1--2   ...constant}}.SimplifyCfg-qualify-consts.after.mir--1--1--2   ...tc.unwrap.SimplifyCfg-elaborate-drops.after.mir--1--1--2   .../rustc.main.ElaborateDrops.before.mir--1--1--2   .../rustc.no_codegen.PreCodegen.after.mir--1--1--2   ...closure}}.SimplifyCfg-elaborate-drops.after.mir--1--1--2   ...p_in_place.Test.SimplifyCfg-make_shim.after.mir--1--1--2   ...mpl}}-foo.SimplifyCfg-elaborate-drops.after.mir--1--1--2   ...}-foo_shr.SimplifyCfg-elaborate-drops.after.mir--1--1--2   .../32bit/rustc.match_bool.mir_map.0.mir--1--1--2   .../64bit/rustc.match_bool.mir_map.0.mir--1--1--2   .../rustc.map.SimplifyLocals.diff--1--1--2   ...ustc.main.SimplifyBranches-after-copy-prop.diff--1--1--2   .../rustc.try_identity.SimplifyArmIdentity.diff--1--1--2   ...rustc.try_identity.SimplifyBranchSame.after.mir--1--1--2   .../rustc.try_identity.SimplifyLocals.after.mir--1--1--2   .../rustc.process_never.SimplifyLocals.after.mir--1--1--2   .../rustc.process_void.SimplifyLocals.after.mir--1--1--2   .../32bit/rustc.E-V-{{constant}}.mir_map.0.mir--1--1--2   .../rustc.Test-X-{{constructor}}.mir_map.0.mir--1--1--2   ...vec__Vec_i32_.AddMovesForPackedDrops.before.mir--1--1--2   ...ustc.{{impl}}-ASSOCIATED_CONSTANT.mir_map.0.mir--1--1--2   .../64bit/rustc.E-V-{{constant}}.mir_map.0.mir--1--1--2,Adaptive,
106510,493142ffd4c33bbb370de792dc393e968d3e96be,Add Joshua Clark to AUTHORS.txt, ,1,1,   AUTHORS.txt--1--0--1,Perfective,
8221,2c1429ca5ebccecb463d268bc1628a9d330d57b0,Update error code docs even more, ,2,20,   compiler/rustc_error_codes/src/error_codes/E0783.md--6--10--16   compiler/rustc_error_codes/src/error_codes/E0782.md--2--2--4,Perfective,
55128,0ac465924e6ae4380b25c38cbc14f425796fa2af,Add line numbers and columns to error messages spanning multiple files,If an error message is emitted that spans several files  only the  primary file currently has line and column data attached. This is  useful information  even in files other than the one in which the error  occurs. We can often work out which line and column the error  corresponds to in other files — in this case it is helpful to add them  (in the case of ambiguity  the first relevant line/column is picked   which is still helpful than none).   ,6,65,   src/test/ui/cross-file-errors/underscore.rs--20--0--20   src/test/ui/cross-file-errors/main.rs--16--0--16   src/librustc_errors/emitter.rs--12--1--13   src/test/ui/cross-file-errors/main.stderr--11--0--11   src/librustc_errors/snippet.rs--2--1--3   src/tools/compiletest/src/runtest.rs--1--1--2,Adaptive,
114058,c483808e0ff9836bc1cda0ce95d77c8b7d3be91c,Factor out some trans bits., ,1,52,   src/boot/me/trans.ml--27--25--52,Adaptive,
48969,4fd5aed55132eb4a65464c5018c106614d8d5504,do not overwrite child def-id in place but rather remove/insert,When inserting a node N into the tree of impls  we sometimes find than  an existing node C should be replaced with N. We used to overwrite C  in place with the new def-id N -- but since the lists of def-ids are  separated by simplified type  that could lead to N being inserted in  the wrong place. This meant we might miss conflicts. We are now not  trying to be so smart -- we remove C and then add N later.   ,3,33,   .../traits/specialize/specialization_graph.rs--17--5--22   .../compile-fail/specialization/issue-52050.rs--9--0--9   src/librustc/traits/coherence.rs--1--1--2,Adaptive,
102621,1a6dadad5bc7a0bb85f67ddaa9d38d9d4f741057,fix trailing whitespace, ,1,2,   src/libcore/sync.rs--1--1--2,Perfective,
102006,ac31fdd9c4e3efbab473614bf1a7386f18ac9ae9,Fix cross-crate inlining of intrinsics, ,2,32,   src/rustc/middle/trans/base.rs--29--1--30   src/test/run-pass/intrinsic-atomics-cc.rs--0--2--2,Corrective,
81218,a8f5989afbd32d76f65847e64f947851d3fc0059,typo, ,1,2,   src/doc/reference.md--1--1--2,,
76179,52d3de7a7e88b519dceda6f6a3e0032ff1800b7b,"Remove ""this""", ,1,2,   src/libsyntax/ext/tt/macro_rules.rs--1--1--2,,
4603,a60f6275fd5e73651a567e9effceac5c32644420,Make `x.py d` an alias for `x.py doc`, ,1,9,   src/bootstrap/flags.rs--5--4--9,,
94118,f0630fdc8bd10a40c988e295482882aa5fce207e,doc: Fix the tutorial's link to rustpkg docs, ,1,4,   doc/tutorial.md--2--2--4,,
10767,e4efccd4a6eef45e9648452360accab48b28f674,Fix derived PartialOrd operators,The derived implementation of `partial_cmp` compares matching fields one  by one  stopping the computation when the result of a comparison is not  equal to `Some(Equal)`.    On the other hand the derived implementation for `lt`  `le`  `gt` and  `ge` continues the computation when the result of a field comparison is  `None`  consequently those operators are not transitive and inconsistent  with `partial_cmp`.    Fix the inconsistency by using the default implementation that fall-backs  to the `partial_cmp`. This also avoids creating very deeply nested  closures that were quite costly to compile.   ,2,28,   .../src/deriving/cmp/partial_ord.rs--1--20--21   src/test/ui/derives/derive-partial-ord.rs--7--0--7,,
75613,6a12818c23d71b329fc36088c5722cd0223d5c07,Bump diff to 0.1.8. Fixes #606., ,2,6,   Cargo.lock--2--2--4   Cargo.toml--1--1--2,,
70567,56d3bc70080ec9ae4fca650df8708d0aae410f41,Handle `/**` and `~~~` in `DOC_MARKDOWN`, ,2,64,   clippy_lints/src/doc.rs--39--7--46   tests/compile-fail/doc.rs--17--1--18,,
29610,c3df8b185b2832303b6989b18879cd8236fe594e,Rustup to rustc 1.41.0-nightly (0c987c5c0 2019-11-23), ,1,7,   src/constant.rs--6--1--7,,
6819,18b0e7bf2cc527aae98af62a9d66b26759d84db3,Fix must_use on `Option::is_none`,This fixes the `#[must_use = ...]` on `Option::is_none` to have a working suggestion. ,1,2,   library/core/src/option.rs--1--1--2,,
91146,e0088ef80b541b1cd2f99bd03765853f2df7ed44,Highlight the `mod` in `extern mod x;` as Error.,Just like the bare keyword `crate` is highlighted as Error (a little  dubious  actually  given macros)  `mod` is invalid after `extern`: it's  obsolete syntax.   ,1,4,   src/etc/vim/syntax/rust.vim--3--1--4,,
103121,cd38377b1b558ebf53a6401b0baf02e0329ba58b,Add asserts to check fail_sched_loop() only once, ,4,18,   src/rt/rust_task.cpp--7--1--8   src/rt/rust_builtin.cpp--5--1--6   src/rt/rust_globals.h--2--0--2   src/rt/rust_kernel.cpp--1--1--2,,
42798,6870638c3fb66c2abb20633bf40cc09ccc760047,Fix an endless loop in the tests., ,2,8,   tests/ui/implicit_return.rs--2--2--4   tests/ui/implicit_return.stderr--2--2--4,,
35251,89940e541f921b5b22c12a24f6c84e32c691a9a4,Fix bugs related to file-lines (#3684), ,14,96,   src/visitor.rs--23--17--40   src/missed_spans.rs--6--8--14   tests/source/file-lines-7.rs--7--0--7   tests/target/file-lines-7.rs--6--0--6   src/utils.rs--4--1--5   src/config/file_lines.rs--3--1--4   tests/source/issue-3494/crlf.rs--3--0--3   tests/source/issue-3494/lf.rs--3--0--3   tests/target/issue-3494/crlf.rs--3--0--3   tests/target/issue-3494/lf.rs--3--0--3   src/bin/main.rs--1--1--2   src/source_map.rs--1--1--2   tests/source/issue-3636.rs--1--1--2   tests/target/issue-3636.rs--1--1--2,,
59596,756026563d82f8d339f7d66c4ca5f5974e210f82,Fix incorrect test in `time::tests::system_time_math`., ,1,2,   src/libstd/time/mod.rs--1--1--2,,
67832,b1b35dd1f20b011cb6807ee56c5829753351b977,Implement env  reentrant mutex  and partially implement scoped thread locals. Better error messages for unsupported features, ,10,110,   src/libstd/sys/redox/mutex.rs--29--5--34   src/libstd/sys/redox/thread_local.rs--15--8--23   src/libstd/sys/redox/os.rs--18--4--22   src/libstd/sys/redox/rwlock.rs--7--5--12   src/libstd/sys/redox/condvar.rs--7--1--8   src/libstd/sys/redox/thread.rs--3--2--5   src/libstd/sys/redox/fs.rs--2--0--2   src/libstd/sys/redox/stack_overflow.rs--1--1--2   src/libstd/sys/redox/fd.rs--1--0--1   src/libstd/sys/redox/pipe.rs--1--0--1,,
110353,f02c998a8d43b66b8fcf7b89db283c837971c250,snap: Register new snapshots, ,1,5,   src/snapshots.txt--5--0--5,,
64270,7ef1b39b2525dc5475f86b6dc27aa60fe5b3fdca,Remove extra wait from Child docs, ,1,2,   src/libstd/process.rs--1--1--2,,
78125,b13d318f48f181292e8efbdd4fe2d0353e1f51d2,all: remove unneeded deref and/or ref operations, ,16,70,   src/matches.rs--5--5--10   src/types.rs--5--5--10   src/consts.rs--3--3--6   src/lifetimes.rs--3--3--6   src/loops.rs--3--3--6   src/attrs.rs--2--2--4   src/needless_bool.rs--2--2--4   src/returns.rs--2--2--4   src/strings.rs--2--2--4   src/utils.rs--0--4--4   src/collapsible_if.rs--1--1--2   src/eta_reduction.rs--1--1--2   src/len_zero.rs--1--1--2   src/methods.rs--1--1--2   src/misc.rs--1--1--2   src/ptr_arg.rs--1--1--2,,
13100,7bd754cf8ca8e4b673f5432c837150b53c8d713d,Fix tests (hopefully), ,2,6,   library/core/tests/mem.rs--2--2--4   compiler/rustc_mir/src/const_eval/error.rs--1--1--2,,
85508,65d3a40c07d1efae8039d3341a07ac748063fc79,libcore: fix move semantics fallout, ,2,6,   src/libcore/num/mod.rs--2--2--4   src/libcore/iter.rs--1--1--2,,
81896,1f5e45b76961d54e3b825c3c6af6b6e02504d2be,Include feature `core` to get access to `wrapping_add`., ,1,3,   src/test/run-pass/small-enum-range-edge.rs--3--0--3,,
8427,c05760ff90fbf4ac677db592b2efe25fab5fac6c,Fix `macro_use_import` ICE, ,3,13,   tests/ui/macro_use_imports.fixed--5--1--6   tests/ui/macro_use_imports.rs--5--1--6   clippy_lints/src/macro_use.rs--1--0--1,,
95234,b32617666a30972f9bcc3c4c619b862f14350d22,std: run test fix for ARM android, ,1,8,   src/libstd/run.rs--4--4--8,,
72134,7566484b8ad6ea92cc7c69cf77f4c72aed738479,Bump to 0.0.65, ,2,6,   CHANGELOG.md--4--0--4   Cargo.toml--1--1--2,,
41984,d7a7ce9edd487dc151426dcb6d89911cc741e605,Utilize specialized zip iterator impl, name                        old ns/iter  new ns/iter  diff ns/iter   diff %  speedup   fmt::write_str_macro1       13 927       12 489             -1 438  -10.33%   x 1.12   fmt::write_str_macro2       24 633       23 418             -1 215   -4.93%   x 1.05   fmt::write_str_macro_debug  234 633      233 092            -1 541   -0.66%   x 1.01   fmt::write_str_ref          5 819        5 823                   4    0.07%   x 1.00   fmt::write_str_value        6 012        5 828                -184   -3.06%   x 1.03   fmt::write_vec_macro1       18 550       17 143             -1 407   -7.58%   x 1.08   fmt::write_vec_macro2       30 369       28 920             -1 449   -4.77%   x 1.05   fmt::write_vec_macro_debug  244 338      244 901               563    0.23%   x 1.00   fmt::write_vec_ref          5 952        5 885                 -67   -1.13%   x 1.01   fmt::write_vec_value        5 944        5 894                 -50   -0.84%   x 1.01   ,1,10,   src/libcore/fmt/mod.rs--6--4--10,,
28122,751fe7c43d428595d965d22ff21cc3c39dbccd5a,Add error code explanation for E0477, ,8,32,   src/librustc_error_codes/error_codes/E0477.md--22--0--22   src/librustc_error_codes/error_codes.rs--1--1--2   src/test/ui/kindck/kindck-impl-type-params.stderr--1--1--2   src/test/ui/kindck/kindck-send-object1.stderr--1--1--2   src/test/ui/issues/issue-26217.stderr--1--0--1   src/test/ui/issues/issue-54943.stderr--1--0--1   ...egions-bounded-by-trait-requiring-static.stderr--1--0--1   .../regions-bounded-method-type-parameters.stderr--1--0--1,,
14915,62ba365195e37b0508dc35f73b55243cb1aef7f3,Review comments: use newtype instead of `bool`, ,5,53,   compiler/rustc_typeck/src/check/fn_ctxt/_impl.rs--11--11--22   compiler/rustc_typeck/src/check/_match.rs--12--6--18   compiler/rustc_middle/src/traits/mod.rs--7--1--8   .../rustc_infer/src/infer/error_reporting/mod.rs--2--1--3   compiler/rustc_typeck/src/check/fn_ctxt/checks.rs--1--1--2,,
79673,3c987812569fbf4f590162d8324f026d53783bd1,Add missing end of string, ,1,1,   src/librustc_typeck/diagnostics.rs--1--0--1,,
71274,8b25bc8a9a709c516d986193bce7a74ed1861bcc,directly push stackframes for constants when they are encountered, ,2,52,   src/interpreter/stepper.rs--27--19--46   src/interpreter/mod.rs--2--4--6,,
75095,56c73e58a24c7106e7160df4624b64bf7672e089,Indicate that trans is always dependent on typeck, ,3,29,   .../compile-fail/dep-graph-assoc-type-trans.rs--22--0--22   src/librustc_trans/trans/base.rs--4--0--4   src/test/compile-fail/dep-graph-trait-impl.rs--1--2--3,,
25047,f7666e9c2bf733c4f8f3271a3ab2a6e184396972,Fix typo found by @lqd, ,1,2,   Readme.md--1--1--2,,
113014,525966a543a6d03d10393b55a5207678aab8c147,Fix a couple bugs in iter_sequence  un-XFAIL vec-drop.rs., ,2,21,   src/comp/middle/trans.rs--17--3--20   src/Makefile--1--0--1,,
53602,2f1b34cc15d9ce8daecfb7855957a36e6e10f2e5,Add backticks to `main` not found errors., ,11,30,   src/librustc/middle/entry.rs--2--2--4   src/test/ui/error-codes/E0601.stderr--2--2--4   src/test/ui/feature-gate/issue-43106-gating-of-bench.stderr--2--2--4   src/test/ui/feature-gate/issue-43106-gating-of-test.stderr--2--2--4   src/test/compile-fail/cfg-attr-cfg-2.rs--1--1--2   src/test/compile-fail/cfg-in-crate-1.rs--1--1--2   src/test/compile-fail/elided-test.rs--1--1--2   src/test/compile-fail/missing-main.rs--1--1--2   src/test/ui/feature-gate/issue-43106-gating-of-bench.rs--1--1--2   src/test/ui/feature-gate/issue-43106-gating-of-test.rs--1--1--2   src/test/ui/main-wrong-location.stderr--1--1--2,,
89217,1635ef2a1958749e7b0cf4e812e1a87cd919027f,std: Move dynamic_lib from std::unstable to std,This leaves a deprecated reexport in place temporarily.    Closes #1457.   ,12,47,   src/libstd/lib.rs--9--4--13   src/libstd/unstable/mod.rs--0--13--13   src/libstd/{unstable=>}/dynamic_lib.rs--3--0--3   src/compiletest/procsrv.rs--1--1--2   src/librustc/metadata/filesearch.rs--1--1--2   src/librustc/plugin/load.rs--1--1--2   src/librustdoc/plugins.rs--1--1--2   src/librustdoc/test.rs--1--1--2   src/libstd/rt/backtrace.rs--1--1--2   src/test/auxiliary/linkage-visibility.rs--1--1--2   src/test/run-make/extern-fn-reachable/main.rs--1--1--2   src/test/run-pass/linkage-visibility.rs--1--1--2,,
79541,be38926b6941f13b1f03c2e3523b98dd256b3c7b,Add E0119 error explanation,Add more explanations   ,1,38,   src/librustc_typeck/diagnostics.rs--34--4--38,,
24400,cd9921ed82759d9e49e337f67d691c2d681f4e16,Refactor changes, ,2,3,   src/test/ui/unknown-lint-tool-name.stderr--0--2--2   src/librustc_error_codes/error_codes/E0710.md--0--1--1,,
51504,c658fc8cbcd1f199edd445a49cb43139ebdc5f02,Version bump, ,4,15,   min_version.txt--3--3--6   Cargo.toml--2--2--4   CHANGELOG.md--3--0--3   clippy_lints/Cargo.toml--1--1--2,,
74307,4e8e607d8469a8882944233e4bb3ee45d2a6435a,Fix #[derive] for empty structs with braces, ,7,70,   src/libsyntax_ext/deriving/clone.rs--13--12--25   src/test/run-pass/empty-struct-braces-derive.rs--22--0--22   src/libsyntax_ext/deriving/generic/mod.rs--7--4--11   src/libsyntax_ext/deriving/debug.rs--4--2--6   src/libsyntax_ext/deriving/encodable.rs--1--1--2   src/libsyntax_ext/deriving/hash.rs--1--1--2   src/test/auxiliary/custom_derive_plugin_attr.rs--1--1--2,,
77465,5e2633b7420b0363720e1770b6c308cfabd0a8dd,adapt to rust sytax::ast::Mac changes, ,1,7,   src/macros.rs--3--4--7,,
94120,c3ad785d83b583ad693424d9f0f993e36f0990f5,Remove rust_run_program.cpp,Some of the functions could be converted to rust  but the functions dealing with  signals were moved to rust_builtin.cpp instead (no reason to keep the original  file around for one function).    Closes #2674   ,5,76,   src/rt/rust_run_program.cpp--0--45--45   src/rt/rust_builtin.cpp--15--0--15   src/libstd/run.rs--11--3--14   mk/rt.mk--0--1--1   src/rt/rustrt.def.in--0--1--1,,
31459,d4e3e6bc15ece1c017ec7bd1fd892c6a981b2020,Delete extra file, ,1,16,   .../feature-gate-exhaustive-patterns.nll.stderr--0--16--16,,
4362,bbc6b2691ef07401690382103b67509b3189f939,Change __iterator_get_unchecked to work with TrustedRandomAccessNoCoerce, ,8,42,   library/core/src/iter/adapters/zip.rs--17--11--28   library/core/src/iter/adapters/cloned.rs--1--1--2   library/core/src/iter/adapters/copied.rs--1--1--2   library/core/src/iter/adapters/enumerate.rs--1--1--2   library/core/src/iter/adapters/fuse.rs--1--1--2   library/core/src/iter/adapters/map.rs--1--1--2   library/core/src/iter/range.rs--1--1--2   library/core/src/iter/traits/iterator.rs--1--1--2,,
20711,6e12272af0838adf4b13fe69c1c62e24d0755125,Replace `is_global` call on data with call on predicate, ,1,2,   src/librustc_trait_selection/traits/fulfill.rs--1--1--2,,
2068,e017e458abce863b1d3ce19852bf683fcd972980,Fix typos in rustdoc/lints,Refs: https://github.com/rust-lang/rust/pull/85223 ,1,6,   src/doc/rustdoc/src/lints.md--3--3--6,,
28738,775076ff4dc9ce4986a1286669cfa268b01ac592,update reference, ,1,2,   src/doc/reference--1--1--2,,
46741,4973094feb0d0b1498a1bc3ac250ab87cefdd61a,Allow illegal_floating_point_literal_pattern. These will need to be updated at some point.,Discussion can be found on rust-lang/rust#41620.   ,1,1,   src/test/ui/run-pass/union/union-pat-refutability.rs--1--0--1,,
57750,95937990c5e772721e83c603dcca7c5aed8cdd0e,save-analysis: fix regression from #45709,closes https://github.com/nrc/rls-analysis/issues/117   ,1,27,   src/librustc_save_analysis/dump_visitor.rs--16--11--27,,
11034,3336dd3565605af2c40ed9eee87355c23815496e,Bind all clean::Type variants and remove FIXME, ,1,12,   src/librustdoc/html/render/cache.rs--10--2--12,,
102015,68704e4ca7b1bf0482de59245ca20a18f5be2c0e,libstd: Make URLs structs, ,1,6,   src/libstd/net_url.rs--3--3--6,,
71034,0e04153a7051135dafd8c86b5eab3f591639a96b,Remove uneccessary  leftover comments in lint_iter_mut(), ,1,3,   clippy_lints/src/methods.rs--0--3--3,,
82912,7e382132a57953e09bbb4e41152107032d69a2cf,Make default_trait_impls private and add accessor, ,2,8,   src/librustc/middle/ty.rs--5--1--6   src/librustc/middle/traits/select.rs--1--1--2,,
19480,62e75a1f221947b4f5f8adba5992b68e6a0d3f42,Fix ICE while building MIR with type errors,Fixes #74047.   ,3,34,   src/test/ui/issue-74047.rs--17--0--17   src/test/ui/issue-74047.stderr--12--0--12   src/librustc_mir_build/hair/pattern/mod.rs--0--5--5,,
12229,fa75f63690c9a7e0c2b491e3e1d13a3ed8eb5b0c,Fix field_reassign_with_default for private fields, ,2,35,   clippy_lints/src/default.rs--14--18--32   tests/ui/field_reassign_with_default.rs--3--0--3,,
100490,2a5713ed5c129977c4c3880f633f9fce35813ab1,core: rename unit to nil. Close #4080., ,2,2,   src/libcore/core.rc--1--1--2   src/libcore/{unit.rs=>nil.rs}--0--0--0,,
12442,03b4ea463a8b2e45032e9cd6f7e293561b01c3ce,Mark SlicePattern trait uses as ?Sized,This trait is ?Sized and is often slices.    Signed-off-by: Ian Jackson <ijackson@chiark.greenend.org.uk>   ,1,4,   library/core/src/slice/mod.rs--2--2--4,,
15101,0558e6eb9337960a1415e037ae7a44e3aa947479,bootstrap: fall back to auto-detected CXX,This allows us to use the C++ compiler configured via  `CXX_target_triple` env vars   ,1,3,   src/bootstrap/cc_detect.rs--2--1--3,,
78628,5bcbc5c735ac9cf194f79bd10e13346c6f3581a6,Bug #27621 - Make sure that LLVM FileCheck is available on the system, ,1,3,   configure--2--1--3,,
24228,7a76ec062deeb9b99a55982deb23597973d8dc21,deps: bump to rustc v644, ,9,77,   Cargo.lock--24--25--49   src/items.rs--4--5--9   src/utils.rs--2--3--5   Cargo.toml--2--2--4   src/closures.rs--1--1--2   src/modules.rs--1--1--2   src/modules/visitor.rs--1--1--2   src/spanned.rs--1--1--2   src/types.rs--1--1--2,,
79979,e87c62fb12e6b02cfc39fc2a16c315615714757a,Modify String::push to reallocate more conservatively in case of the character's UTF-8 representation is bigger than 1 byte, ,1,34,   src/libcollections/string.rs--17--17--34,,
112137,efb738153c7248601a9a1b294b0ad8fd9c27023c,Add an XFAILed test for treating alts as expressions, ,1,31,   src/test/run-pass/expr-alt.rs--31--0--31,,
112157,e939d6f17c8dce7c2154c08ee044b749cbba41f4,More machinery for adding an expr_call_self AST node., ,1,19,   src/comp/middle/fold.rs--18--1--19,,
111492,37d5dd94718a902a5e76e9e87d888a3999744c37,rustc: Group the variable binding machinery into a separate data structure during unification, ,1,51,   src/comp/middle/ty.rs--27--24--51,,
67108,8575184b394758f00c02517bfb9e8398b92d5d30,Fix rebase breakage, ,7,68,   src/librustc/middle/stability.rs--12--8--20   src/librustc_privacy/lib.rs--10--6--16   src/librustc/middle/cstore.rs--9--6--15   src/librustc_const_eval/eval.rs--6--3--9   src/librustc/ty/mod.rs--2--2--4   src/librustc/middle/dead.rs--1--1--2   src/librustc_passes/loops.rs--1--1--2,,
83158,08967c7a7fc00d19029751f8a0d1780dcb7413f8,tests: fix fallout from changed error messages., ,5,21,   src/test/compile-fail/const-block-non-item-statement.rs--4--4--8   src/test/compile-fail/issue-7364.rs--3--3--6   src/test/compile-fail/issue-16538.rs--2--1--3   src/test/compile-fail/issue-18118.rs--1--1--2   src/test/compile-fail/static-vec-repeat-not-constant.rs--1--1--2,,
81950,5dc23be5b1b5da1fc255e0b3aafbefbdffb2b10e,rustdoc: output stderr on doc-test fail,Forward output from stderr when a test executable panics/fails.   ,1,5,   src/librustdoc/test.rs--3--2--5,,
17364,d719b485434eac557e65bf55cca79e63f7b83d5b,Move map_err_ignore from style to pedantic, ,5,10,   clippy_lints/src/lib.rs--1--2--3   clippy_lints/src/map_err_ignore.rs--1--1--2   src/lintlist/mod.rs--1--1--2   tests/ui/map_err.stderr--1--1--2   tests/ui/map_err.rs--1--0--1,,
102834,68e9aa5fcbfbb1b5e87c667372ac7212746779c0,Make at_vec push functions more like the current vec ones., ,1,20,   src/libcore/at_vec.rs--14--6--20,,
98739,61524251800ba5408166b45ef640f87da965dd73,More descriptive error messages for debug info tests, ,1,4,   src/compiletest/runtest.rs--2--2--4,,
20505,234019758bfff600e8972481158882d9e12280cf,Add peek test for projections, ,2,33,   src/test/ui/mir-dataflow/liveness-projection.rs--22--0--22   .../ui/mir-dataflow/liveness-projection.stderr--11--0--11,,
13764,bf46f78ca7e15631f08253c14975896030ca24a8,Fix clippy error, ,1,8,   clippy_lints/src/redundant_clone.rs--4--4--8,,
89628,154dfb59fe301035d047cf4935f76bc612b6ff20,term: update example to be right (thanks @SiegeLord), ,1,7,   src/libterm/lib.rs--5--2--7,,
107862,fba0df72d320a5b2e19678c9490825568de6f9a4,Use attributes for native module ABI and link name [temp],"This patch adds support of using attributes to specify native mode ABI  and link name. The old optional syntax like:    native ""cdecl"" mod llvm = ""rustllvm"" { ... }  is still supported.    This is a transitional commit to avoid making a stage1 (backward  imcompatible) snapshot.   ",1,26,   src/comp/syntax/parse/parser.rs--25--1--26,,
102041,df34fe917a6dd8b4696a36bf4e4e3e162ca97607,doc: Trim down the tutorial a little more, ,1,56,   doc/tutorial.md--24--32--56,,
112707,2bba49a9feed613c2f018d5aa751df3c7a49a3d6,Fix missing path in expr_ext., ,2,5,   src/comp/front/parser.rs--2--1--3   src/comp/front/ast.rs--1--1--2,,
50813,f46d0213e4825633f182d9b9026b96a7358a1e93,Remove `ObligationForest::cache_list`.,It's never used in a meaningful way.   ,1,5,   src/librustc_data_structures/obligation_forest/mod.rs--0--5--5,,
13407,504d27cb0c705a51f437e0e02a19f2e7512fa8ab,Make super_traits_of return an iterator, ,1,27,   compiler/rustc_middle/src/ty/context.rs--15--12--27,,
41445,60332941c9aab8419f9bc1dbec5071214f0d8077,Rustfmt, ,1,2,   clippy_lints/src/consts.rs--1--1--2,,
75896,43725dcb3999ed1940dd5b8c5a5e41eabf45b0b4,Fix for issue #27889: same field names in enum variants, ,6,51,   src/librustc_borrowck/borrowck/mod.rs--14--8--22   src/test/run-pass/issue-27889.rs--16--0--16   src/librustc_borrowck/borrowck/fragments.rs--2--2--4   .../borrowck/gather_loans/restrictions.rs--3--1--4   src/librustc_borrowck/borrowck/check_loans.rs--1--2--3   src/librustc_borrowck/borrowck/move_data.rs--1--1--2,,
69039,168d9e77456b09d062f84d808c0f42336c03acb1,don't use `type_is_immediate` for finding fat ptr casts, ,1,37,   src/interpreter/mod.rs--7--30--37,,
110199,81acf69f9708a236ef78faa180575ae7b618fba9,Add head and tail functions to std::ivec,They even have typestate preconditions   ,2,28,   src/test/run-pass/lib-ivec.rs--18--0--18   src/lib/ivec.rs--10--0--10,,
85243,1614d92f5179d3fd947fedc903bd13b0824a42de,rustc_resolve: move unused import checking into its own module., ,2,69,   src/librustc_resolve/check_unused.rs--35--0--35   src/librustc_resolve/lib.rs--4--30--34,,
41931,95f2a9dbfcaaf8b319c2743ea641b785ff4c9d2e,Add run-rustfix to mem_replace test, ,3,27,   tests/ui/mem_replace.fixed--21--0--21   tests/ui/mem_replace.stderr--2--2--4   tests/ui/mem_replace.rs--2--0--2,,
55619,8a82e8e89f6eec3744f12d45c12ce05d48233d8d,Mention in the exact_chunks docs that this can often be optimized better by the compiler,And also link from the normal chunks iterator to the exact_chunks one.   ,1,15,   src/liballoc/slice.rs--15--0--15,,
76004,f61ba91c2da589553ef3207134955768c26c00b3,Minor clippy fixes, ,1,4,   src/bin/rustfmt.rs--2--2--4,,
63230,05329e578014ee1e9a0a45658e5fba60f6b06e83,Remove use of `Self: Sized` from libsyntax,The bound is not required for compiling but it prevents using `next_token()` from a trait object.    Fixes #33506.   ,1,2,   src/libsyntax/parse/lexer/mod.rs--1--1--2,,
23277,67128f1e4a880dd8c364f38e919bac19afb08282,Improved try_macro_suggestion, ,2,9,   src/librustc_parse/parser/diagnostics.rs--4--3--7   src/librustc_parse/parser/expr.rs--1--1--2,,
37153,610f377b7de358e6c3a7d57fe1a236347a48c833,Rustup to rustc 1.36.0-nightly (f49269398 2019-05-25), ,2,10,   patches/0015-Remove-usage-of-unsized-locals.patch--3--3--6   src/constant.rs--2--2--4,,
85652,ce4318ad86f2ccd0710247020269ba0ba22c6d59,Reviewer comments, ,13,66,   src/librustc_typeck/check/mod.rs--3--19--22   src/test/compile-fail/assoc-eq-expr-path.rs--10--0--10   src/librustc/middle/resolve_lifetime.rs--3--2--5   src/librustc_typeck/astconv.rs--1--4--5   src/librustdoc/clean/mod.rs--3--2--5   src/librustc_typeck/collect.rs--1--2--3   src/librustc_typeck/diagnostics.rs--2--1--3   .../hrtb-precedence-of-plus-error-message.rs--1--2--3   src/librustc/diagnostics.rs--1--1--2   src/librustc/middle/privacy.rs--1--1--2   src/librustc/middle/resolve.rs--1--1--2   src/librustc_typeck/coherence/mod.rs--1--1--2   .../phase-syntax-doesnt-resolve.rs--1--1--2,,
53772,54467ae319de2d23819df897d1813e267e4a3097,test: ignore asm tests on mips* which won't work,mov is not a valid assembly mnemonic on mips.   ,5,10,   src/test/compile-fail/asm-bad-clobber.rs--2--0--2   src/test/compile-fail/asm-in-bad-modifier.rs--2--0--2   src/test/compile-fail/asm-misplaced-option.rs--2--0--2   src/test/compile-fail/asm-out-no-modifier.rs--2--0--2   src/test/compile-fail/asm-out-read-uninit.rs--2--0--2,,
14451,9fc991a0ea1df0a5ef96c50fb8dce115c096d8f5,Add test for #[deprecated] attribute on trait impl block., ,2,19,   src/test/ui/deprecation/deprecation-sanity.stderr--9--1--10   src/test/ui/deprecation/deprecation-sanity.rs--9--0--9,,
77823,4f5267dba31fdc49e436c50009fe33a80f21d477,add a few accessors to Graph, ,1,10,   src/librustc_data_structures/graph/mod.rs--10--0--10,,
91283,9abff54d61babab8050c108f7cb6b957b1636337,Add Pod trait bound to std::num::Primitive, ,1,4,   src/libstd/num/mod.rs--3--1--4,,
46062,f2bf92a4e8ee93dd033a35a810c64e56aee67825,aarch64-pc-windows-msvc: Don't link libpanic_unwind to libtest., ,1,10,   src/libtest/lib.rs--9--1--10,,
74934,1ca9f03eadf99446f3c208dd1b4cb891f9f90ca7,Nits and other local improvements in resolve, ,3,55,   src/librustc_resolve/build_reduced_graph.rs--8--21--29   src/librustc_resolve/lib.rs--9--12--21   src/librustc_resolve/resolve_imports.rs--2--3--5,,
108263,9efdd0f3262ee30e614c14577dcc979a9ad68036,Merge ast::proto_shared and ast::proto_closure,Now they are both just proto_shared and proto_shared takes an  argument indicating that it is sugared as 'lambda'   ,15,106,   src/comp/middle/typeck.rs--14--11--25   src/comp/middle/trans.rs--12--6--18   src/comp/syntax/ast.rs--7--4--11   src/comp/syntax/parse/parser.rs--6--5--11   src/comp/middle/ty.rs--6--4--10   src/comp/syntax/print/pprust.rs--3--3--6   src/comp/front/test.rs--2--2--4   src/comp/metadata/tydecode.rs--2--1--3   src/comp/middle/freevars.rs--2--1--3   src/comp/middle/resolve.rs--1--2--3   src/comp/middle/trans_common.rs--2--1--3   src/comp/middle/trans_objects.rs--2--1--3   src/comp/metadata/tyencode.rs--1--1--2   src/comp/middle/alias.rs--1--1--2   src/comp/util/ppaux.rs--1--1--2,,
33522,c16248d3a1893b985d7957bfed16ed119fdbfd6f,typeck/pat.rs: extract `check_pat_ident`., ,1,39,   src/librustc_typeck/check/pat.rs--22--17--39,,
94496,7baff57f268eff79cd8ed6a8d7fd48d4b3f81878,Improve name mangling for gdb,Remove __extensions__ from method symbols as well as the meth_XXX. The XXX is  now used to append a few characters at the end of the name of the symbol.    Closes #6602   ,5,64,   src/librustc/back/link.rs--22--9--31   src/libsyntax/ast_map.rs--15--12--27   src/librustc/middle/trans/base.rs--1--1--2   src/test/compile-fail/ambig_impl_2_exe.rs--1--1--2   src/test/compile-fail/ambig_impl_unify.rs--1--1--2,,
26358,c18476e231058b8dd8528ca98b0b51ff14b729be,[ImgBot] Optimize images,*Total -- 10.65kb -> 8.44kb (20.82%)    /src/etc/installer/gfx/rust-logo.png -- 5.71kb -> 3.82kb (33.11%)  /src/librustdoc/html/static/down-arrow.svg -- 0.63kb -> 0.50kb (20.44%)  /src/librustdoc/html/static/wheel.svg -- 3.86kb -> 3.68kb (4.66%)  /src/librustdoc/html/static/brush.svg -- 0.47kb -> 0.44kb (4.61%)    Signed-off-by: ImgBotApp <ImgBotHelp@gmail.com>   ,4,7,   src/librustdoc/html/static/brush.svg--1--1--2   src/librustdoc/html/static/down-arrow.svg--1--1--2   src/librustdoc/html/static/wheel.svg--1--1--2   src/etc/installer/gfx/rust-logo.png--0--1--1,,
10701,6362540f11aaa2f133c12cbb0b3ee903ea6f7f0e,Limit all types to 64 lanes, ,9,102,   crates/core_simd/src/ops.rs--25--6--31   crates/core_simd/src/masks/mod.rs--21--7--28   crates/core_simd/src/masks/full_masks.rs--19--5--24   crates/core_simd/src/lanes_at_most_64.rs--6--0--6   crates/core_simd/src/macros.rs--3--3--6   crates/core_simd/src/fmt.rs--1--1--2   crates/core_simd/src/masks/bitmask.rs--1--1--2   crates/core_simd/src/vectors_u8.rs--1--1--2   crates/core_simd/src/lib.rs--1--0--1,,
